<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[„ÄêÁΩÆÈ°∂„ÄëDISCLAIMER]]></title>
    <url>%2F9999%2F12%2F31%2FDISCLAIMER%2F</url>
    <content type="text"><![CDATA[Êú¨Â∏ñ‰∏∫ÁΩÆÈ°∂ÂÜÖÂÆπÔºåÊúÄÊñ∞ÂÜÖÂÆπËØ∑Âêë‰∏ãÁøª! Êú¨ÂçöÂÆ¢‰ªÖ‰æõÊú¨ËíüËíªÂ§ç‰π†Áî®ÔºåÂª∫ËÆÆÂàùÂ≠¶ËÄÖ‰∏çË¶ÅÁúãÊú¨ËíüËíªÁöÑÂçöÂÆ¢„ÄÇ ËÄå‰∏îÊú¨ËíüËíªÊáíÁôåÊôöÊúüÔºåÂçöÂÆ¢ÂÜôÁöÑ‰∏ÄÁÇπÈÉΩ‰∏çÂ•Ω„ÄÇ ÊúâËØóËµûÊõ∞Ôºö Ê®°ÊãüÂè™‰ºöÁåúÈ¢òÊÑè Ë¥™ÂøÉÂè™ËÉΩËøáÊ†∑‰æã Êï∞Â≠¶‰∏äÊù•ÂÖàÊâìË°® D P ‰∏ÄËà¨ÁúãËßÑÂæã ÁªÑÂêàÊï∞Â≠¶ÁúãËøêÊ∞î ËÆ°ÁÆóÂá†‰ΩïÁûéÊö¥Âäõ ÂõæËÆ∫‰∏ÄÈ°øÂ•óÊ®°Êùø Êï∞ËÆ∫Âè™‰ºöG C D Êú¨Á´ôÂú∞ÂùÄ: oi.tiger0132.tk Ê¨¢Ëøé‰∫íÈìæ„ÄÇ]]></content>
      <tags>
        <tag>DISCLAIMER</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÁΩëÁªúÊµÅ„ÄëBZOJ1711 - ÂêÉÈ•≠]]></title>
    <url>%2F2018%2F03%2F04%2F%E3%80%90%E7%BD%91%E7%BB%9C%E6%B5%81%E3%80%91BZOJ1711-%E5%90%83%E9%A5%AD%2F</url>
    <content type="text"><![CDATA[È¢òÊÑè ‰º†ÈÄÅÈó®ÔºöBZOJCH1711 - ÂêÉÈ•≠ÂíåÊ¥õË∞∑ P2891 - ÂêÉÈ•≠ nnnÂ§¥ÁâõÔºåÊØèÂ§¥ÁâõÂè™ÂêÉÁªôÂÆöÁöÑÈ£üÁâ©ÂíåÈ•ÆÊñôÔºåÊØèÁßçÈ£üÁâ©ÂíåÈ•ÆÊñôÂè™Êúâ‰∏Ä‰∏™ÔºåÈóÆÊúÄÂ§öÂèØ‰ª•ÂñÇÈ•±Â§öÂ∞ëÂ§¥Áâõ„ÄÇ Ëß£Ê≥ï ËøôÈ¢òÂæàÁ•ûÂ•áÁöÑÊúâÈ£üÁâ©ÂíåÈ•ÆÊñôÔºåÂ¶ÇÊûúÂè™Êúâ‰∏ÄÁßçÈÇ£‰πàÂèØ‰ª•ÂÜô‰∫åÂàÜÂõæ„ÄÇ È¶ñÂÖàÊää‰∏ÄÂ§¥ÁâõÊãÜÊàê‰∏§‰∏™ÁÇπxxxÂíåx‚Ä≤x&#x27;x‚Äã‚Ä≤‚Äã‚ÄãÔºåÈ£üÁâ©‰∏éxxxËøûËæπÔºåxxx‰∏éx‚Ä≤x&#x27;x‚Äã‚Ä≤‚Äã‚ÄãËøûËæπÔºåx‚Ä≤x&#x27;x‚Äã‚Ä≤‚Äã‚Äã‰∏éÈ•ÆÊñôËøûËæπ„ÄÇ ÁÑ∂ÂêéÂºÄ‰∏Ä‰∏™Ë∂ÖÁ∫ßÊ∫êsssËøûÂêëÊâÄÊúâÁöÑÈ£üÁâ©ÔºåÂºÄ‰∏Ä‰∏™Ë∂ÖÁ∫ßÊ±áÊääÊâÄÊúâÁöÑÈ•ÆÊñôËøûËøáÂéª„ÄÇ ËæπÊùÉÂÖ®ÈÉ®‰∏∫111„ÄÇÁÑ∂ÂêéÊúÄÂ§ßÊµÅÂç≥ÂèØ„ÄÇ ÂºÄ‰∏§‰∏™ÁÇπxxx‰∏™x‚Ä≤x&#x27;x‚Äã‚Ä≤‚Äã‚ÄãÊòØ‰∏∫‰∫ÜÈôêÂà∂ÊØèÂ§¥ÁâõÂè™ÂêÉ‰∏ÄÁßçÈ£üÁâ©ÂíåÈ•ÆÊñô(ÊÄª‰∏çËÉΩÊää‰∏ÄÂ†ÜÈ•ÆÊñôÂÖ®ÈÉ®ÂñÇÁªô‰∏ÄÂ§¥ÁâõÂêÉÂÖãÈöÜ‰∏ÄÁæ§)„ÄÇ ‰ª£Á†Å 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899#include &lt;bits/stdc++.h&gt;using namespace std;typedef int Flow_Type;const Flow_Type INF = 0x3f3f3f3f;const int N = 1606;struct Edge;int level[N];int head[N];struct Edge &#123; Flow_Type capacity, flow; int to, next;&#125; e[6 * N];bool levelGraph(int s, int t) &#123; memset(level, 0, sizeof level); queue&lt;int&gt; bfs; bfs.push(s); level[s] = 1; while (!bfs.empty()) &#123; int pos = bfs.front(); bfs.pop(); for (int i = head[pos]; i; i = e[i].next) &#123; if (e[i].flow &lt; e[i].capacity &amp;&amp; !level[e[i].to]) &#123; level[e[i].to] = level[pos] + 1; if (e[i].to == t) return true; else bfs.push(e[i].to); &#125; &#125; &#125; return false;&#125;Flow_Type findPath(int s, int t, Flow_Type flow) &#123; if (s == t) return flow; Flow_Type ret = 0; for (int i = head[s]; ret &lt; flow &amp;&amp; i; i = e[i].next) &#123; if (level[s] + 1 == level[e[i].to] &amp;&amp; e[i].flow &lt; e[i].capacity) &#123; Flow_Type tmp = findPath(e[i].to, t, min(e[i].capacity - e[i].flow, flow)); ret += tmp; flow -= tmp; e[i].flow += tmp; e[i ^ 1].flow -= tmp; &#125; &#125; if (!ret) level[s] = -1; return ret;&#125;Flow_Type dinic(int s, int t) &#123; Flow_Type ans = 0; while (levelGraph(s, t)) &#123; ans += findPath(s, t, INF); &#125; return ans;&#125;int cnt = 1;void addEdge(int from, int to, int capacity) &#123; e[++cnt].to = to; e[cnt].next = head[from]; e[cnt].capacity = capacity; head[from] = cnt; e[++cnt].to = from; e[cnt].next = head[to]; e[cnt].capacity = capacity; e[cnt].flow = capacity; head[to] = cnt;&#125;int t, food, cow, drink;int n, f, d, x, a, b;// 1ÊòØË∂ÖÁ∫ßÊ∫ê, tÊòØË∂ÖÁ∫ßÊ±áint main() &#123; scanf("%d%d%d", &amp;n, &amp;f, &amp;d); t = 2 + f + 2*n + d; food = 1; cow = f + 1; drink = f + n + 1; for (int i = 1; i &lt;= n; i++) &#123; scanf("%d%d", &amp;a, &amp;b); for (int j = 1; j &lt;= a; j++) &#123; scanf("%d", &amp;x); addEdge(1 + x, 1 + f + i, 1); &#125; addEdge(1 + f + i, 1 + f + n + i, 1); for (int j = 1; j &lt;= b; j++) &#123; scanf("%d", &amp;x); addEdge(1 + f + n + i, 1 + f + 2*n + x, 1); &#125; &#125; for (int i = 1; i &lt;= f; i++) &#123; addEdge(1, 1 + i, 1); &#125; for (int i = 1; i &lt;= d; i++) &#123; addEdge(1 + f + 2*n + i, t, 1); &#125; printf("%d", dinic(1, t)); return 0;&#125; ÊãìÂ±ï ÁΩëÁªúÊµÅÁúüÊòØÂçöÂ§ßÁ≤æÊ∑±Ôºö ‰∏Ä‰∏™ÁÇπÊãÜÊàêÂ§ö‰∏™ÁÇπÁî®Êù•ÈôêÂà∂ÊµÅÈáè/Âπ≤ÂêÑÁßç‰∫ã &quot;kkkÂàÜÂõæ&quot;ÈóÆÈ¢ò(‰º†ËØ¥‰∏≠ÁöÑ‰∏âÂàÜÂõæ) ‰∏Ä‰∫õÂ§çÊùÇÁöÑÊûÑÂõæ]]></content>
      <categories>
        <category>ÁΩëÁªúÊµÅ</category>
      </categories>
      <tags>
        <tag>ÁΩëÁªúÊµÅ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÁΩëÁªúÊµÅ„ÄëBZOJ1001 - ÁãºÊäìÂÖîÂ≠ê]]></title>
    <url>%2F2018%2F03%2F04%2F%E3%80%90%E7%BD%91%E7%BB%9C%E6%B5%81%E3%80%91BZOJ1001-%E7%8B%BC%E6%8A%93%E5%85%94%E5%AD%90%2F</url>
    <content type="text"><![CDATA[È¢òÊÑè ‰º†ÈÄÅÈó®ÔºöBZOJ1001 - ÁãºÊäìÂÖîÂ≠ê Áªô‰∏ÄÂº†n√ómn\times mn√ómÁöÑÊó†ÂêëÁΩëÊ†ºÂõæÔºåÊ±ÇÂõæÁöÑÊúÄÂ∞èÂâ≤„ÄÇ n,m‚â§103n,m\le 10^3n,m‚â§10‚Äã3‚Äã‚Äã Ëß£Ê≥ï Âõ†‰∏∫Êàë‰ª¨ÊúâÁ•ûÂ•áÁöÑÊúÄÂ§ßÊµÅÊúÄÂ∞èÂâ≤ÂÆöÁêÜÊâÄ‰ª•ËøôÈ¢òÂ∞±Êàê‰∫ÜË£∏ÁöÑÊúÄÂ§ßÊµÅ„ÄÇ ‰ΩÜÊòØËøô‰∏™ËåÉÂõ¥ÊúâÁÇπÂ§ßÂ§ßÂïäÔºåÁúãËµ∑Êù•DinicËøá‰∏ç‰∫Ü„ÄÇ DinicÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶ÊòØO(n2m)O(n^2m)O(n‚Äã2‚Äã‚Äãm)ÔºåÊÑüËßâËøôÈ¢òn=106n=10^6n=10‚Äã6‚Äã‚ÄãÂæàÈöæËøáÂïä„ÄÇ ‰ΩÜÂÖ∂ÂÆûÂ§ßÈÉ®ÂàÜÁΩëÁªúÊµÅÁÆóÊ≥ïÁöÑÊó∂Èó¥‰∏äÁïåÈÉΩÂæàÊùæÔºå‰∫éÊòØDinicÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶ÂèòÊàê‰∫ÜO(O(O(ÁéÑÂ≠¶)))ÂíåO(O(O(Ë∑ëÂæóËøá)))üòÑ„ÄÇ ÂÖ∂ÂÆûËøôÈ¢òÁöÑÊ≠£Ëß£ÊòØËΩ¨ÂØπÂÅ∂Âõæ+ÊúÄÁü≠Ë∑Ø(‰∏ç‰ºöÂÜô&gt;_&lt;)Ôºå‰ΩÜÊòØDinicÂ§çÊùÇÂ∫¶Ëøá‰∫éÁéÑÂ≠¶‰∫éÊòØ‰πüËÉΩËøá„ÄÇ ËÄå‰∏îË≤å‰ººÂ¶ÇÊûúÂÜôÂØπÂÅ∂Âõæ+ÊúÄÁü≠Ë∑ØÊçÆËØ¥‰∏çËÉΩÊâìSPFA(ÁΩëÊ†ºÂõæ) ‰ª£Á†Å 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495#include &lt;bits/stdc++.h&gt;using namespace std;typedef int Flow_Type;const Flow_Type INF = 0x3f3f3f3f;const int N = 1000006;struct Edge;int level[N];int head[N];struct Edge &#123; Flow_Type capacity, flow; int to, next;&#125; e[6 * N];bool levelGraph(int s, int t) &#123; memset(level, 0, sizeof level); queue&lt;int&gt; bfs; bfs.push(s); level[s] = 1; while (!bfs.empty()) &#123; int pos = bfs.front(); bfs.pop(); for (int i = head[pos]; i; i = e[i].next) &#123; if (e[i].flow &lt; e[i].capacity &amp;&amp; !level[e[i].to]) &#123; level[e[i].to] = level[pos] + 1; if (e[i].to == t) return true; else bfs.push(e[i].to); &#125; &#125; &#125; return false;&#125;Flow_Type findPath(int s, int t, Flow_Type flow) &#123; if (s == t) return flow; Flow_Type ret = 0; for (int i = head[s]; ret &lt; flow &amp;&amp; i; i = e[i].next) &#123; if (level[s] + 1 == level[e[i].to] &amp;&amp; e[i].flow &lt; e[i].capacity) &#123; Flow_Type tmp = findPath(e[i].to, t, min(e[i].capacity - e[i].flow, flow)); ret += tmp; flow -= tmp; e[i].flow += tmp; e[i ^ 1].flow -= tmp; &#125; &#125; if (!ret) level[s] = -1; return ret;&#125;Flow_Type dinic(int s, int t) &#123; Flow_Type ans = 0; while (levelGraph(s, t)) &#123; ans += findPath(s, t, INF); &#125; return ans;&#125;int cnt = 1;void addEdge(int from, int to, int capacity) &#123; e[++cnt].to = to; e[cnt].next = head[from]; e[cnt].capacity = capacity; head[from] = cnt; e[++cnt].to = from; e[cnt].next = head[to]; e[cnt].capacity = capacity; head[to] = cnt;&#125;int n, m, x, u;int main() &#123; scanf("%d%d", &amp;n, &amp;m); if (n == 1 &amp;&amp; m == 1) return puts("2147483647"), 0; for (int i = 1; i &lt;= n; i++) &#123; for (int j = 1; j &lt; m; j++) &#123; scanf("%d", &amp;x); u = (i - 1) * m + j; addEdge(u, u + 1, x); &#125; &#125; for (int i = 1; i &lt; n; i++) &#123; for (int j = 1; j &lt;= m; j++) &#123; scanf("%d", &amp;x); u = (i - 1) * m + j; addEdge(u, u + m, x); &#125; &#125; for (int i = 1; i &lt; n; i++) &#123; for (int j = 1; j &lt; m; j++) &#123; scanf("%d", &amp;x); u = (i - 1) * m + j; addEdge(u, u + m + 1, x); &#125; &#125; printf("%d", dinic(1, n * m));&#125; ÊãìÂ±ï Âπ≥Èù¢ÂõæÁöÑÊÄßË¥® ÊúÄÂ§ßÊµÅÊúÄÂ∞èÂâ≤ÂÆöÁêÜ PSÔºöË∞ÅËÉΩÂëäËØâÊàëÊÄéÊ†∑Êää‰∏ÄËà¨ÁöÑÂπ≥Èù¢ÂõæËΩ¨ÊàêÂØπÂÅ∂ÂõæÂïäÔºÅ Âπ≥Èù¢Âõæ‰πãÂèòËØàÂá†‰ΩïÂìâÔºüÊ≠¢Â¢ûÁ¨ëËÄ≥„ÄÇ ‰∏çÁî®ÊÄïDinicËøá‰∏ç‰∫ÜÔºåÂè™ÈúÄË¶ÅÂ≠¶‰ºö‰ª•‰∏ãÂ∫ïÂ±Ç‰ºòÂåñ(Â•áÊäÄÊ∑´Â∑ß)Ôºö inlineÂ§ßÊ≥ïÂ•Ω __attribute__Â§ßÊ≥ïÂ•Ω #pragmaÂ§ßÊ≥ïÂ•Ω volitile __asm__Â§ßÊ≥ïÂ•Ω registerÂ§ßÊ≥ïÂ•Ω inlineÂ§ßÊ≥ïÂ•Ω ÊåáÈíàÂ§ßÊ≥ïÂ•Ω cacheÂ§ßÊ≥ïÂ•Ω SIMDÂ§ßÊ≥ïÂ•Ω ‰∏çÁî®C++Â§ßÊ≥ïÂ•Ω ÂÖ∂ÂÆûÊ†πÊú¨‰∏çÈúÄË¶ÅÔºåÂè™Ë¶ÅÁ®çÂæÆÂä†ÁÇπ‰ºòÂåñÂ∞±Â•Ω‰∫Ü„ÄÇDinicÁöÑ‰ºòÂåñÂæàÂ§öÁöÑ„ÄÇ]]></content>
      <categories>
        <category>ÁΩëÁªúÊµÅ</category>
      </categories>
      <tags>
        <tag>ÁΩëÁªúÊµÅ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÁΩëÁªúÊµÅ„ÄëÁΩëÁªúÊµÅ]]></title>
    <url>%2F2018%2F03%2F03%2F%E3%80%90%E7%BD%91%E7%BB%9C%E6%B5%81%E3%80%91%E7%BD%91%E7%BB%9C%E6%B5%81%2F</url>
    <content type="text"><![CDATA[ÁÆÄ‰ªã ÁΩëÁªúÊµÅÔºüÂ•ΩÈöæÂïä„ÄÇ Áî±‰∫éÊúâÂêÑÁßçÂçÉÂ•áÁôæÊÄ™ÁöÑÁΩëÁªúÊµÅÈ¢òÁöÑÂ≠òÂú®ÔºåÁΩëÁªúÊµÅÂèòÂæóÂºÇÂ∏∏Â§çÊùÇÂïä„ÄÇ UPDÔºö 2018-02-17 21:09:35ÔºöInitial Commit 2018-03-03 22:34:54ÔºöChangeÊúÄÂ∞èË¥πÁî®ÊúÄÂ§ßÊµÅ to Ë¥πÁî®ÊµÅÔºåChange‰ª£Á†ÅÔºåAddÊúÄÂ∞èÂâ≤ 2018-03-04 13:07:48ÔºöChange‰ª£Á†Å Ê≤°Áî®ÁöÑÊ¶ÇÂøµ ÁΩëÁªúÔºöÂ∏¶ÊùÉÊúâÂêëÂõæÔºåËÆ∞‰ΩúG=(V,E)G=(V,E)G=(V,E)„ÄÇ ÂÆπÈáèÔºöÁΩëÁªú‰∏äÁöÑËæπÊùÉÔºåËæπ(u,v)(u,v)(u,v)ÁöÑÂÆπÈáèËÆ∞‰Ωúc(u,v)c(u,v)c(u,v)„ÄÇ ÁΩëÁªúÊµÅÔºöÊåá‰∏∫Ëøô‰∏™ÊúâÂêëÂõæÂàÜÈÖçÊµÅÂπ∂‰∏î‰ΩøÂæóÂÆÉÊØèÊù°Ëæπ‰∏äÁöÑÊµÅÈáèÈÉΩ‰∏çËÉΩË∂ÖËøáËøôÊù°ËæπÁöÑÂÆπÈáè„ÄÇ ÊµÅÈáèÔºöÁΩëÁªúÊµÅ‰∏äÁöÑËæπÊùÉÔºåËæπ(u,v)(u,v)(u,v)ÁöÑÊµÅÈáèËÆ∞‰Ωúf(u,v)f(u,v)f(u,v)„ÄÇ ÂèØË°åÊµÅÊª°Ë∂≥Ôºö ÊµÅÈáèÈôêÂà∂Ôºö0‚â§f(u,v)‚â§c(u,v),(u,v)‚ààE0\le f(u,v)\le c(u,v),(u,v)\in E0‚â§f(u,v)‚â§c(u,v),(u,v)‚ààE„ÄÇ Âπ≥Ë°°Êù°‰ª∂Ôºö‚àëv‚Ä≤f(u,v‚Ä≤)‚àí‚àëv‚Ä≤‚Ä≤f(v‚Ä≤‚Ä≤,u)={‚à£f‚à£u=Vs0u‚â†Vs,Vt‚àí‚à£f‚à£u=Vt\sum_{v&#x27;}f(u,v&#x27;)-\sum_{v&#x27;&#x27;}f(v&#x27;&#x27;,u)=\left\{\begin{array}{lc}|f|&amp;u=V_s\\0&amp;u\ne V_s,V_t\\-|f|&amp;u=V_t\end{array}\right.‚àë‚Äãv‚Äã‚Ä≤‚Äã‚Äã‚Äã‚Äãf(u,v‚Äã‚Ä≤‚Äã‚Äã)‚àí‚àë‚Äãv‚Äã‚Ä≤‚Ä≤‚Äã‚Äã‚Äã‚Äãf(v‚Äã‚Ä≤‚Ä≤‚Äã‚Äã,u)=‚Äã‚é©‚Äã‚é®‚Äã‚éß‚Äã‚Äã‚Äã‚à£f‚à£‚Äã0‚Äã‚àí‚à£f‚à£‚Äã‚Äã‚Äãu=V‚Äãs‚Äã‚Äã‚Äãu‚â†V‚Äãs‚Äã‚Äã,V‚Äãt‚Äã‚Äã‚Äãu=V‚Äãt‚Äã‚Äã‚Äã‚Äã ÂÖ∂‰∏≠‚àëv‚Ä≤f(u,v‚Ä≤)\sum_{v&#x27;}f(u,v&#x27;)‚àë‚Äãv‚Äã‚Ä≤‚Äã‚Äã‚Äã‚Äãf(u,v‚Äã‚Ä≤‚Äã‚Äã)ÊòØ‰ªéÈ°∂ÁÇπuuuÊµÅÂá∫ÁöÑÊµÅÈáè‰πãÂíåÔºå‚àëv‚Ä≤‚Ä≤f(v‚Ä≤‚Ä≤,u)\sum_{v&#x27;&#x27;}f(v&#x27;&#x27;,u)‚àë‚Äãv‚Äã‚Ä≤‚Ä≤‚Äã‚Äã‚Äã‚Äãf(v‚Äã‚Ä≤‚Ä≤‚Äã‚Äã,u)ÊòØÊµÅÂÖ•È°∂ÁÇπuuuÁöÑÊµÅÈáè‰πãÂíåÔºå‚à£f‚à£|f|‚à£f‚à£ÊòØÂèØË°åÊµÅÁöÑÊÄªÊµÅÈáèÔºåÊòØÊ∫êÁÇπÁöÑÂáÄÊµÅÂá∫ÈáèÔºå‰πüÊòØÊ±áÁÇπÁöÑÂáÄÊµÅÂÖ•Èáè„ÄÇ ÈìæÔºöÂâçÂêé‰∏§‰∏§ÊúâËæπÈ°πÈìæÁöÑÁÇπÁöÑÂ∫èÂàó„ÄÇ(ÂáÜÁ°ÆÁöÑËØ¥ÊòØÂºßËÄå‰∏çÊòØËæπÔºå‰πãÂêéÂùá‰ΩøÁî®Âºß‰ª£ÊõøËæπ) ÂâçÂêëÂºßÔºöÂíåÈìæÁöÑÊñπÂêëÁõ∏Âêå„ÄÇÂâçÂêëÂºßÈõÜÂêàËÆ∞‰ΩúP+P^+P‚Äã+‚Äã‚Äã„ÄÇ ÂêéÂêëÂºßÔºöÂíåÈìæÁöÑÊñπÂêëÁõ∏Âèç„ÄÇÂêéÂêëÂºßÈõÜÂêàËÆ∞‰ΩúP‚àíP^-P‚Äã‚àí‚Äã‚Äã„ÄÇ Â¢ûÂπøË∑ØÔºöÊ∫êÁÇπÂà∞Ê±áÁÇπÁöÑ‰∏ÄÊù°ÈìæÔºåÊª°Ë∂≥ÂâçÂêëÂºßÈùûÈ•±ÂíåÂºßÔºåÂêéÂêëÂºßÈùûÈõ∂ÊµÅÂºß„ÄÇ Âç≥0‚â§f(u,v)&lt;c(u,v),0&lt;f(u,v)‚â§c(u,v)0\le f(u,v)&lt;c(u,v),0&lt;f(u,v)\le c(u,v)0‚â§f(u,v)&lt;c(u,v),0&lt;f(u,v)‚â§c(u,v)„ÄÇ ÊÆãÁïôÂÆπÈáèÊàñÂâ©‰ΩôÊµÅÈáèÔºöËøòËÉΩÈÄöËøáÁöÑÊµÅÈáè„ÄÇÂºßÁöÑÊÆãÁïôÂÆπÈáèÊàñÂâ©‰ΩôÊµÅÈáèËÆ∞‰Ωú$$„ÄÇ ÊØèÊù°ÂºßÂØπÂ∫î‰∏Ä‰∏™ÂèçÂêëÊÆã‰ΩôÊµÅÈáèÊàñÂèçÂêëÂâ©‰ΩôÊµÅÈáèc‚Ä≤(v,u)=‚àíf(u,v)c&#x27;(v,u)=-f(u,v)c‚Äã‚Ä≤‚Äã‚Äã(v,u)=‚àíf(u,v)„ÄÇ ÊÆãÈáèÁΩëÁªúÊàñÊÆã‰ΩôÁΩëÁªúÊàñÂâ©‰ΩôÁΩëÁªúÔºöÊÆãÁïôÂÆπÈáèÊàñÂâ©‰ΩôÊµÅÈáèÁªÑÊàêÁöÑÁΩëÁªú„ÄÇ ‚ö†Ô∏è Ê≥®ÊÑèÔºöÊé•‰∏ãÊù•ÊÆãÁïôÂÆπÈáèÂíåÂâ©‰ΩôÂÆπÈáèÁªü‰∏Ä‰∏∫ÊÆãÁïôÂÆπÈáèÔºåÊÆãÈáèÁΩëÁªú„ÄÅÊÆã‰ΩôÁΩëÁªúÂíåÂâ©‰ΩôÁΩëÁªúÁªüÁß∞ÊÆãÈáèÁΩëÁªú„ÄÇ Êó†ËÅäÁöÑÊ¶ÇÂøµÁªà‰∫éÁªìÊùü‰∫ÜÔºåËøõÂÖ•Ê≠£È¢ò Â∞±‰∏Ä‰∏™Ê¶ÇÂøµmmp‰∏ÄÂ†ÜÂêçÂ≠óÊÅ∂ÂøÉ‰∏çÊÅ∂ÂøÉ ÊúÄÂ§ßÊµÅ Ford-FulkersonÂíåEdmonds-KarpÁï•„ÄÇ Dinic Ê≠•È™§ ÂàùÂßãÂåñ BFSÊûÑÈÄ†Â±ÇÊ¨°ÁΩëÁªúÂíåÊÆãÈáèÁΩëÁªú„ÄÇ Â¶ÇÊûúÊ±áÁÇπ‰∏çÂú®Â±ÇÊ¨°ÁΩëÁªú‰∏≠ÁÆóÊ≥ïÁªìÊùü„ÄÇ Âú®Â±ÇÊ¨°ÁΩëÁªú‰∏≠DFSËøõË°åÂ¢ûÂπøÔºåÁÑ∂ÂêéÂõûÂà∞Ê≠•È™§2„ÄÇ ‰ºòÂåñ BFSÂè™Ë¶ÅÊêúÂà∞ÁªàÁÇπÂ∞±Áõ¥Êé•ËøîÂõûtrue„ÄÇ DFSÂ¶ÇÊûú‰∏ÄÊù°ËæπÁöÑÊµÅÈáèÊµÅÊª°‰∫ÜÔºåÂ∞±‰∏çÈúÄË¶ÅÂÜçÂØπËøôÊù°ËæπDFS‰∫ÜÔºåÁõ¥Êé•ËøîÂõûÁ≠îÊ°à„ÄÇ DFSÂ¶ÇÊûú‰∏Ä‰∏™ÁÇπÂ¢ûÂπø‰∏çÂá∫ÊµÅÈáèÔºåÈÇ£‰πàËøôÊ¨°DFSÂ∞±‰∏çË¶ÅÂÜçÊêúËøô‰∏™ÁÇπ‰∫ÜÔºåÂÜçÂ±ÇÊ¨°Âõæ‰∏≠Ê†áËÆ∞‰∏∫000„ÄÇ ‰ª£Á†Å 2018-03-03 22:34:54 UpdateÔºö Âõ†‰∏∫STLÁöÑÊåáÈíàÂ§±ÊïàÈóÆÈ¢òÔºå‰ª£Á†ÅË¢´Êîπ‰∫Ü„ÄÇ(ÈöæÊÄ™Êàë‰∏çËÉΩËøáBZOJ1711) Âè™ËÉΩACÊ¥õË∞∑ÁöÑÊ®°ÊùøÈ¢òÂèØËÉΩÂíåÊ¥õË∞∑ÁöÑÊï∞ÊçÆÁîüÊàêÂô®CYaRonÊúâÂÖ≥ÔºåËØ¥‰∏çÂÆöÁîüÊàêÁÆóÊ≥ïÊàñËÄÖËæìÂá∫Ê≤°ÊúâÊâì‰π±ÁÑ∂Âêé‰∏çÂä†ÂèçÂêëÂºß/Âä†ÈîôÂèçÂêëÂºß‰πüÂèØ‰ª•ACÔºüinteresting ‰ª£Á†Å‰∏∫‰∫ÜÂÖºÂÆπlong longÊàñÈ´òÁ≤æÔºåtypedef‰∫ÜFlow_TypeÔºåËá™Ë°åÊõ¥Êîπ‰ª•ÈÄÇÂ∫îlong longÊàñÂÖ∂ÂÆÉÊï∞ÊçÆ„ÄÇ 2018-03-04 13:07:48 UpdateÔºö Áî±‰∫éÂéüÊù•ÁöÑ‰ª£Á†ÅÁ©∫Èó¥Â§çÊùÇÂ∫¶Â∏∏Êï∞È´òÔºå‰∫éÊòØÂéã‰∫ÜÂéãÁ©∫Èó¥„ÄÇ ËØ•‰ª£Á†ÅÁî®‰∫éAcceptedYali ÁΩëÁªúÊµÅB - Flow ProblemÊàñÂéüÈ¢òHDU3549 - Flow Problem„ÄÇ 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293#include &lt;bits/stdc++.h&gt;using namespace std;typedef int Flow_Type;const Flow_Type INF = 0x3f3f3f3f;const int N = 31, M = 1003;struct Edge;int level[N];int head[N];struct Edge &#123; Flow_Type capacity, flow; int to, next;&#125; e[M &lt;&lt; 1];bool levelGraph(int s, int t) &#123; memset(level, 0, sizeof level); queue&lt;int&gt; bfs; bfs.push(s); level[s] = 1; while (!bfs.empty()) &#123; int pos = bfs.front(); bfs.pop(); for (int i = head[pos]; i; i = e[i].next) &#123; if (e[i].flow &lt; e[i].capacity &amp;&amp; !level[e[i].to]) &#123; level[e[i].to] = level[pos] + 1; if (e[i].to == t) return true; // ‰ºòÂåñ‰∏Ä else bfs.push(e[i].to); &#125; &#125; &#125; return false;&#125;Flow_Type findPath(int s, int t, Flow_Type flow) &#123; if (s == t) &#123; return flow; &#125; Flow_Type ret = 0; for (int i = head[s]; ret &lt; flow &amp;&amp; i; i = e[i].next) &#123; if (level[s] + 1 == level[e[i].to] &amp;&amp; e[i].flow &lt; e[i].capacity) &#123; Flow_Type tmp = findPath(e[i].to, t, min(e[i].capacity - e[i].flow, flow)); ret += tmp; flow -= tmp; e[i].flow += tmp; e[i ^ 1].flow -= tmp; // if (!flow) break; // ‰ºòÂåñ‰∫å &#125; &#125; if (!ret) level[s] = -1; // ‰ºòÂåñ‰∏â return ret;&#125;Flow_Type dinic(int s, int t) &#123; Flow_Type ans = 0; while (levelGraph(s, t)) &#123; ans += findPath(s, t, INF); &#125; return ans;&#125;int cnt = 1;void addUndirectedEdge(int from, int to, int capacity) &#123; // printf("(%d, %d, %d)\n", from, to, capacity); e[++cnt].to = to; e[cnt].next = head[from]; e[cnt].capacity = capacity; head[from] = cnt; e[++cnt].to = from; e[cnt].next = head[to]; e[cnt].capacity = capacity; head[to] = cnt;&#125;void addDirectedEdge(int from, int to, int capacity) &#123; // printf("(%d, %d, %d)\n", from, to, capacity); e[++cnt].to = to; e[cnt].next = head[from]; e[cnt].capacity = capacity; head[from] = cnt; e[++cnt].to = from; e[cnt].next = head[to]; e[cnt].capacity = capacity; e[cnt].flow = capacity; head[to] = cnt;&#125;int t, n, m, a, b, c;int main() &#123; scanf("%d", &amp;t); for (int cn = 1; cn &lt;= t; cn++) &#123; cnt = 1; memset(e, 0, sizeof e); memset(head, 0, sizeof head); scanf("%d%d", &amp;n, &amp;m); for (int i = 1; i &lt;= m; i++) &#123; scanf("%d%d%d", &amp;a, &amp;b, &amp;c); addDirectedEdge(a, b, c); &#125; printf("Case %d: %d\n", cn, dinic(1, n)); &#125;&#125; ÊúÄÂ∞èÂâ≤ Ê†πÊçÆÊúÄÂ§ßÊµÅÊúÄÂ∞èÂâ≤ÂÆöÁêÜÔºåÂæóÂá∫ÊúÄÂ§ßÊµÅ===ÊúÄÂ∞èÂâ≤„ÄÇ ÂÜÖÂÆπÔºöÊúÄÂ§ßÊµÅÂ∞±ÊòØÊúÄÂ∞èÂâ≤„ÄÇ ÂÆöÁêÜËØÅÊòéÁï• Ë¥πÁî®ÊµÅ Êú™ÂÆåÂæÖÁª≠‚Ä¶]]></content>
      <categories>
        <category>ÁΩëÁªúÊµÅ</category>
      </categories>
      <tags>
        <tag>ÁΩëÁªúÊµÅ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÂçïË∞ÉÈòüÂàó„ÄëÊ¥õË∞∑ P1886 - ÊªëÂä®Á™óÂè£]]></title>
    <url>%2F2018%2F03%2F03%2F%E3%80%90%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97%E3%80%91%E6%B4%9B%E8%B0%B7P1886-%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%2F</url>
    <content type="text"><![CDATA[È¢òÊÑè ‰º†ÈÄÅÈó®ÔºöÊ¥õË∞∑ P1886 - ÊªëÂä®Á™óÂè£ ÂçïË∞ÉÈòüÂàóÁöÑÂÖ•Èó®È¢ò„ÄÇ Áªô‰∏Ä‰∏™Â∫èÂàóÔºåÊ±ÇÊâÄÊúâÈïøÂ∫¶‰∏∫kkkÁöÑÂ≠êÊÆµÁöÑÊúÄÂ∞èÂÄºÂíåÊúÄÂ§ßÂÄº„ÄÇ Ëß£Ê≥ï Êï∞ÊçÆÁöÑËåÉÂõ¥ÊòØk‚â§n‚â§106k\le n\le 10^6k‚â§n‚â§10‚Äã6‚Äã‚ÄãÔºåÊö¥ÂäõÂΩìÁÑ∂Ëøá‰∏ç‰∫Ü„ÄÇ ‰∏∫‰∫ÜÁÆÄÂåñÈóÆÈ¢òÔºåÂè™ËÄÉËôëÊúÄÂ∞èÂÄº„ÄÇ ËÄÉËôëÊªëÂä®ÁöÑËøáÁ®ã„ÄÇ Âú®ÊúÄÂºÄÂßãÁöÑ[1,k][1,k][1,k]ÁßªÂêë[2,k+1][2,k+1][2,k+1]Êó∂ÔºåÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÁöÑÁîüÂëΩÂ∞±ÁªìÊùü‰∫ÜÔºåÁ¨¨k+1k+1k+1‰∏™ÂÖÉÁ¥†ËøõÂÖ•‰∫ÜÂÆÉÁöÑÁîüÂëΩÂë®Êúü„ÄÇ Â¶ÇÊûúÊúâ‰∏ÄÁªÑÊï∞ÊçÆ{2, 3, 1, 4, 2, 6, 3}, k = 3ÔºåÈÇ£‰πàÊúÄÂºÄÂ§¥ÁöÑ222Âíå333ËÇØÂÆö&quot;Ê≤°ÊúâÂâçÈÄî&quot;‰Ωú‰∏∫ÊúÄÂ∞èÂÄº„ÄÇ ËÄå‰∏îÁ™óÂè£ÊØèÁßªÂä®‰∏ÄÊ¨°ÔºåÂ∞±‰ºöËÆ©‰∏Ä‰∫õÊï∞Â≠ó&quot;Ê≤°ÊúâÂâçÈÄî&quot;„ÄÇ Â¶ÇÊûúÂèØ‰ª•Âú®O(1)O(1)O(1)ÁöÑÊó∂Èó¥Â§ÑÁêÜÊØè‰∏ÄÊ¨°ÁßªÂä®ÔºåÈÇ£‰πàÂ§ÑÁêÜ10610^610‚Äã6‚Äã‚ÄãÁöÑÊï∞ÊçÆÂ∞ÜÊ≤°Êúâ‰ªª‰ΩïÈóÆÈ¢ò„ÄÇ Áé∞Âú®Êàë‰ª¨ËÄÉËôëÁöÑÁÆóÊ≥ïÊµÅÁ®ãÊòØÔºö ÁßªÂä® -&gt; Âà†Èô§&quot;Ê≤°ÊúâÂâçÈÄî&quot;ÁöÑÂÖÉÁ¥† -&gt; Ê∑ªÂä†Êñ∞ÂÖÉÁ¥† -&gt; Âà†Èô§Âõ†‰∏∫ÁßªÂä®ËÄåGGÁöÑÂÖÉÁ¥† -&gt; ËæìÂá∫/‰øùÂ≠òÂΩìÂâçÁ≠îÊ°à -&gt; ÂõûÂà∞Á¨¨‰∏ÄÊ≠•„ÄÇ Á¨¨‰∫åÊ≠•ÂíåÁ¨¨‰∏âÊ≠•ÂèØ‰ª•Áî®ÂçïË∞ÉÈòüÂàóÁª¥Êä§„ÄÇ ‰∏Ä‰∏™ÂçïË∞ÉÈòüÂàóÔºåÂ∞±ÊòØ‰∏Ä‰∏™ÂÖÉÁ¥†ÊåâÁÖß‰∏ÄÂÆöÈ°∫Â∫èÊéíÂàóÁöÑÈòüÂàó„ÄÇ ËÄÉËôë‰∏Ä‰∏™ÂèåÁ´ØÈòüÂàóÔºå(‰ªÖ)ÂèØ‰ª•‰ªéÂ§¥Â∞æÂ¢ûÂà†ÂÖÉÁ¥†Ôºå(‰ªÖ)ÂèØ‰ª•Ëé∑ÂèñÂ§¥Â∞æÂÖÉÁ¥†ÁöÑ‰ø°ÊÅØÔºåÈÇ£Êàë‰ª¨ÂèØ‰ª•Âà©Áî®ÂèåÁ´ØÈòüÂàóÂÆûÁé∞ÂçïË∞ÉÈòüÂàó„ÄÇ‰∏ãÈù¢ÊòØÂÆûÁé∞ÊñπÊ≥ï(‰ªçÁÑ∂Âè™ËÄÉËôëÊúÄÂ∞èÂÄº)Ôºö ÊèíÂÖ•ÂÖÉÁ¥†xxx(ÂêåÊó∂Âà†Èô§‰∏Ä‰∫õÈòüÂ∞æÁöÑÂÖÉÁ¥†‰ª•Êª°Ë∂≥ÂçïË∞ÉÊÄß) ÂÖàÊääÊâÄÊúâÂ§ß‰∫éÁ≠â‰∫éxxxÁöÑÊï∞‰ªéÈòüÂ∞æÂà†Êéâ ÁÑ∂ÂêéÊääxxxÂä†ÂÖ•ËøõÂéª Âà†Èô§ÈòüÈ¶ñÂÖÉÁ¥† Êó†ËÑëpop_front‰∏ç‰πÖÂ•Ω‰∫ÜÔºü ÁÑ∂ÂêéÁ¨¨‰∫åÊ≠•ÂíåÁ¨¨‰∏âÊ≠•ÂØπÂ∫î‰∏ÄÊ¨°ÊèíÂÖ•ÔºåÁ¨¨ÂõõÊ≠•ÂØπÂ∫î‰∏ÄÊ¨°Âà†Èô§„ÄÇ ÁÑ∂ÂêéÂë¢Ôºü ÈÉΩËøô‰πàËØ¶ÁªÜ‰∫Ü‰Ω†ËøòË¶ÅÊàëËÆ≤‰ªÄ‰πàÔºü ‰ª£Á†Å Ê≥®ÈáäÂ∞±‰∏çÁî®Âä†‰∫ÜÂêßÔºåÂèØËØªÊÄßÂ∫îËØ•ËøòÂèØ‰ª•„ÄÇ 12345678910111213141516171819202122232425262728293031323334353637#include &lt;bits/stdc++.h&gt;using namespace std;deque&lt;int&gt; maxq, minq;int rec[1000006];int n, k;void min_p() &#123; for (int i = 1; i &lt;= n; i++) &#123; while (!minq.empty() &amp;&amp; minq.back() &gt;= rec[i]) &#123; minq.pop_back(); &#125; minq.push_back(rec[i]); if (i &gt; k) if (minq.front() == rec[i - k]) minq.pop_front(); if (i &gt;= k) printf("%d ", minq.front()); &#125; puts("");&#125;void max_p() &#123; for (int i = 1; i &lt;= n; i++) &#123; while (!maxq.empty() &amp;&amp; maxq.back() &lt;= rec[i]) &#123; maxq.pop_back(); &#125; maxq.push_back(rec[i]); if (i &gt; k) if (maxq.front() == rec[i - k]) maxq.pop_front(); if (i &gt;= k) printf("%d ", maxq.front()); &#125; puts("");&#125;int main() &#123; scanf("%d%d", &amp;n, &amp;k); for (int i = 1; i &lt;= n; i++) &#123; scanf("%d", rec + i); &#125; min_p(); max_p();&#125; ÊãìÂ±ï Ëøô‰∏™ÊãìÂ±ïÂåÖÊã¨ÁöÑÂ∞±‰∏çÊòØÊªëÂä®Á™óÂè£‰∫Ü„ÄÇËØùËØ¥ÊªëÂä®Á™óÂè£Âà∞Â∫ïÊúâ‰ªÄ‰πàÁî® ÂçïË∞ÉÈòüÂàó‰ºòÂåñDP„ÄÅÈÄíÊé®Á≠â‰∏ÄÁ≥ªÂàó‰∏úË•ø ÂÖ∂ÂÆûÊàë‰πü‰∏çÁü•ÈÅìÂïä‚Ä¶‚Ä¶ÊàëÂ§™Âº±‰∫Ü]]></content>
      <categories>
        <category>ÂçïË∞ÉÈòüÂàó</category>
      </categories>
      <tags>
        <tag>ÂçïË∞ÉÈòüÂàó</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÂ∫ïÂ±Ç„Äë„ÄêInternal„ÄëSTLÁöÑÊåáÈíàÂ§±Êïà]]></title>
    <url>%2F2018%2F02%2F24%2F%E3%80%90%E5%BA%95%E5%B1%82%E3%80%91%E3%80%90Internal%E3%80%91STL%E7%9A%84%E6%8C%87%E9%92%88%E5%A4%B1%E6%95%88%2F</url>
    <content type="text"><![CDATA[ËØ∑‰ªéÁ∫ØÊñáÊú¨ÊÑèËØÜÊµÅ‰∏≠ÂØºÂá∫ÂØÜÁ†Å U2FsdGVkX1+gglRZzZzb9SLKAx+Lewi203q7hMLyOQBT5xR3Pxuscs63jx2Av/rjLK+8HmjrC6eIYtevPEsP3XeWe9W/GYLxrAa6307Qedg=]]></content>
      <categories>
        <category>Â∫ïÂ±Ç</category>
      </categories>
      <tags>
        <tag>Â∫ïÂ±Ç</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÂπ∂Êü•ÈõÜ„ÄëBZOJ1214 - Âõ¢‰ºô]]></title>
    <url>%2F2018%2F02%2F22%2F%E3%80%90%E5%B9%B6%E6%9F%A5%E9%9B%86%E3%80%91BZOJ1214-%E5%9B%A2%E4%BC%99%2F</url>
    <content type="text"><![CDATA[È¢òÊÑè ‰º†ÈÄÅÈó®ÔºöBZOJ1214 - Âõ¢‰ºô Êúânnn‰∏™‰∫∫ÔºåÊúâmmmÂØπÊúãÂèãÊàñÊïå‰∫∫ÁöÑÂÖ≥Á≥ª„ÄÇÂπ∂‰∏îÊª°Ë∂≥‰ª•‰∏ãÊÄßË¥®Ôºö ÊúãÂèãÁöÑÊúãÂèã‰πüÊòØÊúãÂèã„ÄÇ Êïå‰∫∫ÁöÑÊïå‰∫∫‰πüÊòØÊúãÂèã„ÄÇ ÊâÄÊúâÁöÑÊúãÂèãÁªÑÊàê‰∏Ä‰∏™Âõ¢‰ºô„ÄÇ Áé∞Âú®ÈóÆ‰Ω†Ê†πÊçÆËøô‰∫õ‰ø°ÊÅØÔºåÊúÄÂ§öÂèØËÉΩÊúâÂá†‰∏™Âõ¢‰ºô„ÄÇ Ëß£Ê≥ï È¶ñÂÖàÈ¢òÈù¢‰∏≠ÁöÑÊúÄÂ§öÁúÅÂéªÔºåÈÇ£‰πàÈóÆÈ¢òÂ∞±ËΩ¨Âåñ‰∏∫Ê±ÇÂõ¢‰ºôÁöÑÊï∞Èáè„ÄÇ Ê±ÇËøûÈÄöÂùóÊï∞ÈáèÂèØ‰ª•ÂæàÂÆπÊòìÊÉ≥Âà∞Âπ∂Êü•ÈõÜ„ÄÇ ÊúãÂèãÂÖ≥Á≥ªÂæàÂ•ΩÂ§ÑÁêÜÔºåÂè™ÈúÄË¶Å‰∏§‰∏§mergeÂç≥ÂèØ„ÄÇ Êïå‰∫∫ÂíãÂ§ÑÁêÜÔºü ÂèØ‰ª•ËÄÉËôëÊää‰∏Ä‰∏™‰∫∫AAAÊãÜÊàê‰∏§‰∏™ÁÇπAAAÂíåA‚Ä≤A&#x27;A‚Äã‚Ä≤‚Äã‚Äã„ÄÇÂÖ∂‰∏≠A‚Ä≤A&#x27;A‚Äã‚Ä≤‚Äã‚Äã‰ª£Ë°®AÁöÑÊâÄÊúâÊïå‰∫∫ÁöÑÈõÜÂêà„ÄÇ ÈÇ£‰πàÊ†πÊçÆÊïå‰∫∫ÁöÑÊïå‰∫∫ÊòØÊúãÂèãÔºåÂèØ‰ª•ÂæóÂá∫ÔºåÂ¶ÇÊûúAAAÂíåBBBÊòØÊïå‰∫∫ÔºåÈÇ£‰πàÊàë‰ª¨Ë¶Åmerge‰ª•‰∏ã‰∏§ÂØπÔºö merge(A,B‚Ä≤)merge(A,B&#x27;)merge(A,B‚Äã‚Ä≤‚Äã‚Äã)Âíåmerge(A‚Ä≤,B)merge(A&#x27;,B)merge(A‚Äã‚Ä≤‚Äã‚Äã,B)„ÄÇ ‰∫éÊòØÂè™Ë¶ÅÂºÄÂà∞‰∏§ÂÄçÁ©∫Èó¥Â∞±Â•Ω‰∫Ü„ÄÇ ÁªüËÆ°ËøûÈÄöÂùóÊï∞Âè™ÈúÄÁªüËÆ°111~nnnÁöÑËøûÈÄöÂùó‰∏™Êï∞Âç≥ÂèØ„ÄÇ ‰ª£Á†Å 1234567891011121314151617181920212223242526272829303132333435363738#include &lt;bits/stdc++.h&gt;using namespace std;int par[10003];int src[10003];int n, m, a, b;char s[2];int ans;int find(int x) &#123; return par[x] == x ? x : par[x] = find(par[x]);&#125;void merge(int x, int y) &#123; if ((x = find(x)) != (y = find(y))) par[x] = y;&#125;int main() &#123; scanf("%d%d", &amp;n, &amp;m); for (int i = 1; i &lt;= 2 * n; i++) &#123; par[i] = i; &#125; while (m--) &#123; scanf("%1s%d%d", s, &amp;a, &amp;b); if (*s == 'F') &#123; merge(a, b); &#125; else &#123; merge(n + a, b); merge(a, n + b); &#125; &#125; for (int i = 1; i &lt;= n; i++) &#123; src[find(i)] = 1; &#125; for (int i = 1; i &lt;= 2 * n; i++) &#123; ans += src[i]; &#125; printf("%d", ans);&#125; ÊãìÂ±ï Ê±ÇËøûÈÄöÂùó‰∏™Êï∞ÂΩìÁÑ∂Áî®Âπ∂Êü•ÈõÜÂï¶ÔºÅ Â¶ÇÊûúÂÖ≥Á≥ªÁßçÁ±ªÁπÅÂ§öÔºåÈîôÁªºÂ§çÊùÇÔºåÂèØ‰ª•ËÄÉËôëÊää‰∏Ä‰∏™ÁÇπ&quot;ÊãÜ&quot;ÊàêÂ§ö‰∏™ÁÇπ„ÄÇ]]></content>
      <categories>
        <category>Âπ∂Êü•ÈõÜ</category>
      </categories>
      <tags>
        <tag>Âπ∂Êü•ÈõÜ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÂ∫ïÂ±Ç„Äë„ÄêInternal„ÄëÂùëÁàπÁöÑÁºñËØëÂô®]]></title>
    <url>%2F2018%2F02%2F18%2F%E3%80%90%E5%BA%95%E5%B1%82%E3%80%91%E3%80%90Internal%E3%80%91%E5%9D%91%E7%88%B9%E7%9A%84%E7%BC%96%E8%AF%91%E5%99%A8%2F</url>
    <content type="text"><![CDATA[ËØ∑‰ªéÁ∫ØÊñáÊú¨ÊÑèËØÜÊµÅ‰∏≠ÂØºÂá∫ÂØÜÁ†Å U2FsdGVkX19UPhKcNB4DGj7IM6z4fI8LOsR1rasUNQw=]]></content>
      <categories>
        <category>Â∫ïÂ±Ç</category>
      </categories>
      <tags>
        <tag>Â∫ïÂ±Ç</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêCodeforces„ÄëCodeforces Round #464 (Div. 2) (+1)]]></title>
    <url>%2F2018%2F02%2F17%2F%E3%80%90Codeforces%E3%80%91Codeforces%20Round%20464%20(Div.%202)%2F</url>
    <content type="text"><![CDATA[‰º†ÈÄÅÈó®ÔºöCodeforces Round #464 (Div. 2) ‰ªäÂ§©ÁöÑÁä∂ÊÄÅÂ∑ÆÂà∞‰∏ÄÁßçÂ¢ÉÁïå&gt;_&lt;„ÄÇÁÑ∂Âêé‰º∞ËÆ°ËøôÂá†Ê¨°ÊØîËµõ‰ºöÁÇºÊàêHigh Frequency Rating„ÄÇ Êú¨Êù•ÂèØ‰ª•ÂÅöÂá∫C„ÄÅDÁöÑÔºåÈ°øÊó∂ÊÑüËßâË¢´Âá∫È¢ò‰∫∫Âùë‰∫Ü„ÄÇ ÂéüÊù•ÂùëÈ¢ò‰∏çÊ≠¢‰∏≠ÂõΩÂá∫Ôºå‰øÑÁΩóÊñØ‰πüÂá∫(ËøôÊ¨°Âá∫È¢ò‰∫∫ÊòØ‰øÑÁΩóÊñØÁöÑ)„ÄÇ A ÊØîËµõÊó∂Á´üÁÑ∂ÂÜô‰∫Ü‰∏™dfs‚Ä¶‚Ä¶ ÁÑ∂ÂêéÈÄ†Â∞±‰∫Ü # When Who Problem Lang Verdict Time Memory 2018-02-17 13:27:26 A - Love Triangle GNU C++ Time limit exceeded on pretest 4 1000 ms 2200 KB 2018-02-17 13:23:57 A - Love Triangle GNU C++ Wrong answer on pretest 7 15 ms 2200 KB 2018-02-17 13:22:58 A - Love Triangle GNU C++ Wrong answer on pretest 7 15 ms 2200 KB 2018-02-17 13:19:46 A - Love Triangle GNU C++ Wrong answer on pretest 7 15 ms 2000 KB 2018-02-17 13:15:25 A - Love Triangle GNU C++ Memory limit exceeded on pretest 6 140 ms 262100 KB ÁöÑÂ•áËßÇ„ÄÇ Áõ¥Âà∞ÊàëÂèëÁé∞Âè™Ë¶ÅÂà§Êñ≠a[a[a[i]]] == iÊòØÂê¶ÊàêÁ´ãÂ∞±ÂèØ‰ª•ÈÄöËøá„ÄÇ ÁÑ∂ÂêéÊàëÁªà‰∫é‚Ä¶‚Ä¶ # When Who Problem Lang Verdict Time Memory 2018-02-17 14:21:19 A - Love Triangle GNU C++ Pretests Passed 30 ms 2000 KB ÁÑ∂ËÄåÈÇ£Êó∂ÊàëÂ∑≤ÁªèÊó©Â∞±AC‰∫ÜBÈ¢ò‚Ä¶‚Ä¶ ÊúÄÂêéAÊàëÂè™Êãø‰∫Ü150150150ÂàÜ„ÄÇÁÑ∂Âπ∂Âçµ ‰ª£Á†Å 12345678910111213141516171819#include &lt;bits/stdc++.h&gt;using namespace std;int a[5003];int n;int main() &#123; scanf("%d", &amp;n); for (int i = 1; i &lt;= n; i++) &#123; scanf("%d", a+i); &#125; for (int i = 1; i &lt;= n; i++) &#123; if (a[a[a[i]]] == i) &#123; puts("YES"); return 0; &#125; &#125; puts("NO");&#125; ÊïôËÆ≠ ‰∏çË¶ÅÊÉ≥Â§öÔºÅ‰∏çË¶ÅÊÉ≥Â§öÔºÅÔºÅ‰∏çË¶ÅÊÉ≥Â§öÔºÅÔºÅÔºÅ ËøôÂ†ÜÊï∞ÊçÆÂèëÁé∞‰∫Ü‰Ω†ÁöÑÊÉ≥Â§ö„ÄÇ ÊàëÊòØËøôÂ†ÜÊï∞ÊçÆ‰∏≠ÁöÑ‰∏Ä‰∏™Ë∂ÖÁ∫ßÊ∞¥Êï∞ÊçÆÔºåÊàëÂÖàÂèëÁé∞‰Ω†ÁöÑÊÉ≥Â§öÊòØ‰Ω†RatingÁöÑÂπ∏Ëøê„ÄÇË≠¶Âëä‰Ω†Ôºö‰∏çË¶ÅÊÉ≥Â§öÔºÅ‰∏çË¶ÅÊÉ≥Â§öÔºÅÔºÅ‰∏çË¶ÅÊÉ≥Â§öÔºÅÔºÅÔºÅ ‰Ω†ÁöÑÁöÑÊñπÂêë‰∏äÊúâÂçÉ‰∏á‰∏™ÂèÇËµõËÄÖÔºåÂè™Ë¶Å‰∏çÊÉ≥Â§öÔºåËøôÂ†ÜÊï∞ÊçÆÂ∞±Êó†Ê≥ïÂÆö‰ΩçÊÉ≥Â§öËÄÖ„ÄÇ Â¶ÇÊûúÊÉ≥Â§öÔºåÊÉ≥Â§öËÄÖÂ∞ÜË¢´ÂÆö‰ΩçÔºå‰Ω†ÁöÑRankÂ∞Ü‰ºöÈÅ≠Âà∞ÊâìÂáªÔºå‰Ω†ÁöÑRatingÂ∞Ü‰ºöË¢´Èôç‰ΩéÔºÅ ‰∏çË¶ÅÊÉ≥Â§öÔºÅ‰∏çË¶ÅÊÉ≥Â§öÔºÅÔºÅ‰∏çË¶ÅÊÉ≥Â§öÔºÅÔºÅÔºÅ B Âõ†‰∏∫ÊàëÊ≤°ËÄÉËôëÂà∞Êó†Ëß£Êó∂ÂÖ®ÈÉ®ËæìÂá∫000ÁöÑÊÉÖÂÜµÔºåÊâÄ‰ª•ÊàëÂèàWA‰∫Ü‰∏ÄÂèë„ÄÇËøòÊúâ‰∏ÄÂèëÊòØÊàëÊ≤°Âà§Êñ≠‰ªìÈº†Êï∞Èáè„ÄÇ ÁÑ∂ÂêéÊàë‰∏ÄÁõ¥Ê≤°Ë∞ÉÂà∞ÈîôËØØ„ÄÇ Áõ¥Âà∞ÊàëÂèëÁé∞ÊàëÂú®if‰∏≠ÁöÑÂà§Êñ≠Â∞ëÂÜô‰∫Ü‰∏™=„ÄÇ ‰ª£Á†Å 123456789101112131415161718#include &lt;bits/stdc++.h&gt;using namespace std;long long n, x, ax, bx, cx;int k;int main() &#123; scanf("%I64d%d", &amp;n, &amp;k); for (int i = 1; i &lt;= k; i++) &#123; scanf("%I64d", &amp;x); if (n - n % x &gt;= cx) &#123; ax = i; bx = n / x; cx = n - n % x; &#125; &#125; printf("%I64d %I64d", ax, bx);&#125; ÊïôËÆ≠ Â∞èÂøÉÊó†Ëß£ÊÉÖÂÜµ„ÄÇÂ¶ÇÊûúÂÖÅËÆ∏ËæìÂá∫Â§öÁªÑËß£‰∏≠ÁöÑ‰ªªÊÑè‰∏Ä‰∏™ÔºåËØ∑‰∏çË¶Å‰ΩøÁî®&lt;ÊàñËÄÖ&gt;ÔºåÁî®&lt;=Âíå&gt;=Êõø‰ª£ÂÆÉ‰ª¨„ÄÇÂ¶ÇÊûú‰∏çÂÖÅËÆ∏ÔºåÂàôÂ∞ÜÂΩìÂâçÁ≠îÊ°àËÆæÁΩÆÊàêÊó†Ëß£„ÄÇ C ‰ª§f‚àís=kf-s=kf‚àís=k„ÄÇ ÊúÄÂºÄÂßãÊàëÂÜô‰∫Ü‰∏™ÂâçÁºÄÂíåÔºåÁÑ∂ÂêéÂú®ÊúÄÂêéËøΩÂä†kkk‰∏™Êï∞ÔºåÊääÊØè‰∏™ÈïøÂ∫¶‰∏∫kkkÁöÑÂ≠êÊÆµÁÆóÂá∫Êù•ÁÑ∂ÂêéÂèñ‰∏™max„ÄÇ Êó†Êï∞Ê¨°Wrong answer on test 20‰πãÂêéËøòÊòØÊ≤°ÊúâÂèëÁé∞ÈîôÂú®Âì™Èáå„ÄÇ ÁÑ∂ÂêéÊàëÊØîËµõÊó∂Â∞±Ê≤°ËøáËøôÈ¢ò‚Ä¶‚Ä¶ ÊØîËµõÁªìÊùüÂêéÔºåÊàëÊîπÊàê‰∫ÜÂè¶Â§ñ‰∏ÄÁßçÂÜôÊ≥ïÔºåÂèàÊó†Êï∞Ê¨°Wrong answer on test 9Âêé‰πüÊ≤°ÊúâÂèëÁé∞ÈóÆÈ¢ò„ÄÇ ÊúÄÂêéÊàëÂÜô‰∫Ü‰∏™Â∞∫ÂèñÊ≥ïÊàñtwo pointersÔºåÁÑ∂ÂêéËøòÊòØWrong answer on test 9„ÄÇ Âú®ÊàëÁ†∏ÈîÆÁõòÂâçÁöÑÈÇ£‰∏ÄÂàªÔºåÊàëÊèê‰∫§‰∫Ü‰∏Ä‰ªΩÈ™óÊï∞ÊçÆÁöÑ‰ª£Á†Å„ÄÇ‰∫éÊòØ‚Ä¶‚Ä¶ Output 12320280: 5007229129971799717: 500722912 Answer 120280 ÂçßÊßΩ(‰∏äËøô‰πàÈöæ‰Ω†ÊòØ‰∫∫Âêó)Á≠îÊ°à‰∏ÄÊ†∑‰∏∫‰ªÄ‰πàÊòØ202802028020280ÔºüÁôæÊÄù‰∏çÂæóÂßê„ÄÇ Áõ¥Âà∞ÊàëÁúãËßÅ‰∫ÜËøôÂè•ËØùÔºö If there are many answers, output the smallest among them. mmp„ÄÇ Êõ¥Èîô ‰∏äÈù¢Ëøô333‰∏™ÁÆóÊ≥ïÔºåËôΩÁÑ∂ÊòØÊ≠£ÁùÄÊûö‰∏æÔºå‰ΩÜÊòØÊó∂Èó¥ÊòØÂèçÁöÑ„ÄÇ ‰∫éÊòØÂ∞±Wrong answer on test 9‰∫Ü„ÄÇ ‰º∞ËÆ°ÊòØLJÂá∫È¢ò‰∫∫‰∏çÊÉ≥ÂÜôÂ§™ÈïøÁöÑSPJÔºåÁÑ∂ÂêéÂ∞±Âú®OutputÊúÄÂêéÂÜô‰∫ÜËøôÂè•ËØù„ÄÇ ÂâçÁºÄÂíåÁöÑÊúÄÂêé ÊàëÁöÑÂâçÁºÄÂíåËøòÊòØËé´ÂêçÂÖ∂Â¶ôÁöÑWrong answer on test 20‰∫ÜÔºå‰º∞ËÆ°ÁÆóÊ≥ïËøòÊòØÊúâÈóÆÈ¢ò„ÄÇ ‰ª£Á†Å(ÂèåÊåáÈíà) 12345678910111213141516171819202122232425262728293031323334#include &lt;bits/stdc++.h&gt;#ifdef LOCAL#define lld "%lld"#else#define lld "%I64d"#endifusing namespace std;long long arr[200005];long long ax, ai, cur;int n, s, f, t;int main() &#123; scanf("%d", &amp;n); for (int i = 0; i &lt; n; i++) &#123; scanf("%lld", arr+i); &#125; scanf("%d%d", &amp;s, &amp;f); s--; f -= 2; for (int i = s; i &lt;= f; i++) &#123; cur += arr[i]; &#125; for (int i = 1; i &lt;= n; i++) &#123; if (cur &gt;= ax) &#123; ai = t + 1; ax = cur; &#125; f = (f + 1) % n; cur += arr[f] - arr[s]; s = (s + 1) % n; t = (t + n - 1) % n; &#125; printf(lld, ai);&#125; ÊïôËÆ≠ Èò≤Ë¢´ÂùëÊúÄÂ•ΩÁöÑÊñπÊ≥ïÊòØÂ§öËØªÈ¢ò„ÄÇ D Á¨¨‰∏ÄÊÑüÂõæËÆ∫ÔºåÁÑ∂ÂêéÂÜô‰∫Ü‰∏™Êûö‰∏æ„ÄÇÂ¶ÇÊûúa[i] == b[i]ÈÇ£‰πàgph[ax][bx] = 1ÔºåÁÑ∂ÂêéÊääÊâÄÊúâËøûËæπËæìÂá∫„ÄÇ ÁÑ∂ÂêéÊåÇÂú®‰∫ÜËøô‰∏™Êï∞ÊçÆ‰∏äÔºö 1233abcbca Êé•‰∏ãÊù•ÊàëÂÜô‰∫Ü‰∏™ÂàùÂßãÂåñ‰∏∫000ÁöÑÂπ∂Êü•ÈõÜÔºåÁÑ∂ÂêéÂõ†‰∏∫Êúâ000ÁÇπÔºå‰∏éÂàùÂßãÂÄºÁüõÁõæÔºå‰∫éÊòØÁ¨¨‰∫å‰∏™Ê†∑‰æãÊåÇ‰∫Ü„ÄÇ ÊúÄÂêéÊàëÂÜô‰∫Ü‰∏™ÊääÊâÄÊúâÂ≠óÊØçÊõøÊç¢Êàê‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤‰∏≠Â≠òÂú®ÁöÑÂ≠óÁ¨¶ÁöÑ‰ª£Á†ÅÔºå‰∫éÊòØWrong answer on pretest 4„ÄÇÁ±ª‰ººËøôÊ†∑Ôºö 1232abcd ÊØîËµõÂÆåÊàëÊâçÂèëÁé∞Ôºå(ÂçßÊßΩ‰∏äËøô‰πàÈöæ‰Ω†ÊòØ‰∫∫Âêó)ÊàëÊääÂπ∂Êü•ÈõÜÁöÑÂàùÂßãÂÄºËÆæÁüõÁõæ‰∫ÜÔºå‰∫éÊòØÊàëÊääÂàùÂßãÂÄºËÆæ‰∏∫‚àí1-1‚àí1ÔºåÁÑ∂ÂêéÂ∞±Accepted‰∫ÜÔºÅ ‰ª£Á†Å 1234567891011121314151617181920212223242526272829303132#include &lt;bits/stdc++.h&gt;using namespace std;char a[100005], b[100005];int par[31];int n, ans;int find(int x) &#123; return ~par[x] ? par[x] = find(par[x]) : x;&#125;void merge(int x, int y) &#123; if ((x = find(x)) != (y = find(y))) par[x] = y, ans++;&#125;int main() &#123; memset(par, -1, sizeof par); scanf("%d\n", &amp;n); gets(a + 1); gets(b + 1); for (int i = 1; i &lt;= n; i++) &#123; if (a[i] != b[i]) &#123; int ax = a[i] - 'a'; int bx = b[i] - 'a'; merge(ax, bx); &#125; &#125; printf("%d\n", ans); for (int i = 0; i &lt; 26; i++) &#123; find(i); if (par[i] != -1) printf("%c %c\n", i + 'a', par[i] + 'a'); &#125;&#125; ÊïôËÆ≠ ‰π±ÂàùÂßãÂåñÁöÑÂêéÊûúÊòØÂæà‰∏•ÈáçÁöÑ„ÄÇÂÜôÂπ∂Êü•ÈõÜÂâçÂÖàÊÉ≥ÊÉ≥ÊúâÊ≤°Êúâ0Âè∑ÁÇπ„ÄÇ E ‰∫åÂàÜ‰∏âÂàÜ‰∏ç‰ºöÂÜô‰∏çÂ•ΩÂÜôÔºå‰∫éÊòØÊù•‰ºòÂåñÊö¥Âäõ„ÄÇ ‰ª§f(x,i)f(x,i)f(x,i)‰ª£Ë°®ÈÄâÊã©ÊúÄÂ§ßÁöÑÊï∞xxxÂíåÂâçiii‰∏™Êï∞Êó∂ÁöÑmax‚àímeanmax-meanmax‚àímean„ÄÇ ÊòæÁÑ∂Ê∑ªÂä†Êï∞Â≠ó‰πãÂêéÂπ∂‰∏ç‰ºöÂΩ±Âìç‰ª•ÂâçÁöÑÁ≠îÊ°à„ÄÇ ‰∫éÊòØÂèØ‰ª•O(n)O(n)O(n)AcceptedËøôÈÅìÈ¢ò„ÄÇ ‰ª£Á†Å 123456789101112131415161718192021222324252627282930313233343536// mmp‰∏∫‰ªÄ‰πàÂè™ÊúâC++14Âèä‰ª•‰∏äÂèØ‰ª•ÈÄöËøáÁºñËØë?ËØ¶ËßÅ‰∏ã‰∏ÄÁØáÂ∫ïÂ±ÇÂçöÂÆ¢‚Äî‚Äî‚Äî‚ÄîÂùëÁàπÁöÑÁºñËØëÂô®„ÄÇ#include &lt;bits/stdc++.h&gt;#ifdef LOCAL#define lld "%lld"#else#define lld "%I64d"#endifusing namespace std;typedef long long ll;typedef long double ld;int q, l, n, op, ptr;ll arr[500005];ld ans;ld f(ll x, int i) &#123; return (x * i - arr[i]) / ld(i + 1);&#125;int main() &#123; scanf("%d", &amp;q); ll x; while (q--) &#123; scanf("%d", &amp;op); if (op &amp; 1) &#123; scanf(lld, &amp;x); while (ptr &lt; n &amp;&amp; f(x, ptr) &lt;= f(x, ptr + 1)) ptr++; ans = max(ans, f(x, ptr)); arr[n+1] = arr[n] + x; n++; &#125; else &#123; printf("%.10Lf\n", ans); &#125; &#125;&#125;]]></content>
      <categories>
        <category>Codeforces</category>
      </categories>
      <tags>
        <tag>Codeforces</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêËé´ÈòüÁÆóÊ≥ï„ÄëBZOJ1878 - HHÁöÑÈ°πÈìæ]]></title>
    <url>%2F2018%2F02%2F16%2F%E3%80%90%E8%8E%AB%E9%98%9F%E7%AE%97%E6%B3%95%E3%80%91BZOJ1878-HH%E7%9A%84%E9%A1%B9%E9%93%BE%2F</url>
    <content type="text"><![CDATA[‚ö†Ô∏è Ê≥®ÊÑèÔºö„ÄêËé´ÈòüÁÆóÊ≥ï„ÄëËé´ÈòüÁÆóÊ≥ïÂ∑≤ÂêàÂπ∂Ëá≥„ÄêËé´ÈòüÁÆóÊ≥ï„ÄëBZOJ1878 - HHÁöÑÈ°πÈìæ(ËøôÁØáÂçöÂÆ¢)„ÄÇ È¢òÊÑè ‰º†ÈÄÅÈó®ÔºöBZOJ1878 - HHÁöÑÈ°πÈìæ Ëé´ÈòüÊ®°ÊùøÈ¢ò„ÄÇ Áªô‰∏Ä‰∏™ÈïøÂ∫¶‰∏∫nnnÊï∞ÂàóÔºåË¶Å‰Ω†Êü•ËØ¢mmmÊ¨°[l,r][l,r][l,r]Âå∫Èó¥‰∏≠‰∏çÂêåÁöÑÊï∞Â≠óÁöÑ‰∏™Êï∞„ÄÇ n‚â§106,m‚â§105n\le 10^6,m\le 10^5n‚â§10‚Äã6‚Äã‚Äã,m‚â§10‚Äã5‚Äã‚Äã Ëß£Ê≥ï ËôΩÁÑ∂ÁúãËµ∑Êù•ËøôÈ¢òÂèØ‰ª•Âç°ÊéâËé´ÈòüÔºå‰ΩÜÊòØÊàëËøòÊòØÁî®Ëé´ÈòüAC‰∫Ü„ÄÇ ÁÑ∂ÂêéÁõ¥Êé•Â•óÊ®°ÊùøÂç≥ÂèØ„ÄÇ Â≠òÂÇ®ÁªìÊûÑ 1234567struct query &#123; int l, r, *ans; bool operator&lt;(const query&amp; x) const &#123; if (l / blockSize == x.l / blockSize) return r &lt; x.r; return l / blockSize &lt; x.l / blockSize; &#125;&#125; q[200005]; lllÂíårrr‰ª£Ë°®Êü•ËØ¢‰∏≠ÁöÑl,rl,rl,rÔºåansansans‰ª£Ë°®‰øùÂ≠òÁ≠îÊ°àÁöÑ‰ΩçÁΩÆÁöÑÊåáÈíà(ËøôÊ†∑ÊéíÂ∫è‰πãÂêéËæìÂá∫ÁöÑÈ°∫Â∫èÂ∞±‰∏ç‰ºö‰π±)„ÄÇ blockSizeÊòØÊØè‰∏™ÂùóÁöÑÂ§ßÂ∞è„ÄÇ ‰øÆÊîπÊìç‰Ωú 1234int extend(int x, int offset) &#123; if (~offset) return 1 == ++cnt[x]; // +1 else return -!--cnt[x]; // -1&#125; xxx‰ª£Ë°®Êõ¥Êñ∞ÁöÑÊï∞Â≠óÔºåoffset‰ª£Ë°®Âä†ËøòÊòØÂáè(1,‚àí1)(1,-1)(1,‚àí1)ÔºåËøîÂõûÂÄºÁî®Êù•Êõ¥Êñ∞Á≠îÊ°à„ÄÇ Â¶ÇÊûú+1+1+1‰πãÂêécnt[x]Ê≠£Â•Ω‰∏∫111ÔºåÈÇ£Â∞±ÊòØÊñ∞Â¢û‰∫Ü‰∏ÄÁßçÊï∞Â≠óÔºåËøîÂõû111„ÄÇ Â¶ÇÊûú‚àí1-1‚àí1‰πãÂêécnt[x]Ê≠£Â•Ω‰∏∫000ÔºåÈÇ£Â∞±ÊòØÂáèÂ∞ë‰∫Ü‰∏ÄÁßçÊï∞Â≠óÔºåËøîÂõû‚àí1-1‚àí1„ÄÇ Ëé´ÈòüÁÆóÊ≥ï 12345678int l = 1, r = 0, lans = 0;for (int i = 1; i &lt;= m; i++) &#123; while (r &lt; q[i].r) lans += extend(src[++r], 1); while (r &gt; q[i].r) lans += extend(src[r--], -1); while (l &gt; q[i].l) lans += extend(src[--l], 1); while (l &lt; q[i].l) lans += extend(src[l++], -1); *q[i].ans = lans;&#125; lans‰ª£Ë°®ÂΩìÂâçÊü•ËØ¢ÁöÑÁ≠îÊ°à„ÄÇ ‰ª£Á†Å 123456789101112131415161718192021222324252627282930313233343536373839404142#include &lt;bits/stdc++.h&gt;using namespace std;int n, m, blockSize, src[50004], ans[200005], cnt[1000006];struct query &#123; int l, r, *ans; bool operator&lt;(const query&amp; x) const &#123; if (l / blockSize == x.l / blockSize) return r &lt; x.r; return l / blockSize &lt; x.l / blockSize; &#125;&#125; q[200005];int extend(int x, int offset) &#123; if (~offset) return 1 == ++cnt[x]; else return -!--cnt[x];&#125;int main() &#123; scanf("%d", &amp;n); for (int i = 1; i &lt;= n; i++) &#123; scanf("%d", src+i); &#125; blockSize = ceil(sqrt(n)); scanf("%d", &amp;m); for (int i = 1; i &lt;= m; i++) &#123; scanf("%d%d", &amp;q[i].l, &amp;q[i].r); q[i].ans = ans+i; &#125; sort(q + 1, q + m + 1); int l = 1, r = 0, lans = 0; for (int i = 1; i &lt;= m; i++) &#123; while (r &lt; q[i].r) lans += extend(src[++r], 1); while (r &gt; q[i].r) lans += extend(src[r--], -1); while (l &gt; q[i].l) lans += extend(src[--l], 1); while (l &lt; q[i].l) lans += extend(src[l++], -1); *q[i].ans = lans; &#125; for (int i = 1; i &lt;= m; i++) &#123; printf("%d\n", ans[i]); &#125;&#125;]]></content>
      <categories>
        <category>Ëé´ÈòüÁÆóÊ≥ï</category>
      </categories>
      <tags>
        <tag>Ëé´ÈòüÁÆóÊ≥ï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÂàÜÊ≤ª„ÄëÁ¨îËÆ∞ - day6‰∏äÂçà]]></title>
    <url>%2F2018%2F02%2F12%2F%E3%80%90%E5%88%86%E6%B2%BB%E3%80%91%E7%AC%94%E8%AE%B0-day6%E4%B8%8A%E5%8D%88%2F</url>
    <content type="text"><![CDATA[‚ö†Ô∏èÊ≥®ÊÑèÔºöËøôÊòØZROIÈõÜËÆ≠ÁöÑÊ∫êÁ¨îËÆ∞ÔºåÂÖ∂‰∏≠ÊúâÂæàÂ§öÁº∫Â§±ÂíåÈÅóÊºè‰ª•ÂèäÊó†Ê≥ïÁúãÊáÇÁöÑÈÉ®ÂàÜÔºåÂ§ßÂÆ∂Â∞±‰∏çË¶ÅÁúã‰∫ÜÂêß„ÄÇ ‰ª•‰∏ãÊòØÂéüÁ¨îËÆ∞Ôºö ÂàÜÊ≤ª ÂΩíÂπ∂ÊéíÂ∫è Â∞Ü‰∏§‰∏™Â∑≤ÁªèÊúâÂ∫èÁöÑÊï∞ÁªÑÁî®O(n)O(n)O(n)ÂêàÂπ∂Êàê‰∏Ä‰∏™ÊúâÂ∫èÁöÑÊï∞ÁªÑ„ÄÇ Êó∂Èó¥Â§çÊùÇÂ∫¶O(nlogn)O(n\log n)O(nlogn) Ê†ëÁöÑÊ∑±Â∫¶O(logn)O(\log n)O(logn)Â±ÇÔºåÂΩíÂπ∂Êï¥‰∏™‰∏ÄÂ±ÇO(n)O(n)O(n)ÔºåÂÖ±O(nlogn)O(n\log n)O(nlogn)„ÄÇ ‰ΩøÁî®ËåÉÂõ¥ ËßÑÊ®°Â∞èÂèØ‰ª•Êñπ‰æøËÆ°ÁÆó ÂèØ‰ª•ÂàíÂàÜÊàêËæÉÂ∞èÂ≠êÈóÆÈ¢ò Â≠êÈóÆÈ¢òÂÖ®ÈÉ®Ëß£Âá∫ÂêéÂèØ‰ª•Ëß£ÂÜ≥ÂéüÈóÆÈ¢ò Â≠êÈóÆÈ¢òÁã¨Á´ã Master Theorem ËÆæa‚â•1,b‚â•1a\ge 1,b\ge 1a‚â•1,b‚â•1ÔºåËÆæf(n)f(n)f(n)‰∏∫‰∏ÄÂáΩÊï∞ÔºåT(n)T(n)T(n)Áî±ÈÄíÂΩíÂºèT(n)=aT(nb)+f(n)T(n)=aT(\frac nb)+f(n)T(n)=aT(‚Äãb‚Äã‚Äãn‚Äã‚Äã)+f(n)ÂÆö‰πâ„ÄÇ Ëã•f(n)&lt;nlogbaf(n)&lt;n^{\log_ba}f(n)&lt;n‚Äãlog‚Äãb‚Äã‚Äãa‚Äã‚ÄãÔºåÂàôT(n)=O(nlogba)T(n)=O(n^{\log_ba})T(n)=O(n‚Äãlog‚Äãb‚Äã‚Äãa‚Äã‚Äã) Ëã•f(n)=nlogbaf(n)=n^{log_ba}f(n)=n‚Äãlog‚Äãb‚Äã‚Äãa‚Äã‚ÄãÔºåÂàôT(n)=O(nlogbalog2n)T(n)=O(n^{log_ba}log_2n)T(n)=O(n‚Äãlog‚Äãb‚Äã‚Äãa‚Äã‚Äãlog‚Äã2‚Äã‚Äãn) Ëã•f(n)&gt;nlogbaf(n)&gt;n^{log_ba}f(n)&gt;n‚Äãlog‚Äãb‚Äã‚Äãa‚Äã‚ÄãÔºå‰∏îÂØπ‰∫é‰ªªÊÑèc&lt;1c&lt;1c&lt;1‰∏éÊâÄÊúâË∂≥Â§üÂ§ßÁöÑnnnÔºåÈÉΩÊúâaf(nb)‚â§cf(n)af(\frac nb)\le cf(n)af(‚Äãb‚Äã‚Äãn‚Äã‚Äã)‚â§cf(n)ÔºåÂàôT(n)=O(f(n))T(n)=O(f(n))T(n)=O(f(n))„ÄÇ ÈÄÜÂ∫èÂØπ n‚â§105n\le10^5n‚â§10‚Äã5‚Äã‚Äã ‰∏ÄÂàÜ‰∏∫‰∫å„ÄÇËÄÉËôëÂ∑¶ËæπËá™Ë∫´„ÄÅÂè≥ËæπËá™Ë∫´„ÄÅË∑®‰∏§Ëæπ„ÄÇË∑®‰∏§ËæπÂ∞±two-pointersËß£ÂÜ≥„ÄÇ Âø´ÈÄüÂπÇ ÂàÜÊ≤ªÂ§ßÊ≥ïÂ•Ω‰ΩçËøêÁÆóÂ§ßÊ≥ïÂ•Ω Âç≥Êó∂ÊàòÁï•(WC2018T2) 35pts ‰ªé‰∏Ä‰∏™ÁÇπÂºÄÂßãÔºåÊûö‰∏æÊâÄÊúâÂÖ∂ÂÆÉÁÇπÔºåÁÑ∂ÂêéÊääÂÆÉÂë®Âõ¥ÊâÄÊúâÁÇπÊé¢Á¥¢Âá∫Êù•ÔºåÁ±ª‰ºº‰∫ébfs„ÄÇO(n2)O(n^2)O(n‚Äã2‚Äã‚Äã)„ÄÇ ÂÆåÂÖ®‰∫åÂèâÊ†ë Solution 1 O(n2)O(\frac n2)O(‚Äã2‚Äã‚Äãn‚Äã‚Äã)Êü•Âá∫‰∏Ä‰∏™ÁÇπÂú®Âì™‰∏™Â≠êÊ†ë„ÄÇ ÁÑ∂ÂêéÊü•‰∏ãÈù¢ÁöÑO(n)O(n)O(n)‰∏™ÁÇπÔºåÂú®Ê†áËÆ∞‰∏≠‰ΩøÁî®Â†ÜÂºèÁºñÂè∑„ÄÇ ÁÑ∂ÂêéÂ∞±Áî®‰∏ªÂÆöÁêÜËØÅÂá∫O(nlogn)O(n\log n)O(nlogn)‰∫Ü„ÄÇ Solution 2 Âõ†‰∏∫ÂÆåÂÖ®‰∫åÂèâÊ†ëÁöÑÊ∑±Â∫¶ÊòØO(logn)O(\log n)O(logn)ÁöÑÔºåÊâÄ‰ª•ÂèØ‰ª•Áî®O(nlogn)O(n\log n)O(nlogn)ËøáÊéâ„ÄÇ Solution 3 Âú®ÂÆåÂÖ®‰∫åÂèâÊ†ë‰∏äBFSÔºÅ ÁôæÂ∫¶Âú∞ÂõæÁöÑÂÆûÊó∂Ë∑ØÂÜµ ÂàÜÊ≤ª‰∏•Ê†º‰∏çÁªèËøáÁöÑÁÇπÔºåsolve(l,r)solve(l,r)solve(l,r)‰ª£Ë°®[l,r][l,r][l,r]ÈÉΩÊ≤°ÊúâË¢´ËÄÉËôë„ÄÇ = = Âå∫Èó¥ÁöÑ‰ª∑ÂÄº Êûö‰∏æÊúÄÂ∞èÂÄº„ÄÇÁÑ∂Âêé‰ªéÂ∑¶Âè≥‰∏§Á´ØÊâæÊúÄÂ§ßÂÄº„ÄÇ BD String Ë∂ÖÊ∑ºÈ¢ò„ÄÇ ÂèØ‰ª•ËØÅÊòéÔºåS(n)S(n)S(n)‰∏≠BÁöÑÊï∞ÈáèÊòØ2n‚àí12^{n-1}2‚Äãn‚àí1‚Äã‚Äã„ÄÇ ÁÑ∂ÂêéËÆ°ÁÆósolve(n)solve(n)solve(n)Ôºö n=0n=0n=0ËøîÂõû000„ÄÇ n=1n=1n=1ËøîÂõû111„ÄÇ mid=2‚åälog2n‚åãmid=2^{\lfloor\log_2n\rfloor}mid=2‚Äã‚åälog‚Äã2‚Äã‚Äãn‚åã‚Äã‚Äã„ÄÇÂ¶ÇÊûú2mid‚àí1=n2mid-1=n2mid‚àí1=nÔºåËøîÂõûmidmidmid„ÄÇ Âê¶ÂàôËøîÂõûf(2mid‚àí1‚àín)+n+1‚àímidf(2mid-1-n)+n+1-midf(2mid‚àí1‚àín)+n+1‚àímid„ÄÇ My solution ‰ª§f(x)f(x)f(x)‰∏∫S(n)S(n)S(n)‰∏≠[0,x)[0,x)[0,x)ÁöÑBÁöÑÊï∞Èáè„ÄÇ ÈÇ£‰πàÁ≠îÊ°àÂ∞±Á≠â‰∫éf(l)‚àíf(r‚àí1)f(l)-f(r-1)f(l)‚àíf(r‚àí1)„ÄÇ ÁÑ∂ÂêéËÄÉËôëxxxÁöÑ‰ΩçÁΩÆ„ÄÇÂ¶ÇÊûúÂú®ÂêéÂçäÊÆµÂ∞±Â∞Ü2n‚àí1+12^{n-1}+12‚Äãn‚àí1‚Äã‚Äã+1Âä†‰∏äÂêéÂçäÊÆµ„ÄÇ ÂâçÂçäÊÆµÂ∞±Áõ¥Êé•‰ªén‚àí1n-1n‚àí1ÁÆó„ÄÇ Ê¨ßÂá†ÈáåÂæóÊúÄËøëÁÇπÂØπ ÂÖàÊåâxxxÊéíÂ∫èÔºåÁÑ∂ÂêéÊääÁÇπÂàÜÊàê‰∏§Âçä„ÄÇ ÁÑ∂ÂêéÂàùÂßãÂåñÁ≠îÊ°àd=+‚àûd=+\inftyd=+‚àû„ÄÇ ÁÑ∂ÂêéÂú®Â∑¶Âè≥‰∏§ËæπÊûö‰∏æÁÇπÔºåÂØπÁ≠îÊ°àÊõ¥Êñ∞ÊúâÁî®ÁöÑÁÇπ‰∏ÄÂÆöÊòØÂú®ËØ•ÁÇπ‰∏∫ÂúÜÂøÉÂçäÂæÑ‰∏∫dddÁöÑÁÇπ„ÄÇËøôÊ†∑ÁöÑÁÇπÊúÄÂ§öÂè™Êúâ‰∏çÂà∞666‰∏™„ÄÇ Tricky Function g(i,j)g(i,j)g(i,j)Â∞±ÊòØÁÆó(i,j](i,j](i,j]ÁöÑÂå∫Èó¥Âíå„ÄÇ ‰ª§bbb‰∏∫aaaÁöÑÂâçÁºÄÂíåÔºåÈÇ£‰πàg(i,j)=b[i]‚àíb[j]g(i,j)=b[i]-b[j]g(i,j)=b[i]‚àíb[j]„ÄÇ xxxÂùêÊ†á‰∏∫ÁºñÂè∑ÔºåyyyÂùêÊ†á‰∏∫ÂâçÁºÄÂíå„ÄÇ ÁÑ∂ÂêéÂ∞±Â∑Æ‰∏Ä‰∏™Ê†πÂè∑ÔºÅ ÁÑ∂Âêé‰∫§‰∏™ÊùøÂ≠êÂ∞±AC‰∫Ü„ÄÇ]]></content>
      <categories>
        <category>ÂàÜÊ≤ª</category>
      </categories>
      <tags>
        <tag>ÂàÜÊ≤ª</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêDP„ÄëÁ¨îËÆ∞ - day4]]></title>
    <url>%2F2018%2F02%2F10%2F%E3%80%90%E5%9B%BE%E8%AE%BA%E3%80%91%E7%AC%94%E8%AE%B0-day4%2F</url>
    <content type="text"><![CDATA[‚ö†Ô∏èÊ≥®ÊÑèÔºöËøôÊòØZROIÈõÜËÆ≠ÁöÑÊ∫êÁ¨îËÆ∞ÔºåÂÖ∂‰∏≠ÊúâÂæàÂ§öÁº∫Â§±ÂíåÈÅóÊºè‰ª•ÂèäÊó†Ê≥ïÁúãÊáÇÁöÑÈÉ®ÂàÜÔºåÂ§ßÂÆ∂Â∞±‰∏çË¶ÅÁúã‰∫ÜÂêß„ÄÇ ‰ª•‰∏ãÊòØÂéüÁ¨îËÆ∞Ôºö ÊêúÁ¥¢ DFS ‰∫åÂàÜÂõæÂà§ÂÆö dfsÂç≥ÂèØ„ÄÇ111Áõ∏ÈÇª222Ôºå222Áõ∏ÈÇª111„ÄÇ ‰∏çÊòØ‰∫åÂàÜÂõæÂàô‰ºöÊüìËâ≤ÁüõÁõæ„ÄÇ Êó∂Á©∫Èòµ ÂÖà‰∏çËÄÉËôëË∑ùÁ¶ª‰∏∫mmm„ÄÇ ËÄÉËôëbfsÁöÑÂàÜÂ±Ç„ÄÇ dpi,j,kdp_{i,j,k}dp‚Äãi,j,k‚Äã‚ÄãÂâçiiiÂ±ÇÔºåjjj‰∏™ÁÇπÔºåÁ¨¨iiiÂ±Çkkk‰∏™ÁÇπÁöÑÊñπÊ°àÊï∞„ÄÇ Êûö‰∏æÁ¨¨i+1i+1i+1Â±ÇÁöÑÁÇπÊï∞xxx„ÄÇ ‚Äã Ê†áÂè∑ Â±ÇÂÜÖ Ë∑®Â±Ç ËΩ¨ÁßªÔºödpi+1,j+x,x=dpi,j,k‚ãÖ(n‚àíjx)‚ãÖ2(x2)‚ãÖ(2k‚àí1)xdp_{i+1,j+x,x}=dp_{i,j,k}\cdot\binom{n-j}x\cdot 2^\binom x2\cdot(2^k-1)^xdp‚Äãi+1,j+x,x‚Äã‚Äã=dp‚Äãi,j,k‚Äã‚Äã‚ãÖ(‚Äãx‚Äãn‚àíj‚Äã‚Äã)‚ãÖ2‚Äã(‚Äã2‚Äãx‚Äã‚Äã)‚Äã‚Äã‚ãÖ(2‚Äãk‚Äã‚Äã‚àí1)‚Äãx‚Äã‚Äã Áé∞Âú®ËÄÉËôëË∑ùÁ¶ª‰∏∫mmm„ÄÇ dpm,j,k‚ãÖkn‚àí1dp_{m,j,k}\cdot \frac k{n-1}dp‚Äãm,j,k‚Äã‚Äã‚ãÖ‚Äãn‚àí1‚Äã‚Äãk‚Äã‚ÄãÁ¨¨mmmÂ±ÇÔºåjjj‰∏™ÁÇπÔºåÁ¨¨mmmÂ±Çkkk‰∏™ÁÇπ„ÄÇkn‚àí1k\over n-1‚Äãn‚àí1‚Äã‚Äãk‚Äã‚ÄãÊòØÂõ†‰∏∫Ê¶ÇÁéáÂíåÂØπÁß∞ÊÄß„ÄÇ ÊØè‰∏™kÂÖÉÁªÑÂá∫Áé∞ÁöÑÊ¶ÇÁéáÊòØÁõ∏Á≠âÁöÑ„ÄÇ ÂÜçËÄÉËôëÂâ©‰∏ãÁöÑn‚àíjn-jn‚àíj‰∏™ÁÇπËøûËæπ„ÄÇ ÂÆÉ‰ª¨ÂèØ‰ª•ÂÜÖÈÉ®ËøûËæπÔºåÂπ∂‰∏îÂè™ËÉΩÂíåÁ¨¨mmmÂ±Ç(k‰∏™ÁÇπ)ËøûËæπ„ÄÇ ‚Äã ÂÜÖÈÉ® Â§ñÈÉ® ÊâÄ‰ª•dpm,j,k‚ãÖkn‚àí1‚ãÖ2(n‚àíj2)‚ãÖ2k(n‚àíj)dp_{m,j,k}\cdot\frac k{n-1}\cdot 2^\binom {n-j}2\cdot 2^{k(n-j)}dp‚Äãm,j,k‚Äã‚Äã‚ãÖ‚Äãn‚àí1‚Äã‚Äãk‚Äã‚Äã‚ãÖ2‚Äã(‚Äã2‚Äãn‚àíj‚Äã‚Äã)‚Äã‚Äã‚ãÖ2‚Äãk(n‚àíj)‚Äã‚Äã„ÄÇ Ê¨ßÊãâÂõûË∑Ø Ê≠£Â∏∏Áâà ÂõæÂøÖÈ°ªËÅîÈÄöÔºåÂ∞èÂøÉÂ≠§Á´ãÁÇπ ÂÖÖË¶ÅÊù°‰ª∂Ôºö Ê¨ßÊãâË∑ØÔºö000Êàñ222‰∏™Â•áÁÇπ„ÄÇ Ê¨ßÊãâÂõûË∑ØÔºöÂÖ®ÊòØÂÅ∂ÁÇπ„ÄÇ ËØÅÊòéÁï• ‚ÄúÂõûÊ∫ØÁÆóÊ≥ï‚Äù ÁÆóÊ≥ïËØÅÊòéÁï• ‰ª£Á†ÅÔºö 12345678910111213void dfs(int u, int c) &#123; // O(n+m) void dfs(int u) &#123; while (!e[u].empty()) &#123; int v = e[u][e[u].size()-1].first; int id = e[u][e[u].size()-1].second; e[u].pop_back(); // O(1) ÂáèÂ∞èÂæ™ÁéØ‰ª£‰ª∑ if (vis[id]) continue; // ÊúâÂêëÂõæÂà†‰∫Ü vis[id] = 1; // ÊúâÂêëÂõæÂà†‰∫Ü dfs(v); ans.push_back(id);// auto it=--e[u].end(); &#125;&#125; È´òÁ´ØÁâà ÊúÄÂ∞ëË∑ØÂæÑÊï∞Ë¶ÜÁõñÊï¥Âº†ÂõæÔºü ÂÖàÂæÄ2k2k2k‰∏™Â•áÁÇπ‰πãÈó¥Âä†kkkÊù°ËæπËÆ©Â•áÁÇπÊ∂àÂ§±„ÄÇÁÑ∂ÂêéË∑ëÊ¨ßÊãâÂõûË∑ØÔºåÁÑ∂ÂêéÊãÜËæπÔºå‰ºöÊãÜÊàêkkkÊù°Ë∑ØÂæÑ„ÄÇ ÁÑ∂ÂêéËøôÈ¢òÂ∞±Êàê‰∫ÜÁªìËÆ∫È¢ò„ÄÇ ‰æãÈ¢ò 1 ? 2 Â∞ÜÂå∫Èó¥‰∏≠ÁöÑlllÂíårrrÊûÑÁÇπÂª∫ËæπÔºåÁÑ∂ÂêéÂà§Ë∑ë‰∏ÄÈÅçÊ¨ßÊãâÂõûË∑Ø„ÄÇ Â¶ÇÊûúÊúâÊ¨ßÊãâÂõûË∑ØÔºåÈÇ£‰πàÊñπÂêëÊòØ‚ÜíÂ∞±Â∞ÜÂå∫Èó¥ËÆæ‰∏∫111ÔºåÂ¶ÇÊûúÊòØ‚ÜêÂ∞±ËÆæ‰∏∫‚àí1-1‚àí1„ÄÇ Ê≤°ÊúâÊ¨ßÊãâÂõûË∑ØÂ∞±ÊääÁÇπÂÖ®ÈÉ®ÂçáÂ∫èÊéíÂ∫èÔºåÁÑ∂Âêé121212„ÄÅ343434„ÄÅ565656‚Ä¶ÁöÑËøûËæπ„ÄÇ ÁÑ∂ÂêéÂéªÊéâÂä†ÁöÑËæπÊåâÊñπÂêëËÆæÁΩÆ111Êàñ‚àí1-1‚àí1„ÄÇ ËØÅÊòéÁï• Dijkstra ÊØèÊ¨°Â∞ÜÊúÄÁü≠Ë∑ØÊúÄÁü≠ÁöÑÊú™Á°ÆÂÆöÁÇπÁ°ÆÂÆöÔºåÁÑ∂ÂêéÂÜçÂ∞ÜÊñ∞Á°ÆÂÆöÁÇπÁõ∏ÈÇªÁöÑÁÇπÊõ¥Êñ∞ÔºåÁõ¥Âà∞Ë∑ëÂÆå‰∏∫Ê≠¢„ÄÇ ÂèØ‰ª•Âà©Áî®Â∞èÊ†πÂ†ÜÂ∞ÜÂ§çÊùÇÂ∫¶‰ºòÂåñËá≥O((n+m)logn)O((n+m)\log n)O((n+m)logn)„ÄÇ Âπ≥ÊùøÁîµËßÜÂ§ßÊ≥ïÂ•Ω Á®†ÂØÜÂõæÁî®naiveÁÆóÊ≥ïÔºå‰∏çË¶Å‰ºòÂåñÔºÅ‰∏çË¶Å‰ºòÂåñÔºÅÔºÅ‰∏çË¶Å‰ºòÂåñÔºÅÔºÅÔºÅ Bellman-Ford O(nm)O(nm)O(nm) ‰∏çÊÄïË¥üÊùÉËæπ„ÄÇ dis[u][i]dis[u][i]dis[u][i]Ëµ∞‰∏çË∂ÖËøáiiiÊ≠•Âà∞uuuÁÇπ ÊñπÁ®ãÔºödis[u][i]=min(dis[u][i‚àí1],dis[v][i‚àí1]+w[v][u])dis[u][i]=min(dis[u][i-1], dis[v][i-1]+w[v][u])dis[u][i]=min(dis[u][i‚àí1],dis[v][i‚àí1]+w[v][u]) ÂçéÂÆπÈÅì Âπ∂Ê≤°Êúâ dis(x,y,dir)dis(x,y,dir)dis(x,y,dir)Ë°®Á§∫Êää(x,y)(x,y)(x,y)ÂæÄdirdirdirÊñπÂêëÁßªÂä®„ÄÇ Â∞ÜÁ©∫Ê†ºÁßªÂà∞(x,y)(x,y)(x,y)ÈôÑËøëÈúÄË¶ÅcccÁöÑ‰ª£‰ª∑ÔºåÂèØ‰ª•È¢ÑÂ§ÑÁêÜ„ÄÇ Â§öÁÇπÊúÄÁü≠Ë∑Ø HDU 6166 ÁÆÄÂçïÁâà ËÄÉËôëÊó†ÂêëÂõæ„ÄÇ ÂÖàÊääÊâÄÊúâkkk‰∏≠ÁöÑÁÇπÁöÑdisdisdisËÆæ‰∏∫000ÔºåÁÑ∂ÂêéÊùæÂºõÊó∂ËÆ∞ÂΩïÁà∂ËäÇÁÇπ„ÄÇ ÁÑ∂ÂêéÊûö‰∏æÊâÄÊúâËæπÔºåÂ¶ÇÊûúËæπÁöÑ‰∏§ËæπÊòØÊù•Ëá™‰∏çÂêåÁöÑÊ∫êÁÇπÔºåÈÇ£‰πàÁî®dis[u]+dis[v]+w[u][v]dis[u]+dis[v]+w[u][v]dis[u]+dis[v]+w[u][v]Êõ¥Êñ∞Á≠îÊ°à„ÄÇ Ê≠£Â∏∏Áâà ????? ÂÆö‰πâf(u,v)f(u,v)f(u,v)‰∏∫uuuÁÇπÈõÜÂà∞vvvÁÇπÈõÜÁöÑÊúÄÁü≠Ë∑Ø„ÄÇ ÁÑ∂ÂêéÂºÑ‰∏Ä‰∏™Ë∂ÖÁ∫ßÊ∫êÂíå‰∏Ä‰∏™Ë∂ÖÁ∫ßÊ±áÔºå‰∏Ä‰∏™ËøûÊï¥‰∏™uuuÔºå‰∏Ä‰∏™ËøûÊï¥‰∏™vvvÔºåÁÑ∂ÂêéÁÆó‰∏Ä‰∏ãÊúÄÁü≠Ë∑ØÂç≥ÂèØ„ÄÇ ÁÑ∂ÂêéÂÅö2log2n2log_2n2log‚Äã2‚Äã‚ÄãnË∑ëÂá∫ÂØπ‰∫éu,v‚ààS,u‚â†vu,v\in S,u\ne vu,v‚ààS,u‚â†v‰∏≠f(u,v)f(u,v)f(u,v)„ÄÇ Â§çÊùÇÂ∫¶nlog2nnlog^2nnlog‚Äã2‚Äã‚Äãn„ÄÇ Âº∫ËøûÈÄöÂàÜÈáè Â¶ÇÊûú‰∏ÄÂº†Âõæ‰∏≠ÊâÄÊúâÁöÑÁÇπÂØπ(u,v)(u,v)(u,v)‰∏≠ÁöÑu,vu,vu,vÂèØ‰ª•‰∫íÁõ∏Âà∞ËææÔºåÈÇ£‰πàÂº†ÂõæÊòØÂº∫ËøûÈÄöÁöÑ„ÄÇ Ê†ëËæπÔºö‰ªéÁà∂‰∫≤Ë∑ëÂà∞ÂÑøÂ≠êÁöÑËæπ„ÄÇ ËøîÁ•ñËæπÔºö‰ªéÊôöËæàË∑ëÂà∞Á•ñËæàÁöÑËæπ„ÄÇ ÂâçÂêëËæπÔºö‰ªéÁ•ñËæàË∑ëÂà∞ÊôöËæàÁöÑËæπ„ÄÇ(‰∏çÂåÖÊã¨Ê†ëËæπ) Ê®™ÂèâËæπÔºö‰π±ËøûÁöÑËæπ„ÄÇ Low CaseÔºöÊ†ëËæπ+ËøîÁ•ñËæπ(u,v)(u,v)(u,v) ÈÇ£‰πàuuuÂà∞vvvÁöÑË∑ØÂæÑÂÖ®ÈÉ®Âú®Âêå‰∏Ä‰∏™Âº∫ËøûÈÄöÂàÜÈáèÈáå„ÄÇ È¶ñÂÖàÂºÑ‰∏Ä‰∏™Êó∂Èó¥Êà≥Ôºå‰πüÂ∞±ÊòØdfn„ÄÇ ÂÆö‰πâlow[i]‰ª£Ë°®iiiÂ≠êÊ†ëËÉΩÈÄöËøáËøîÁ•ñËæπÂíåÊ®™ÂèâËæπËÉΩÂ§üÂà∞ÁöÑÁöÑÊúÄÊµÖÁöÑÁÇπ(Ë∑≥Âá∫Â≠êÊ†ë‰∏∫Ê≠¢)„ÄÇ Â¶ÇÊûúdfn[i]=low[i]ÔºåÈÇ£‰πàiiiÂ≠êÊ†ëÂÜç‰πüË∑≥‰∏ç‰∏äÂéª‰∫ÜÔºåÊâÄ‰ª•iiiÂ≠êÊ†ëÁªÑÊàê‰∏Ä‰∏™Âº∫ËøûÈÄöÂàÜÈáè„ÄÇ Ê≥®ÊÑèÔºÅÂ¶ÇÊûú‰Ω†ÈÄöËøáÊ®™ÂèâËæπÂæÄ‰∏äË∑ëÁöÑÊó∂ÂÄôË∑ëÂà∞ÁöÑÊòØ‰∏Ä‰∏™ÂÆåÊï¥ÁöÑÂº∫ËøûÈÄöÂàÜÈáèÔºåÈÇ£‰πàCongratulationsÔºåËøô‰∏™‰ΩúÂ∫ü„ÄÇ 12345678910111213141516171819202122void dfs(int u) &#123; dfn[u] = low[u] = ++ind; // index ins[u] = 1; // instack(Ê≤°ÂΩ¢ÊàêÂº∫ËøûÈÄöÂàÜÈáèÁöÑÊ†à) st[++top] = u; for (int i = 0; i &lt; e[u].size(); i++) &#123; int v = e[u][i]; if (!dfn[v]) &#123; dfs(v); low[u] = min(low[u], dfs(low[v])); &#125; else if (ins[v]) &#123; // ‰∏çÊòØÂº∫ËøûÈÄöÂàÜÈáè low[u] = min(low[u], dfn[v]); // ÂèØ‰ª•Êç¢Êàêlow[v] &#125; &#125; if (dfn[u] == low[u]) &#123; ++cnt; while (1) &#123; bel[st[top]] = cnt; // belong ins[st[top]] = 0; if (st[top--] == u) break; &#125; &#125;&#125; Áº©ÁÇπ Áº©ÁÇπÂêé‰∏ÄÂÆöÊòØ‰∏™DAG„ÄÇ ÊúÄÂ§ßÂçäËÅîÈÄöÂ≠êÂõæ ÂÖàÁº©ÁÇπ„ÄÇ Â¶ÇÊûúÂõæÊúâÂàÜÂèâÂ∞±‰ºöÂèëÁé∞‰∏çÂèØËææÔºåÁÑ∂ÂêéÊ±ÇÊúÄÈïøÈìæÂç≥ÂèØ„ÄÇ ‰∫éÊòØÊØè‰∏™ÁÇπÈÉΩÊúâ‰∫ÜÊùÉÂÄºw[i]w[i]w[i]„ÄÇ ÊúÄÂêéÂ∞±Áõ¥Êé•dp[u]=max(dp[v]+w[v]),(u,v)‚ààEdp[u]=\max(dp[v]+w[v]), (u,v)\in Edp[u]=max(dp[v]+w[v]),(u,v)‚ààE„ÄÇ]]></content>
      <categories>
        <category>DP</category>
      </categories>
      <tags>
        <tag>DP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêDP„ÄëÁ¨îËÆ∞ - day3]]></title>
    <url>%2F2018%2F02%2F09%2F%E3%80%90DP%E3%80%91%E7%AC%94%E8%AE%B0-day3%2F</url>
    <content type="text"><![CDATA[‚ö†Ô∏èÊ≥®ÊÑèÔºöËøôÊòØZROIÈõÜËÆ≠ÁöÑÊ∫êÁ¨îËÆ∞ÔºåÂÖ∂‰∏≠ÊúâÂæàÂ§öÁº∫Â§±ÂíåÈÅóÊºè‰ª•ÂèäÊó†Ê≥ïÁúãÊáÇÁöÑÈÉ®ÂàÜÔºåÂ§ßÂÆ∂Â∞±‰∏çË¶ÅÁúã‰∫ÜÂêß„ÄÇ ‰ª•‰∏ãÊòØÂéüÁ¨îËÆ∞Ôºö day2 Ê¨†Ë¥¶ ÊúÄÈïøÁÆÄÂçïÁéØ fp,s,tf_{p,s,t}f‚Äãp,s,t‚Äã‚Äã‰ªésssÂà∞tttÁªèËøáÁÇπÈõÜpppÊòØÂê¶Â≠òÂú®„ÄÇ ÂàùÂßãÔºöf2i‚àí1,i,i=1f_{2^{i-1},i,i}=1f‚Äã2‚Äãi‚àí1‚Äã‚Äã,i,i‚Äã‚Äã=1 Â¶ÇÊûúiiiÊª°Ë∂≥(t,i)‚ààE,(p&gt;&gt;(i+1)&amp;1)=0(t, i) \in E, (p&gt;&gt;(i+1)\&amp;1)=0(t,i)‚ààE,(p&gt;&gt;(i+1)&amp;1)=0ÔºåÂ∞±ÂèØ‰ª•ËΩ¨Áßªfp‚à£(1&lt;&lt;(i‚àí1)),s,if_{p|(1&lt;&lt;(i-1)),s,i}f‚Äãp‚à£(1&lt;&lt;(i‚àí1)),s,i‚Äã‚Äã fp,s,t=1f_{p,s,t}=1f‚Äãp,s,t‚Äã‚Äã=1‰∏î(t,s)‚ààE(t,s) \in E(t,s)‚ààEÔºåÂàôÈïøÂ∫¶‰∏∫__builtin_popcount(p)„ÄÇ Â§çÊùÇÂ∫¶Ôºö2nn32^nn^32‚Äãn‚Äã‚Äãn‚Äã3‚Äã‚Äã ‰ºòÂåñ ÈôêÂÆösssÊòØÁéØ‰∏≠ÊúÄÂ∞èÁöÑÁºñÂè∑ÔºåÂÖ∂ÂÆÉÊù°‰ª∂‰∏çÂèò„ÄÇ ËΩ¨ÁßªÊó∂Êûö‰∏æs+1...ns+1...ns+1...n ‚àëin2nn=n‚àëi=1n2i=O(2nn)\sum_i^n2^nn=n\sum_{i=1}^n2^i=O(2^nn)‚àë‚Äãi‚Äãn‚Äã‚Äã2‚Äãn‚Äã‚Äãn=n‚àë‚Äãi=1‚Äãn‚Äã‚Äã2‚Äãi‚Äã‚Äã=O(2‚Äãn‚Äã‚Äãn) ‰æãÈ¢ò6 fpf_pf‚Äãp‚Äã‚ÄãÂú®ÁªÑÈáåÁöÑÊúÄÂ§ßÊî∂Áõä„ÄÇ fp=maxsw[s]+fp‚àísf_p=\max\limits_s w[s]+f_{p-s}f‚Äãp‚Äã‚Äã=‚Äãs‚Äãmax‚Äã‚Äãw[s]+f‚Äãp‚àís‚Äã‚Äã (p&amp;s)=s(p\&amp;s)=s(p&amp;s)=s O(4n)O(4^n)O(4‚Äãn‚Äã‚Äã)Âπ∂‰∏çËÉΩË∑ëËøán=16n=16n=16„ÄÇ ‰ºòÂåñ pppÊúâ2k‚àí12^{k-1}2‚Äãk‚àí1‚Äã‚Äã‰∏™ÈùûÁ©∫Â≠êÈõÜÔºåÂèØ‰ª•Áî®000~2k‚àí12^{k-1}2‚Äãk‚àí1‚Äã‚ÄãË°®Á§∫ÊâÄÊúâÁöÑÂ≠êÈõÜ„ÄÇÂè™ÈúÄ2k‚àí12^{k-1}2‚Äãk‚àí1‚Äã‚ÄãÊûö‰∏æÂ≠êÈõÜ„ÄÇ ÂØπ‰∫éÊØè‰∏Ä‰∏™ÈõÜÂêàPPPÔºåÈÇ£‰πàÂ≠êÈõÜÊï∞‰∏∫2‚à£P‚à£2^{|P|}2‚Äã‚à£P‚à£‚Äã‚Äã„ÄÇ Â§çÊùÇÂ∫¶O(3n)O(3^n)O(3‚Äãn‚Äã‚Äã) 123for (s=p; s; s=(s-1)&amp;p) &#123; // ‰∏çÈáçÂ§çÊûö‰∏æÊâÄÊúâpÁöÑÂ≠êÈõÜ // do something...&#125; ÁîüÊàêÊ†ëËÆ°Êï∞ ‰ª§111‰∏∫Ê†π„ÄÇ fi,pf_{i,p}f‚Äãi,p‚Äã‚Äã‰ª£Ë°®iiiÁöÑÂ≠êÊ†ë‰∏≠ÔºåÊúâppp‰∏™ÁÇπÁöÑÂ≠êÊ†ë‰∏™Êï∞„ÄÇ 1init : f[i][1&lt;&lt;(i-1)] = 1; fi,p=‚àëfj,sfi,p‚àís,s‚äÜP‚àí{i},j‚ààsf_{i,p}=\sum f_{j,s}f_{i,p-s}, s\subseteq P-\{i\} , j\in sf‚Äãi,p‚Äã‚Äã=‚àëf‚Äãj,s‚Äã‚Äãf‚Äãi,p‚àís‚Äã‚Äã,s‚äÜP‚àí{i},j‚ààs ËÆæmin(P‚àí{i})=k\min(P-\{i\})=kmin(P‚àí{i})=k„ÄÇ Â§çÊùÇÂ∫¶O(3nn2)O(3^nn^2)O(3‚Äãn‚Äã‚Äãn‚Äã2‚Äã‚Äã) Êûö‰∏æÈ°∫Â∫è i 1~n P 0~2^n-1 ÊñØÂù¶Á∫≥Ê†ë fi,pf_{i,p}f‚Äãi,p‚Äã‚Äã‰ª•iii‰∏∫Ê†πÔºåÁªèËøáÂÖ≥ÈîÆÁÇπÈõÜÂêàppp„ÄÇ i,ji,ji,jÊòØÂÖ≥ÈîÆÁÇπfi,p=minfj,s+fi,p‚àís+wi,jf_{i,p}=\min f_{j,s}+f_{i,p-s}+w_{i,j}f‚Äãi,p‚Äã‚Äã=minf‚Äãj,s‚Äã‚Äã+f‚Äãi,p‚àís‚Äã‚Äã+w‚Äãi,j‚Äã‚Äã Â≠§Á´ãÁÇπ‰ªéÂ≠êÊ†ëÊé•Ëæπfi,p=minfj,p+wi,jf_{i,p}=\min f_{j,p}+w_{i,j}f‚Äãi,p‚Äã‚Äã=minf‚Äãj,p‚Äã‚Äã+w‚Äãi,j‚Äã‚Äã Â∏¶ÁéØÔºåÈúÄË¶ÅÁî®ÊúÄÁü≠Ë∑ØËΩ¨ÁßªÔºÅ ËΩÆÂªìÁ∫øDP‚äÜ\subseteq‚äÜÁä∂Âéã ‰æãÈ¢ò9 Êö¥Âäõ fi,pf_{i,p}f‚Äãi,p‚Äã‚Äã‰ª£Ë°®Êâ´Âà∞‰∫ÜiiiÂàóÔºåppp‰ªé‰∏ä‰∏ÄË°åÁ™ÅÂá∫Êù•‰∫Ü„ÄÇ ProcedureÔºö pppÁ¢∞Âà∞ÈöúÁ¢çÁÇπÔºåÁõ¥Êé•ÊâîÊéâ„ÄÇ Êûö‰∏æsssÔºå‰ª£Ë°®Âú®Á¨¨iiiË°å‰ºöÊ®™Âá∫‰∏ã‰∏ÄË°å„ÄÇ Êª°Ë∂≥s&amp;(p|ÈöúÁ¢ç)=0„ÄÇ ËÄå‰∏îÁ´ñÁùÄÁöÑÈ™®ÁâåÂøÖÈ°ªÂèØ‰ª•ÊëÜÂú®~(s|ÈöúÁ¢ç|p)‰∏≠„ÄÇ Â§çÊùÇÂ∫¶3^nn^{ÂæàÂ§öÊ¨°Êñπ} È´òÁ´ØÊìç‰Ωú(ËΩÆÂªìÁ∫øDP) È¶ñÂÖà‰∏ÄÂàó‰∏ÄÂàóÊîæÈ™®ÁâåÔºåÁÑ∂ÂêéÊÄªÂÖ±Êúân+1n+1n+1‰∏™ËæπÁïå„ÄÇ ÊîæÁΩÆÁöÑÊñπÂºèÔºö 12345671 8 15 . #2 9 . . #3 10. . #4 11. #5 12. #6 13. #7 14. # ËæπÁïåÔºö 1234567. . . . # 1. . . . # 1. . . . # 1. . . # 2. . . # 1. . . # 1. . . # 1 Â¶ÇÂõæÔºåÊúân+1n+1n+1‰∏™ËæπÁïå„ÄÇ ÂèØ‰ª•ËÆ∞ÂΩïÁä∂ÊÄÅfi,j,pf_{i,j,p}f‚Äãi,j,p‚Äã‚Äã‰ª£Ë°®ÊîæÂà∞‰∫Ü(i,j)(i,j)(i,j)ÁÇπÔºåËæπÁïåpppÊñπÊ°àÊï∞„ÄÇ ‰∏çÂêàÊ≥ïÁä∂ÊÄÅÔºö iiiË¶ÅÈïøÂá∫Êù•Êàñi+1i+1i+1Ë¶ÅÈïøÂá∫Êù•Âπ∂‰∏î(i,j)(i,j)(i,j)ÊòØÈöúÁ¢ç„ÄÇ iiiÂíåi+1i+1i+1ÈÉΩË¶ÅÈïøÂá∫Êù•„ÄÇ ÂêàÊ≥ïÁä∂ÊÄÅÔºö iiiÂíåi+1i+1i+1Âè™Êúâ‰∏Ä‰∏™ÈïøÂá∫Êù•Âπ∂‰∏î(i,j)(i,j)(i,j)‰∏çÊòØÈöúÁ¢çÔºå ËΩ¨ÁßªÂà∞P‚àí(1&lt;&lt;(i‚àí1))P-(1&lt;&lt;(i-1))P‚àí(1&lt;&lt;(i‚àí1))ÊàñP‚àí(1&lt;&lt;i)P-(1&lt;&lt;i)P‚àí(1&lt;&lt;i)„ÄÇ ÂÖ∂ÂÆÉÈïøÂá∫ÊÉÖÂÜµÁõ¥Êé•ËΩ¨ÁßªÂà∞P+(1&lt;&lt;(i‚àí1))P+(1&lt;&lt;(i-1))P+(1&lt;&lt;(i‚àí1))ÊàñP+(1&lt;&lt;i)P+(1&lt;&lt;i)P+(1&lt;&lt;i)„ÄÇ ÊúÄÂêéÊâ´ÂÆå‰∏ÄË°åÂêéÈúÄË¶ÅÊõ¥Êñ∞ËΩÆÂªìÁ∫øÊâçÂèØ‰ª•ÁªßÁª≠DP„ÄÇ Êñ∞ÁöÑËΩÆÂªìÁ∫ø‰∏≠ÁöÑÁ¨¨‰∏Ä‰∏™‰∏ÄÂÆöÊòØ000(ËæπÁïåÂ§ñ‰∏çÂèØËÉΩÊúâËÇ°Áâå‰∏ãÊù•) Â¶ÇÊûún+1n+1n+1‰∏∫111Â∞±Áõ¥Êé•‰∏¢Êéâ(‰º∏Âà∞‰∫ÜËæπÁïåÂ§ñÈù¢) ÁÑ∂ÂêéÂ∞±Áõ¥Êé•Â∑¶Áßª‰∏Ä‰Ωç(111ÁßªÂà∞222 222ÁßªÂà∞333‚Ä¶nnnÁßªÂà∞n+1n+1n+1) Â§çÊùÇÂ∫¶O(2nn2)O(2^nn^2)O(2‚Äãn‚Äã‚Äãn‚Äã2‚Äã‚Äã) Êûö‰∏æÈ°∫Â∫èjjj„ÄÅiii„ÄÅppp„ÄÇ kÂõΩÁéãÈóÆÈ¢ò fi,j,k,pf_{i,j,k,p}f‚Äãi,j,k,p‚Äã‚Äã ÊîæÂà∞(i,j)(i,j)(i,j)ÔºåÊîæ‰∫Ükkk‰∏™ÂõΩÁéãÔºåËΩÆÂªìÁ∫øÂ§ñÁöÑpppÊ†º‰ºöË¢´ÊîªÂáª„ÄÇ ËÆ®ËÆ∫‰∏§ÁßçÊÉÖÂÜµÔºöÊîæËøòÊòØ‰∏çÊîæ„ÄÇ ÊîæÂ∞±ÊääÂë®Âõ¥‰∏ÄÂúàÁöÑpppÊõ¥Êñ∞ÔºåÂê¶ÂàôÁõ¥Êé•ËΩ¨Áßª„ÄÇ maxi=0\max\limits_i=0‚Äãi‚Äãmax‚Äã‚Äã=0 day2e B f_{Âè∂Â≠ê}=+\inf,f_.=0 fi+=min(w,fj)f_i+=\min(w,f_j)f‚Äãi‚Äã‚Äã+=min(w,f‚Äãj‚Äã‚Äã) C fi,pf_{i,p}f‚Äãi,p‚Äã‚Äã ÂâçiiiÈÄâpppÊòØÂê¶ËÉΩÂà∞Ëææ Êûö‰∏æaaa„ÄÅbbb„ÄÇ fi,p‚àí&gt;fi+1,p+(1&lt;&lt;(a‚àí1))+(1&lt;&lt;(b‚àí1))f_{i,p}-&gt;f_{i+1,p+(1&lt;&lt;(a-1))+(1&lt;&lt;(b-1))}f‚Äãi,p‚Äã‚Äã‚àí&gt;f‚Äãi+1,p+(1&lt;&lt;(a‚àí1))+(1&lt;&lt;(b‚àí1))‚Äã‚Äã (p&gt;&gt;(a,b‚àí1))&amp;1=0(p&gt;&gt;(a,b-1))\&amp;1=0(p&gt;&gt;(a,b‚àí1))&amp;1=0ÔºåÊª°Ë∂≥Ëæπ A fi,j=‚àëk=0wifi‚àí1,j‚àík(jk)f_{i,j}=\sum_{k=0}^{w_i}f_{i-1,j-k}\binom jkf‚Äãi,j‚Äã‚Äã=‚àë‚Äãk=0‚Äãw‚Äãi‚Äã‚Äã‚Äã‚Äãf‚Äãi‚àí1,j‚àík‚Äã‚Äã(‚Äãk‚Äãj‚Äã‚Äã) O((‚àëwi)2)O((\sum w_i)^2)O((‚àëw‚Äãi‚Äã‚Äã)‚Äã2‚Äã‚Äã) D ÊîπÊùøËΩÆÂªìÁ∫øDPÊ®°Êùø E fi,jf_{i,j}f‚Äãi,j‚Äã‚ÄãÊ∑±Â∫¶‚â§j\le j‚â§jÔºåÊúâiiiÁÇπ„ÄÇ fi‚àí1,j‚àí1‚ãÖ2‚ãÖif_{i-1,j-1}\cdot 2\cdot if‚Äãi‚àí1,j‚àí1‚Äã‚Äã‚ãÖ2‚ãÖi ‚àëk=1i‚àí2fk,j‚àí1‚ãÖfi‚àík‚àí1,j‚àí1‚ãÖi‚ãÖ(i‚àí2i‚àík‚àí2)\sum_{k=1}^{i-2}f_{k,j-1}\cdot f_{i-k-1,j-1}\cdot i\cdot \binom{i-2}{i-k-2}‚àë‚Äãk=1‚Äãi‚àí2‚Äã‚Äãf‚Äãk,j‚àí1‚Äã‚Äã‚ãÖf‚Äãi‚àík‚àí1,j‚àí1‚Äã‚Äã‚ãÖi‚ãÖ(‚Äãi‚àík‚àí2‚Äãi‚àí2‚Äã‚Äã) f0,i=1f_{0,i}=1f‚Äã0,i‚Äã‚Äã=1 f1,i=1f_{1,i}=1f‚Äã1,i‚Äã‚Äã=1 Áä∂ÊÄÅO(nd)O(nd)O(nd)ÔºåËΩ¨ÁßªO(n)O(n)O(n) Â§çÊùÇÂ∫¶O(n2d)O(n^2d)O(n‚Äã2‚Äã‚Äãd)]]></content>
      <categories>
        <category>DP</category>
      </categories>
      <tags>
        <tag>DP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêDP„ÄëÁ¨îËÆ∞ - day2]]></title>
    <url>%2F2018%2F02%2F08%2F%E3%80%90DP%E3%80%91%E7%AC%94%E8%AE%B0-day2%2F</url>
    <content type="text"><![CDATA[‚ö†Ô∏èÊ≥®ÊÑèÔºöËøôÊòØZROIÈõÜËÆ≠ÁöÑÊ∫êÁ¨îËÆ∞ÔºåÂÖ∂‰∏≠ÊúâÂæàÂ§öÁº∫Â§±ÂíåÈÅóÊºè‰ª•ÂèäÊó†Ê≥ïÁúãÊáÇÁöÑÈÉ®ÂàÜÔºåÂ§ßÂÆ∂Â∞±‰∏çË¶ÅÁúã‰∫ÜÂêß„ÄÇ ‰ª•‰∏ãÊòØÂéüÁ¨îËÆ∞Ôºö day1Ê¨†Ë¥¶ ÁÆÄÂçïÈ¢ò fn,x,yf_{n,x,y}f‚Äãn,x,y‚Äã‚ÄãÈïøÂ∫¶aaaÔºåx,yx,yx,yË°®Á§∫111Âíå000ÁöÑÂ•áÂÅ∂ÊÄß„ÄÇ fn,0,y‚àí&gt;fn,0,y xor 1f_{n,0,y} -&gt; f_{n,0,y\ xor\ 1}f‚Äãn,0,y‚Äã‚Äã‚àí&gt;f‚Äãn,0,y xor 1‚Äã‚Äã fn,x,0‚àí&gt;fn,x xor 1,0f_{n,x,0} -&gt; f_{n,x\ xor\ 1,0}f‚Äãn,x,0‚Äã‚Äã‚àí&gt;f‚Äãn,x xor 1,0‚Äã‚Äã Áü©Èòµ‰ºòÂåñ fn+1,0,0,fn+1,0,1,fn+1,1,0,fn+1,1,1f_{n+1,0,0}, f_{n+1,0,1}, f_{n+1,1,0}, f_{n+1,1,1}f‚Äãn+1,0,0‚Äã‚Äã,f‚Äãn+1,0,1‚Äã‚Äã,f‚Äãn+1,1,0‚Äã‚Äã,f‚Äãn+1,1,1‚Äã‚Äã 000 0/10/10/1 ‰∏çÊîæ 111 ËΩ¨ÁßªÁü©Èòµ [0100100100000100]\left[ \begin{array}{c} 0 &amp; 1 &amp; 0 &amp; 0\\ 1 &amp; 0 &amp; 0 &amp; 1\\ 0 &amp; 0 &amp; 0 &amp; 0\\ 0 &amp; 1 &amp; 0 &amp; 0 \end{array} \right] ‚Äã‚é£‚Äã‚é¢‚Äã‚é¢‚Äã‚é°‚Äã‚Äã‚Äã0‚Äã1‚Äã0‚Äã0‚Äã‚Äã‚Äã1‚Äã0‚Äã0‚Äã1‚Äã‚Äã‚Äã0‚Äã0‚Äã0‚Äã0‚Äã‚Äã‚Äã0‚Äã1‚Äã0‚Äã0‚Äã‚Äã‚Äã‚é¶‚Äã‚é•‚Äã‚é•‚Äã‚é§‚Äã‚Äã Ê†ëÂΩ¢DP ÈáçÁÇπÔºÅÂ¶ÇÊûúÂêàÂπ∂‰∏§‰∏™Â≠êÊ†ëÊó∂Èó¥ÊòØ‰∏§‰∏™Â≠êÊ†ëÁöÑ‰πòÁßØÔºåÈÇ£‰πàËøô‰∏™Ê†ëÂΩ¢DPÊòØÂπ≥ÊñπÁöÑ Ê®°Êùø 1234567891011121314151617181920212223242526#include &lt;bits/stdc++.h&gt;using namespace std;void merge(int x, int p) &#123; // ÂêàÂπ∂Â≠êÊ†ë f[p][0] = f[p][1] + /* max(f[k][0], f[k][1]) */; f[p][1] = f[p][0] + f[x][1];&#125;void init(int x) &#123; // ÂàùÂßãÂåñ // f[k][0] = 0;// f[k][1] = 1;&#125;void treedp(int x) &#123; // Ê†ëÂΩ¢dp ‰∏çÈúÄË¶ÅÊîπ for (int i = 0; i &lt; c[x].size(); i++) &#123; treedp(c[x][i]); &#125; init(x); for (int i = 0; i &lt; c[x].size(); i++) &#123; merge(c[x][i], x); &#125;&#125;int main() &#123; // Áä∂ÊÄÅ -&gt; init -&gt; merge &#125; ÊúÄÂ§ßÁã¨Á´ãÈõÜ ÂêåÊ®°Êùø ‰æãÈ¢ò2 123456state: f[i][0], f[i][1]init : f[i][1] = f[i][0] = 0;merge: f[x][1] = max(f[p][1] + max(f[x][1], f[x][0]), f[p][0] + f[x][0] + 1); : f[x][0] = f[p][0] + max(f[x][1], f[x][0]); // Áº∫Â§±ÈÉ®ÂàÜ ‰æãÈ¢ò3 12345state: f[i][0] Êàë‰∏çÊòØÔºåÂ≠©Â≠ê‰πü‰∏çÊòØ[‰∏çÂêàÊ≥ï] : f[i][1] Êàë‰∏çÊòØÔºåÂ≠©Â≠êÊòØ[ÂêàÊ≥ï] : f[i][2] ÊàëÊòØ[Êª°Ë∂≥]init : f[i][0] = 0, f[i][2] = 1, f[i][1] = 0x3f3f3f3fmerge: x\p 0 1 2 0 2 1 0 1 2 2 1 1 2 HOMEWORKÔºöË∑ùÁ¶ª‰∏∫222 ‰æãÈ¢ò4 ÁÆÄÂåñÁâà(Âè™ËÄÉËôëÂ≠êÊ†ë) 12345f[i][x][y] ÂΩìÂâçÂ≠êÊ†ëÂÖ≥ÈîÆÁÇπ ÂΩìÂâçÂ≠êÊ†ëÁöÑÂ≠êÊ†ëf[i][0][0] = 0f[i][1][0] = 1f[i][0][1] = f[i][1][1] = 0x3f3f3f3f x\p 0,0 0,1 1,0 1,1 0 0,1 1,1 1 1,0 1,1 1,0 1,1 ÊôÆÈÄöÁâà Â≠òÂú®Â∫¶Êï∞Â§ß‰∫é333ÁöÑÁÇπ Ë¥™ÂøÉÂú∞ÈÄâ‰∏Ä‰∏™Â∫¶Â§ß‰∫é333ÁöÑÁÇπ‰∏∫Ê†πÔºåÁÑ∂ÂêéÂêåÁÆÄÂåñÁâà ‰∏çÂ≠òÂú®(Èìæ)ÔºåËæìÂá∫111„ÄÇ ‰æãÈ¢ò5 1234567f[i]Ë°®Á§∫Âè™Âà†‰ª•i‰∏∫Ê†πÁöÑÂ≠êÊ†ëÁöÑans(minimal maximum)f[Âè∂Â≠ê]=0x3f3f3f3ff[ÂÖ∂ÂÆÉ]=0merge:f[i]=max(f[i], x); ÁªÉ‰π†1 1234 0 1 ---0|0 11|0 x ans = 5471492 [ÊöÇÁº∫] ‰æãÈ¢ò6 ÁÆÄÂåñÁâà(Âè™ËÄÉËôëÂ≠êÊ†ë) ff=max(ff,fj‚àíwj)f_f=\max(f_f, f_j-w_j)f‚Äãf‚Äã‚Äã=max(f‚Äãf‚Äã‚Äã,f‚Äãj‚Äã‚Äã‚àíw‚Äãj‚Äã‚Äã) ÊôÆÈÄöÁâà ‰ª§Â≠êÊ†ëÂ§ñÊúÄÈïøË∑Ø‰∏∫uiu_iu‚Äãi‚Äã‚Äã„ÄÇ Áª¥Êä§Ê¨°Â§ßÂÄºgfg_fg‚Äãf‚Äã‚ÄãÂíåfff_ff‚Äãf‚Äã‚ÄãÁöÑÊù•Ê∫êwherefwhere_fwhere‚Äãf‚Äã‚Äã„ÄÇ gfg_fg‚Äãf‚Äã‚ÄãÂàùÂßã000„ÄÇ 1234if (f[k] + w &gt; f[f]) &#123; g[f] = f[k]; &#125; 123456User -&gt; Web: SubmitWeb -&gt; Judger: SubmitNote right of Judger: Waiting &amp; JudgingJudger -&gt; Web: WAWeb -&gt; User: WANote left of User: MMP 123456789101112131415161718start=&gt;start: ÂÅöÈ¢òneedIOOptimize=&gt;condition: ÈúÄË¶ÅÂø´ÈÄüIO?kengDie=&gt;operation: ÂùëÁàπ,ÂëΩÈ¢ò‰∫∫SBimplementation=&gt;condition: Â§ßÊ®°ÊãüÈ¢ò?codeLong=&gt;operation: ÈöæÂÜô,ÂëΩÈ¢ò‰∫∫SBconstant=&gt;condition: È¢òÁõÆËøòÂç°Â∏∏?boring=&gt;operation: Êó†ËÅä,ÂëΩÈ¢ò‰∫∫SBisEasy=&gt;condition: È¢òÁõÆÂ§™ÁÆÄÂçï?water=&gt;operation: Â§™Ê∞¥,ÂëΩÈ¢ò‰∫∫SBend=&gt;end: Â©äÊ≠ªÂá∫È¢ò‰∫∫start-&gt;needIOOptimizeneedIOOptimize(yes)-&gt;kengDie-&gt;endneedIOOptimize(no)-&gt;implementationimplementation(yes)-&gt;codeLong-&gt;endimplementation(no)-&gt;constantconstant(yes)-&gt;boring-&gt;endconstant(no)-&gt;water-&gt;end ‰æãÈ¢ò7 ‰ª§ÊØèÊù°ËæπÁªèËøáfif_if‚Äãi‚Äã‚ÄãÊ¨°ÔºåÈÇ£‰πàans=‚àëdifians = \sum d_if_ians=‚àëd‚Äãi‚Äã‚Äãf‚Äãi‚Äã‚ÄãÔºådid_id‚Äãi‚Äã‚ÄãÊòØÊùÉÂÄº„ÄÇ dfsÊ±ÇÂá∫fif_if‚Äãi‚Äã‚ÄãÂç≥ÂèØ„ÄÇ ÁõëÊµãÁ´ô ‰π±Êêû Ê†ëÂΩ¢ËÉåÂåÖ fi,jf_{i,j}f‚Äãi,j‚Äã‚ÄãË°®Á§∫iiiÂ≠êÊ†ëjjjÂÆπÈáè gi,jg_{i,j}g‚Äãi,j‚Äã‚ÄãË°®Á§∫‰∏çÈÄâiiiÁöÑÂ≠êÊ†ëjjjÂÆπÈáè ÂàùÂßãgi,j=0g_{i,j}=0g‚Äãi,j‚Äã‚Äã=0 Â¶ÇÊûúÈÄâiiiÂ∞±‰∏ÄÂÆöÈÄâÊï¥‰∏™Â≠êÊ†ë Ôºömax(gi,j,‚àëvi)(j‚â•‚àëvi)max(g_{i,j},\sum v_i)(j \ge \sum v_i)max(g‚Äãi,j‚Äã‚Äã,‚àëv‚Äãi‚Äã‚Äã)(j‚â•‚àëv‚Äãi‚Äã‚Äã) gi,a+b‚Ä≤=gi,a+fc,bg&#x27;_{i,a+b}=g_{i,a}+f_{c,b}g‚Äãi,a+b‚Äã‚Ä≤‚Äã‚Äã=g‚Äãi,a‚Äã‚Äã+f‚Äãc,b‚Äã‚Äã fi,j={gi,jj&gt;‚àëvi,max(gi,j,‚àëvi)j‚â•‚àëvi. f_{i,j}=\left\{\begin{array}l g_{i,j} &amp; j&gt;\sum v_i,\\ max(g_{i,j}, \sum v_i) &amp; j\ge \sum v_i. \end{array}\right. f‚Äãi,j‚Äã‚Äã={‚Äãg‚Äãi,j‚Äã‚Äã‚Äãmax(g‚Äãi,j‚Äã‚Äã,‚àëv‚Äãi‚Äã‚Äã)‚Äã‚Äã‚Äãj&gt;‚àëv‚Äãi‚Äã‚Äã,‚Äãj‚â•‚àëv‚Äãi‚Äã‚Äã.‚Äã‚Äã Êó∂Èó¥Â§çÊùÇÂ∫¶O(n3)O(n^3)O(n‚Äã3‚Äã‚Äã) Áä∂ÂéãDP ‰æãÈ¢ò1 fi,p[n]f_{i,p[n]}f‚Äãi,p[n]‚Äã‚ÄãÂâçiiiË°£ÊúçÔºåpip_ip‚Äãi‚Äã‚ÄãË£§Â≠êÊòØÂê¶ÈÖçÂØπ„ÄÇ for j=1...n (i+1, j)ÂèØÈÖçÂØπÔºåpj=0p_j=0p‚Äãj‚Äã‚Äã=0 f[i+1][j|(1&lt;&lt;(j-1))] += f[i][j]; 12343 91 1 1 2 1 32 1 2 2 2 33 1 3 2 3 3 ‰æãÈ¢ò2 ÊãìÊâëÊéíÂ∫èËÆ°Êï∞(NP-Hard) fpf_pf‚Äãp‚Äã‚ÄãÈÄâÁöÑÁÇπÊï∞„ÄÇ ÂØπ‰∫éÊâÄÊúâÊª°Ë∂≥Ë¶ÅÊ±ÇÁöÑ(k, j)ÔºåjjjÊ≤°Ë¢´ÈÄâÔºåkkkÊîæ‰∫ÜÔºåfp‚à£(1&lt;&lt;(j‚àí1))+=fpf_{p|(1&lt;&lt;(j-1))} += f_pf‚Äãp‚à£(1&lt;&lt;(j‚àí1))‚Äã‚Äã+=f‚Äãp‚Äã‚Äã„ÄÇ 20:2n20: 2^n20:2‚Äãn‚Äã‚Äã 18:2nn18: 2^nn18:2‚Äãn‚Äã‚Äãn 16:2nn2/3n16: 2^nn^2 / 3^n16:2‚Äãn‚Äã‚Äãn‚Äã2‚Äã‚Äã/3‚Äãn‚Äã‚Äã ‰æãÈ¢ò3 tit_it‚Äãi‚Äã‚Äã‰ª£Ë°®Á¨¨iiiÊù°Áõ¥Á∫øË¶ÜÁõñÁÇπÁöÑ„ÄÇ fp=min(fp‚à£ti,...,fp+1)f_p=\min(f_{p|t_i},...,f_p+1)f‚Äãp‚Äã‚Äã=min(f‚Äãp‚à£t‚Äãi‚Äã‚Äã‚Äã‚Äã,...,f‚Äãp‚Äã‚Äã+1) Âõ∫ÂÆö‰∏Ä‰∏™Á´ØÁÇπÔºåÂèØ‰ª•Â∞ÜÊûö‰∏æÁõ¥Á∫øÊîπ‰∏∫O(n)O(n)O(n)„ÄÇ 2n‰∏™ÁÇπÊúÄÁü≠Ë∑Ø‰π±ÊêûÔºü ‰æãÈ¢ò4 Who knowsÔºü for i=1..m fp‚à£ti=max(...,fp+1)(p&amp;ti=0)f_{p|t_i}=\max(..., f_p+1)(p\&amp;t_i=0)f‚Äãp‚à£t‚Äãi‚Äã‚Äã‚Äã‚Äã=max(...,f‚Äãp‚Äã‚Äã+1)(p&amp;t‚Äãi‚Äã‚Äã=0) ‰æãÈ¢ò5 ÊúÄÈïøÁÆÄÂçïÁéØ(NP-Hard NPC) ÂÆûÁé∞‰æãÈ¢ò2 (ÈÄâÂÅö‰æãÈ¢ò5)]]></content>
      <categories>
        <category>DP</category>
      </categories>
      <tags>
        <tag>DP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêDP„ÄëÁ¨îËÆ∞ - day1]]></title>
    <url>%2F2018%2F02%2F07%2F%E3%80%90DP%E3%80%91%E7%AC%94%E8%AE%B0-day1%2F</url>
    <content type="text"><![CDATA[‚ö†Ô∏èÊ≥®ÊÑèÔºöËøôÊòØZROIÈõÜËÆ≠ÁöÑÊ∫êÁ¨îËÆ∞ÔºåÂÖ∂‰∏≠ÊúâÂæàÂ§öÁº∫Â§±ÂíåÈÅóÊºè‰ª•ÂèäÊó†Ê≥ïÁúãÊáÇÁöÑÈÉ®ÂàÜÔºåÂ§ßÂÆ∂Â∞±‰∏çË¶ÅÁúã‰∫ÜÂêß„ÄÇ ‰ª•‰∏ãÊòØÂéüÁ¨îËÆ∞Ôºö fi,j+1=fa,b(Aa=Ab,Ai=Aj,Aa&gt;Ai,i&lt;a,j&lt;b)f_{i,j}+1=f_{a,b}(A_a=A_b, A_i=A_j, A_a &gt; A_i, i&lt;a, j&lt;b)f‚Äãi,j‚Äã‚Äã+1=f‚Äãa,b‚Äã‚Äã(A‚Äãa‚Äã‚Äã=A‚Äãb‚Äã‚Äã,A‚Äãi‚Äã‚Äã=A‚Äãj‚Äã‚Äã,A‚Äãa‚Äã‚Äã&gt;A‚Äãi‚Äã‚Äã,i&lt;a,j&lt;b) ‰∫åÂèâÊ†ëÊûö‰∏æaaaÔºåÊ±ÇÂá∫jjj‰πãÂêéÁ¨¨‰∏Ä‰∏™Aa=AbA_a = A_bA‚Äãa‚Äã‚Äã=A‚Äãb‚Äã‚Äã È¢ÑÂ§ÑÁêÜÔºü ni,x‚â†i+1,ni,x=ni+1,xn_{i,x} \ne i+1, n_{i,x}=n_{i+1,x}n‚Äãi,x‚Äã‚Äã‚â†i+1,n‚Äãi,x‚Äã‚Äã=n‚Äãi+1,x‚Äã‚Äã ni,x=i+1,ni,x=i+1n_{i,x} = i+1, n_{i,x} = i+1n‚Äãi,x‚Äã‚Äã=i+1,n‚Äãi,x‚Äã‚Äã=i+1 1| 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | fn,m=(s‚àí1n‚àí1)‚àës=1nfn‚àís,m‚àí1f_{n,m} = \binom {s-1} {n-1}\sum_{s=1}^nf_{n-s,m-1}f‚Äãn,m‚Äã‚Äã=(‚Äãn‚àí1‚Äãs‚àí1‚Äã‚Äã)‚àë‚Äãs=1‚Äãn‚Äã‚Äãf‚Äãn‚àís,m‚àí1‚Äã‚Äã fn,m=mfn‚àí1,m+fn‚àí1,m‚àí1f_{n,m}=mf_{n-1,m}+f_{n-1,m-1}f‚Äãn,m‚Äã‚Äã=mf‚Äãn‚àí1,m‚Äã‚Äã+f‚Äãn‚àí1,m‚àí1‚Äã‚Äã ‰ºòÂåñÁä∂ÊÄÅÔºüËΩ¨ÁßªÔºü ÈîôÊéíÈóÆÈ¢ò fnf_nf‚Äãn‚Äã‚Äã ÂΩìa‚â†na \ne na‚â†nÊó∂Ôºå(n‚àí1)fn‚àí2(n-1)f_{n-2}(n‚àí1)f‚Äãn‚àí2‚Äã‚Äã ÂΩìa=na=na=nÊó∂Ôºå(n‚àí1)fn‚àí1(n-1)f_{n-1}(n‚àí1)f‚Äãn‚àí1‚Äã‚Äã fn=(n‚àí1)(fn‚àí1+fn‚àí2)f_n=(n-1)(f_{n-1}+f_{n-2})f‚Äãn‚Äã‚Äã=(n‚àí1)(f‚Äãn‚àí1‚Äã‚Äã+f‚Äãn‚àí2‚Äã‚Äã) ÈÄÜÂ∫èÂØπ fn,mf_{n,m}f‚Äãn,m‚Äã‚Äã‰ª£Ë°®nnn‰∏™Êï∞‰∫ßÁîümmm‰∏™ÈÄÜÂ∫èÂØπÁöÑÊï∞Èáè„ÄÇ fn,m=‚àëk=1nfn‚àí1,m‚àík+1f_{n,m}=\sum_{k=1}^nf_{n-1,m-k+1}f‚Äãn,m‚Äã‚Äã=‚àë‚Äãk=1‚Äãn‚Äã‚Äãf‚Äãn‚àí1,m‚àík+1‚Äã‚Äã ÂâçÁºÄÂíå‰ºòÂåñ (m‚àín,m](m-n,m](m‚àín,m] fn,m=gi,m‚àígi,m‚àínf_{n,m}=g_{i,m}-g_{i,m-n}f‚Äãn,m‚Äã‚Äã=g‚Äãi,m‚Äã‚Äã‚àíg‚Äãi,m‚àín‚Äã‚Äã ‰æãÈ¢ò2 „ÄêIMPOSSIBLE„Äë f_{i,j}ÂâçiiiÁâ©ÂìÅÔºåÂèñjjjÁöÑÈïøÂ∫¶ÔºåÊñπÊ°àÊï∞„ÄÇ f_{i,j}=\sum_{k=0}^{w_i}g_{j-k,k}f_{i-1,j-k} ‰æãÈ¢ò3 ‰∫åÂèâÊ†ëÔºöfn=‚àëi=0n‚àí1fifn‚àíi‚àí1(n‚àí1i)f_n=\sum_{i=0}^{n-1}f_if_{n-i-1}\binom {n-1} if‚Äãn‚Äã‚Äã=‚àë‚Äãi=0‚Äãn‚àí1‚Äã‚Äãf‚Äãi‚Äã‚Äãf‚Äãn‚àíi‚àí1‚Äã‚Äã(‚Äãi‚Äãn‚àí1‚Äã‚Äã) ‰∫åÂèâÊ†ëÁöÑÂ≠êÁªìÊûÑÊÄßË¥® ÊúâÊ†πÊ†ëÔºöfn=‚àëi=1n‚àí1fifn‚àíi(n‚àí2i‚àí1)f_n = \sum_{i=1}^{n-1}f_if_{n-i}\binom{n-2}{i-1}f‚Äãn‚Äã‚Äã=‚àë‚Äãi=1‚Äãn‚àí1‚Äã‚Äãf‚Äãi‚Äã‚Äãf‚Äãn‚àíi‚Äã‚Äã(‚Äãi‚àí1‚Äãn‚àí2‚Äã‚Äã) ÂéªÊéâ‰∏ÄÊ£µÂ≠êÊ†ëËøòÊòØ‰∏ÄÊ£µÊ†ë kkkÂèâÊ†ëÔºöf_{n,k}=\sum_{i=1}^{n-1}f_{i,1}f_{n-i,k-1}\binom{n-2}{i-1} gn,m=‚àëi=1n‚àí1gn‚àíi,m‚àí1fig_{n,m}=\sum_{i=1}^{n-1}g_{n-i,m-1}f_ig‚Äãn,m‚Äã‚Äã=‚àë‚Äãi=1‚Äãn‚àí1‚Äã‚Äãg‚Äãn‚àíi,m‚àí1‚Äã‚Äãf‚Äãi‚Äã‚Äã fi=‚àëj=0kgi,jf_i=\sum_{j=0}^kg_{i,j}f‚Äãi‚Äã‚Äã=‚àë‚Äãj=0‚Äãk‚Äã‚Äãg‚Äãi,j‚Äã‚Äã gn,mg_{n,m}g‚Äãn,m‚Äã‚Äã Ê†πmmmÂÖ∂ÂÆÉnnn ÊãÜÂàÜÊï∞ fi,j=fi,j‚àíi+fi‚àí1,j‚àíif_{i, j} = f_{i, j-i} + f_{i-1, j} - if‚Äãi,j‚Äã‚Äã=f‚Äãi,j‚àíi‚Äã‚Äã+f‚Äãi‚àí1,j‚Äã‚Äã‚àíi n‚â§105n \le 10^5n‚â§10‚Äã5‚Äã‚ÄãÊÉÖÂÜµ gi,jg_{i,j}g‚Äãi,j‚Äã‚Äã iii‰∏™Êï∞ÔºåÂíå‰∏∫jjj„ÄÇ i‚â§ni \le \sqrt ni‚â§‚àö‚Äãn‚Äã‚Äã‚ÄãÊó∂Ôºöfi,j=fi‚àí1,j+fi,j‚àíif_{i,j}=f_{i-1,j}+f_{i,j}-if‚Äãi,j‚Äã‚Äã=f‚Äãi‚àí1,j‚Äã‚Äã+f‚Äãi,j‚Äã‚Äã‚àíi i‚â•ni \ge \sqrt ni‚â•‚àö‚Äãn‚Äã‚Äã‚ÄãÊó∂Ôºögi,j=gi‚àí1,j‚àí1+gi,j‚àíig_{i,j}=g_{i-1,j-1}+g_{i,j-i}g‚Äãi,j‚Äã‚Äã=g‚Äãi‚àí1,j‚àí1‚Äã‚Äã+g‚Äãi,j‚àíi‚Äã‚Äã h_j = \sum_{i=0}^\sqrt ng_{i,j-i\sqrt n} Ans=‚àëA=0nfn,Ahn‚àíAAns = \sum_{A=0}^nf_{\sqrt n, A}h_{n-A}Ans=‚àë‚ÄãA=0‚Äãn‚Äã‚Äãf‚Äã‚àö‚Äãn‚Äã‚Äã‚Äã,A‚Äã‚Äãh‚Äãn‚àíA‚Äã‚Äã Alt+F4 F(U)‚äÇKF(U)\subset KF(U)‚äÇKING HOMEWORK Y‚àÖ‚à™RY\emptyset\cup RY‚àÖ‚à™R logn\log nlogn 202020 n\sqrt n‚àö‚Äãn‚Äã‚Äã‚Äã 300300300 Ê±ÇÈïøÂ∫¶‰∏∫500050005000ÊÅ∞Â•ΩÊúâ100000100000100000‰∏™ÈÄÜÂ∫èÂØπÁöÑÊéíÂàó‰∏™Êï∞ nnn‰∏™ÁÇπÂ∏¶Ê†áÂè∑ÁöÑÊó†ÂêëÂõæ‰∏™Êï∞ nnn‰∏™ÁÇπÂ∏¶Ê†áÂè∑ÁöÑÊó†ÂêëËøûÈÄöÂõæ‰∏™Êï∞ n‚â§5000n \le 5000n‚â§5000 = = 2(n2)2^\binom n22‚Äã(‚Äã2‚Äãn‚Äã‚Äã)‚Äã‚Äã fn=2(n2)‚àí‚àëi=1nfi√ó2(n‚àí22)√ó(n‚àí1i‚àí1)f_n=2^\binom n2-\sum_{i=1}^nf_i\times2^\binom{n-2}2\times\binom{n-1}{i-1}f‚Äãn‚Äã‚Äã=2‚Äã(‚Äã2‚Äãn‚Äã‚Äã)‚Äã‚Äã‚àí‚àë‚Äãi=1‚Äãn‚Äã‚Äãf‚Äãi‚Äã‚Äã√ó2‚Äã(‚Äã2‚Äãn‚àí2‚Äã‚Äã)‚Äã‚Äã√ó(‚Äãi‚àí1‚Äãn‚àí1‚Äã‚Äã) ÈÄâÊ†áÂè∑(n‚àí1i‚àí1)\binom{n-1}{i-1}(‚Äãi‚àí1‚Äãn‚àí1‚Äã‚Äã)]]></content>
      <categories>
        <category>DP</category>
      </categories>
      <tags>
        <tag>DP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêËÜúÊ≥ï„Äë‰ª£Á†ÅÁâáÊÆµ]]></title>
    <url>%2F2018%2F02%2F06%2F%E3%80%90%E8%86%9C%E6%B3%95%E3%80%91%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5%2F</url>
    <content type="text"><![CDATA[ËØ∑‰ªéÁ∫ØÊñáÊú¨ÊÑèËØÜÊµÅ‰∏≠ÂØºÂá∫ÂØÜÁ†Å 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]]></content>
      <categories>
        <category>ËÜúÊ≥ï</category>
      </categories>
      <tags>
        <tag>ËÜúÊ≥ï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêË¥™ÂøÉ„ÄëCodeforces 886C - Petya and Catacombs]]></title>
    <url>%2F2018%2F02%2F06%2F%E3%80%90%E8%B4%AA%E5%BF%83%E3%80%91Codeforces-886C-Petya-and-Catacombs%2F</url>
    <content type="text"><![CDATA[È¢òÊÑè ‰º†ÈÄÅÈó®ÔºöCodeforces 886C PetyaÂú®Âõæ‰∏äÊé¢Èô©„ÄÇÊØè‰∏ÄÂàÜÈíüÈöèÊú∫Ëµ∞Âä®‰∏ÄÊ¨°(ÂèØ‰ª•ÂéüÂú∞)„ÄÇ Â¶ÇÊûúËµ∞Âà∞ÁöÑÊòØ‰∏Ä‰∏™Êñ∞ÁÇπÔºåÈöèÊú∫ÂÜô‰∏Ä‰∏™Êï∞Â≠ó„ÄÇ Â¶ÇÊûú‰ª•ÂâçÊù•ËøáÔºåÂÜôÊúÄËøë‰∏ÄÊ¨°Âà∞ËøôÈáåÁöÑÊó∂Èó¥„ÄÇ Á¨¨000ÂàÜÈíüPetyaÂú®ÂéüÂú∞Âπ∂‰∏îÊ≤°ÊúâÂÜôÊï∞Â≠ó„ÄÇ Áªô‰Ω†PetyaÂÜôÁöÑ‰∏Ä‰∏≤Êï∞Â≠óÔºåÈóÆ‰Ω†ÊúÄÂ∞ëÊúâÂá†‰∏™ÁÇπ„ÄÇ Ëß£Ê≥ï È¢òÁõÆÁªï‰∫ÜÂçäÂ§©&gt;_&lt;„ÄÇ TLEÂÅöÊ≥ï ËÆ∞ÂΩïÊØè‰∏™ÁÇπÊúÄÂêé‰∏ÄÊ¨°Âà∞ÁöÑÊó∂Èó¥ÔºåÊØèËæìÂÖ•‰∏Ä‰∏™Êï∞Â≠óÔºåO(n)O(n)O(n)Âú∞Êü•ËØ¢ÊúâÊ≤°ÊúâË∏©ËøáÁöÑÁÇπÔºåÂ¶ÇÊûúÊ≤°ÊúâÂ∞±ÂºÄÊñ∞ÁÇπÔºåÂê¶ÂàôÁî®‰πÖÁÇπ„ÄÇÊó∂Èó¥Â§çÊùÇÂ∫¶O(n2)O(n^2)O(n‚Äã2‚Äã‚Äã)ÔºåÂÆåÁæéTLE„ÄÇ ACÂÅöÊ≥ï1 ËÄÉËôëÊØè‰∏Ä‰∏™Êï∞Â≠ó„ÄÇÊØèÂá∫Áé∞‰∏Ä‰∏™Êï∞Â≠óÔºåÂèØËÉΩÊòØ‰ª•ÂâçË∏©ËøáÁöÑÁÇπÔºå‰πüÂèØËÉΩÊòØÈöèÊú∫Êï∞(Êñ∞ÁÇπ)„ÄÇ Âπ∂‰∏î‰∏çÂèØËÉΩÂêåÊó∂Ë∏©Âà∞‰∏§‰∏™‰∏çÂêåÁöÑÁÇπÔºåÈÇ£‰πàÂêå‰∏Ä‰∏™Êï∞Â≠óÂá∫Áé∞nnnÊ¨°ÔºåËá≥Â∞ën‚àí1n-1n‚àí1Ê¨°ÊòØÈöèÊú∫Êï∞„ÄÇ Êó∂Èó¥Â§çÊùÇÂ∫¶O(n)O(n)O(n)„ÄÇ ACÂÅöÊ≥ï2 ËÄÉËôë‰ºòÂåñTLEÂÅöÊ≥ï„ÄÇÊ†πÊçÆACÂÅöÊ≥ï1‰∏≠ÂæóÂá∫ÁöÑÁªìËÆ∫ÔºåÊØè‰∏Ä‰∏™ÁÇπÊúÄÂêé‰∏ÄÊ¨°Âà∞ËææÁöÑÊó∂Èó¥ÊòØ‰∏çÂêåÁöÑ„ÄÇ ÂºÄ‰∏Ä‰∏™ÈïøÂ∫¶‰∏∫nnnÁöÑÊï∞ÁªÑËÆ∞ÂΩïÊØè‰∏Ä‰∏™Êó∂Èó¥ÊòØÂê¶ÊòØÊüê‰∏™ÁÇπÁöÑÊúÄÂêé‰∏ÄÊ¨°Âà∞ËææÁöÑÊó∂Èó¥„ÄÇ ÁÑ∂Âêéfor i=1...n scanf(&quot;%d&quot;, &amp;x)„ÄÇ Â¶ÇÊûúxxxÊòØÊüê‰∏™ÁÇπÊúÄÂêé‰∏ÄÊ¨°Âà∞ËææÁöÑÊó∂Èó¥ÔºåÈÇ£‰πàÂ∞±ËÆ©ÂÆÉ‰∏çÊòØ(Âõ†‰∏∫ÈÇ£‰∏™ÁÇπÂ∑≤ÁªèË¢´Êõ¥Êñ∞‰∫Ü)„ÄÇ Âê¶Âàô(ËøôÊòØ‰∏™ÈöèÊú∫Êï∞)Â∞±ans++„ÄÇ Âπ∂‰∏îÊó†ËÆ∫ÊòØ‰ª•‰∏äÂì™ÁßçÊÉÖÂÜµÔºåÊüê‰∏™ÁÇπÊúÄÂêé‰∏ÄÊ¨°Âà∞ËææÁöÑÊó∂Èó¥ÈÉΩ‰∏ÄÂÆö‰ºöË¢´ÁΩÆ‰∏∫iiiÔºåÊâÄ‰ª•vis[i]=1„ÄÇ ‰ª£Á†Å ÊÄùË∑Ø1 1234567891011121314#include &lt;bits/stdc++.h&gt;using namespace std;int n, x, ans = 1;int vis[200005];int main() &#123; for(scanf("%d", &amp;n); n--; ) &#123; scanf("%d", &amp;x); if (!vis[x]) vis[x] = 1; else ans++; &#125; printf("%d", ans);&#125; ÊÄùË∑Ø2 1234567891011121314151617#include &lt;bits/stdc++.h&gt;using namespace std;int n, x, ans = 1;int vis[200005];int main() &#123; scanf("%d", &amp;n); vis[0] = 1; for(int i = 1; i &lt;= n; i++) &#123; scanf("%d", &amp;x); if (vis[x]) vis[x] = 0; else ans++; vis[i] = 1; &#125; printf("%d", ans);&#125; ÊãìÂ±ï ËØùËØ¥‰∏§ÊÆµ‰ª£Á†ÅÈïøÂæóÂ•ΩÂÉèÂïä~]]></content>
      <categories>
        <category>Ë¥™ÂøÉ</category>
      </categories>
      <tags>
        <tag>Ë¥™ÂøÉ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÊï∞Â≠¶„ÄëCodeforces 872C - Maximum splitting]]></title>
    <url>%2F2018%2F02%2F06%2F%E3%80%90%E6%95%B0%E5%AD%A6%E3%80%91Codeforces-872C-Maximumsplitting%2F</url>
    <content type="text"><![CDATA[È¢òÊÑè ‰º†ÈÄÅÈó®ÔºöCodeforces 872C Áªô‰Ω†nnn‰∏™Êï∞ÔºåÈóÆ‰Ω†Ëøô‰∫õÊï∞ÊúÄÂ§öÂèØ‰ª•ÂÜôÊàêÂ§öÂ∞ë‰∏™ÂêàÊï∞ÁöÑÂíå„ÄÇn‚â§105,1‚â§x‚â§109n \le 10^5, 1 \le x \le 10^9n‚â§10‚Äã5‚Äã‚Äã,1‚â§x‚â§10‚Äã9‚Äã‚Äã Ëß£Ê≥ï ËÄÉËôëÂàÜËß£ÁöÑÁ≠ñÁï•„ÄÇ È¶ñÂÖàÔºåÊúÄÂ∞èÁöÑ444‰∏™ÂêàÊï∞ÂàÜÂà´ÊòØ4,6,8,94, 6, 8, 94,6,8,9„ÄÇ ÂæàÊòéÊòæÔºåÂàÜËß£ÂæóÂà∞ÁöÑÂêàÊï∞Ë∂äÂ∞èË∂äÂ•Ω„ÄÇÂàÜÁ±ªËÆ®ËÆ∫Ôºö ÂΩìxxxÊòØ1,2,3,5,7,111, 2, 3, 5, 7, 111,2,3,5,7,11Êó∂Êó†Ëß£ÔºåËæìÂá∫‚àí1-1‚àí1„ÄÇ ÂΩìxxxÊòØÂÅ∂Êï∞Êó∂ÔºåÂõ†‰∏∫x&gt;2x&gt;2x&gt;2ÔºåËÄå‰∏î444Âíå666ÂèØ‰ª•ÁªÑÊàêÊâÄÊúâÂ§ß‰∫é222ÁöÑÂÅ∂Êï∞„ÄÇÊâÄ‰ª•Âè™ÈúÄË¶ÅÁî®444Âíå666Âç≥ÂèØ„ÄÇ ÂΩìxxxÊòØÂ•áÊï∞Êó∂ÔºåÂõ†‰∏∫Â§ß‰∫é111111ÁöÑÂ•áÊï∞Âíå999Ëá™Ë∫´ÈÉΩÊúâËß£ÔºåÂπ∂‰∏îÂ§ß‰∫é111111ÁöÑÂ•áÊï∞ÈÉΩÂèØ‰ª•ÂÜôÊàê999ÂíåÂ§ß‰∫é444ÁöÑÂÅ∂Êï∞ÁöÑÂíå„ÄÇÊâÄ‰ª•Âè™ÈúÄË¶ÅÁî®x‚àí9x-9x‚àí9ÂÜçÊåâÊÉÖÂÜµ2ËÆ°ÁÆóÂç≥ÂèØ„ÄÇ Áªº‰∏äÊâÄËø∞ÔºåÈúÄË¶ÅÁî®Âà∞ÁöÑÊï∞Â≠óÂè™Êúâ4,6,94, 6, 94,6,9„ÄÇ Áé∞Âú®ËÄÉËôëÂàÜËß£Âá∫ÁöÑÊï∞ÁöÑ‰∏™Êï∞„ÄÇ ÂΩìxxxÊòØ1,2,3,5,7,111, 2, 3, 5, 7, 111,2,3,5,7,11Êó∂ÔºåËæìÂá∫‚àí1-1‚àí1„ÄÇ ÂΩìxxxËÉΩË¢´444Êï¥Èô§Êó∂ÔºåËæìÂá∫x4\frac x4‚Äã4‚Äã‚Äãx‚Äã‚Äã„ÄÇ ÂΩìxxxÊòØÂÅ∂Êï∞‰∏î‰∏çËÉΩË¢´444Êï¥Èô§Êó∂ÔºåËæìÂá∫x‚àí64+1\frac{x-6}4+1‚Äã4‚Äã‚Äãx‚àí6‚Äã‚Äã+1„ÄÇ ÂΩìxxxÊòØÂ•áÊï∞Êó∂ÔºåËæìÂá∫x‚àí94+1\frac{x-9}4+1‚Äã4‚Äã‚Äãx‚àí9‚Äã‚Äã+1„ÄÇ ‰ª£Á†Å 12345678910111213141516171819#include &lt;bits/stdc++.h&gt;using namespace std;int n, x;int f(int x) &#123; if (!x) return 0; if (x &lt; 4 || x == 5 || x == 7 || x == 11) return -1; if (x &amp; 1) return f(x-9) + 1; if (x &amp; 2) return f(x-6) + 1; return x&gt;&gt;2;&#125;int main() &#123; for (scanf("%d", &amp;n); n--; ) &#123; scanf("%d", &amp;x); printf("%d\n", f(x)); &#125;&#125; ÊãìÂ±ï ÂØπ‰∫éÂàÜËß£ÊÄßÁöÑÈóÆÈ¢òÔºåÂ¶ÇÊûúÈúÄË¶ÅÊúÄÂ§ßÂåñÊüê‰∏™ÈáèÔºåÂàôÊûÅÁ´ØÂú∞ËÄÉËôëÂèØËÉΩÁöÑÂèñÂÄº„ÄÇ Â¶ÇÊúÄÂ§ßÂåñÊï∞ÈáèÔºåÂèØ‰ª•ËÄÉËôëËÆ©Êï∞Â≠óÂ∞ΩÂèØËÉΩÂ∞è„ÄÇ Â¶ÇÊúÄÂ§ßÂåñ‰πòÁßØÔºåÂèØ‰ª•ËÄÉËôëËÆ©2,32, 32,3Â∞ΩÂèØËÉΩÂ§ö„ÄÇ ÁÑ∂ÂêéÂÜçËØÅÊòéËá™Â∑±ÁöÑÁåúÊÉ≥ÔºåÂ¶ÇÊú¨È¢òÁöÑ&quot;4,6,94, 6, 94,6,9&quot;„ÄÇ]]></content>
      <categories>
        <category>Êï∞Â≠¶</category>
      </categories>
      <tags>
        <tag>Êï∞Â≠¶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêDFS„Äë‰º™ËÉåÂåÖ1007-C]]></title>
    <url>%2F2018%2F01%2F08%2F%E3%80%90DFS%E3%80%91%E4%BC%AA%E8%83%8C%E5%8C%851007-C%2F</url>
    <content type="text"><![CDATA[È¢òÊÑè ‰º†ÈÄÅÈó®Ôºö1007-C ÁªôÂÆö‰∏Ä‰∏™ÂÆπÈáè‰∏∫TTTÁöÑËÉåÂåÖÔºånnn‰∏™Áâ©ÂìÅÔºåÁ¨¨iii‰∏™Áâ©ÂìÅÈáçÈáèc[i]c[i]c[i]‰ª∑ÂÄºv[i]v[i]v[i]ÔºåÊúÄÂ∞ëË¶ÅË£Ömmm‰∏™Áâ©ÂìÅÔºåÊúÄÂ∞ëË¶ÅÁïôtttÁöÑÂâ©‰ΩôÁ©∫Èó¥ÔºåÊúÄÂ§ßÂåñ‰ª∑ÂÄº‰∏éÂâ©‰ΩôÁ©∫Èó¥√óg\times g√ógÁöÑÂÄº„ÄÇn‚â§10n \le 10n‚â§10„ÄÇ Ëß£Ê≥ï ËøôÊòØ‰∏ÄÈÅìÊä´ÁùÄËÉåÂåÖÂ§ñË°£ÁöÑÂÖ•Èó®ÈöæÂ∫¶DFS„ÄÇ Áõ¥Êé•dfsÂ∏¶444‰∏™ÂèÇÊï∞dep,cnt,val,remdep, cnt, val, remdep,cnt,val,remÂàÜÂà´‰ª£Ë°®Ê∑±Â∫¶(1~n) Â∑≤ÈÄâÁâ©ÂìÅÊï∞ Â∑≤ÈÄâÁâ©ÂìÅ‰ª∑ÂÄº Ââ©‰ΩôÂÆπÈáèÔºåÊêúÂà∞dep&gt;ndep&gt;ndep&gt;nÂà§Êñ≠rem&lt;t‚à£‚à£cnt&lt;mrem&lt;t||cnt&lt;mrem&lt;t‚à£‚à£cnt&lt;mÊòØÂê¶Êª°Ë∂≥Âç≥ÂèØÊõ¥Êñ∞Á≠îÊ°à„ÄÇ Âê¶ÂàôÊêúÁ¥¢‰∏ãÈù¢‰∏§‰∏™Âç≥ÂèØÔºå‰∏çÁî®Ââ™Êûù„ÄÇ dfs(dep+1,cnt+1,val+v[dep],rem-c[dep]); dfs(dep+1,cnt,val,rem); Êó∂Èó¥Â§çÊùÇÂ∫¶O(2n)O(2^n)O(2‚Äãn‚Äã‚Äã)„ÄÇ ‰ª£Á†Å ‰∏çË¶ÅÂú®ÊÑèËøô‰∫õÁªÜËäÇÔºåÊú¨‰∫∫Âç°Â∏∏ÁôåÊôöÊúüËØ∑Ë∞ÖËß£ 123456789101112131415161718192021222324252627282930313233343536373839#include &lt;bits/stdc++.h&gt;#define spc putchar(' ')#define nln putchar('\n')using namespace std;template &lt;typename T&gt;inline void get(register T&amp; val) &#123; /* ‰∏ÄÂçÉ‰∏á‰∏™Êï∞400msË∂ÖÈ´òÈÄüËØªÂÖ•ÈªëÁßëÊäÄÁï• */&#125;template &lt;typename T&gt;inline bool put(register const T&amp; val) &#123; /* ÊôÆÈÄöÈ´òÈÄüËæìÂá∫ÈªëÁßëÊäÄÁï• */&#125;// Solution Begins Hereint n, m, d, t, g, c[32], v[32], ans;// ‰∏çË¶ÅÂú®ÊÑèËøô‰∫õÁªÜËäÇinline void dfs(register int dep, register int cnt, register int val, register int rem) &#123; if (dep &gt; n) &#123; if (rem &lt; t || cnt &lt; m) return; ans = max(ans, val + rem * g); &#125; else &#123; dfs(dep + 1, cnt + 1, val + v[dep], rem - c[dep]); dfs(dep + 1, cnt, val, rem); &#125;&#125;int main() &#123; get(n); get(m); for (register int i = 1; i &lt;= n; i++) &#123; get(c[i]); get(v[i]); &#125; get(d); get(t); get(g); dfs(1, 0, 0, d); put(ans);&#125; ÊãìÂ±ï ÂØπ‰∫éÊï∞ÊçÆËæÉÂ∞èÁöÑÈ¢òÁõÆÔºåÊúâÊó∂DPÈöæÂÜôÔºåÂèØ‰ª•ËÄÉËôë‰ΩøÁî®Êö¥ÊêúÔºåÊúâÊó∂ÁîöËá≥‰∏çÈúÄË¶ÅÂâ™Êûù„ÄÇ]]></content>
      <categories>
        <category>DFS</category>
      </categories>
      <tags>
        <tag>DFS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„Äê‰ΩçËøêÁÆó„ÄëCodeforces 897C - Short Program]]></title>
    <url>%2F2018%2F01%2F01%2F%E3%80%90%E4%BD%8D%E8%BF%90%E7%AE%97%E3%80%91Codeforces-897C-Short-Program%2F</url>
    <content type="text"><![CDATA[È¢òÊÑè ‰º†ÈÄÅÈó®ÔºöCodeforces 897C Áªô‰∏Ä‰∏≤‰ΩçËøêÁÆóÊìç‰Ωú(ÂåÖÂê´| &amp; ^ÔºåÊØè‰∏™Êìç‰ΩúÊï∞ÂùáËêΩÂú®„ÄÇ‰∏≠)ÔºåÂ∞ÜÂÖ∂ÁÆÄÂåñÂà∞5Ê¨°ËøêÁÆó‰ª•ÂÜÖÂπ∂ËæìÂá∫„ÄÇ Ëß£Ê≥ï ËøáÁ®ã ËÄÉËôë‰∫§Êç¢ÂæãÂíåÁªìÂêàÂæã„ÄÇÊòæÁÑ∂1|11$\ne$11|1„ÄÇÊâÄ‰ª•Ë¶ÅÊç¢‰∏ÄÁßçÊÄùË∑Ø„ÄÇ Êàë‰ª¨ÂèØ‰ª•Â∞Ü102310231023Âíå000ÂêåÊó∂ËøõË°åËøêÁÆó„ÄÇ ÂÜçËÄÉËôëÂ∞Ü&amp; | ^‰∏âÁßçËøêÁÆóËΩ¨Âåñ‰∏∫| ^‰∏§Áßç„ÄÇ Â¶ÇÂ∞Ü102310231023Âíå000Â∏¶ÂÖ•‰ª•‰∏ãËøêÁÆóÔºö 123456789101110 1111111111 0000000000^ 218 0011011010 1100100101&amp; 150 0010010010 0000000100| 935 1110110111 1110100111&amp; 61 0000110101 0000100101| 588 1001111101 1001101101&amp; 897 1000000001 1000000001| 411 1110011011 1110011011| 584 1111011011 1111011011^ 800 0011111011 0011111011| 704 1011111011 1011111011 ‰ΩøÁî®| ^‰ª£Êõø&amp; | ^ÁöÑÊñπÊ≥ïÔºö ÁΩÆÈõ∂Ôºå‰ΩøÁî®|1^1 ÁΩÆ‰∏ÄÔºå‰ΩøÁî®|1^0 ‰∏çÂèòÔºå‰ΩøÁî®|0^0 ÂèçËΩ¨Ôºå‰ΩøÁî®|0^1 ‰ª§1023 or x xor y=a=7631023\ or\ x\ xor\ y=a=7631023 or x xor y=a=763Ôºå0 or x xor y=b=7630\ or\ x\ xor\ y=b=7630 or x xor y=b=763 Âç≥Â¶ÇÊûúaaaÂíåbbbÊüê‰∏Ä‰Ωç‰∏ÄÊ†∑ÔºåxxxÁöÑÈÇ£‰∏Ä‰ΩçÂ∞±ÊòØ1ÔºåyyyÁöÑÈÇ£‰∏Ä‰ΩçÂ∞±ÊòØbbbÈÇ£‰∏Ä‰ΩçÁöÑÂèçÁ†Å„ÄÇ Â¶ÇÊûú‰∏ç‰∏ÄÊ†∑ÔºåxxxÁöÑÈÇ£‰∏Ä‰ΩçÂ∞±ÊòØ000ÔºåyyyÁöÑÈÇ£‰∏Ä‰Ωç‰πüÊòØbbbÈÇ£‰∏Ä‰ΩçÁöÑÂèçÁ†Å„ÄÇ ‰∏§Êï∞ÊØè‰∏Ä‰ΩçÁõ∏ÂêåÂæó111Ôºå‰∏çÂêåÂæó000ÔºåÂ∞±ÊòØa xor b xor 1023a\ xor\ b\ xor\ 1023a xor b xor 1023ÁöÑÂÄº„ÄÇ bbbÁöÑÂèçÁ†ÅÂç≥b xor 1023b\ xor\ 1023b xor 1023„ÄÇ ÁªìËÆ∫ x=a xor b xor 1023x = a\ xor\ b\ xor\ 1023x=a xor b xor 1023 y=b xor 1023y = b\ xor\ 1023y=b xor 1023 O(n)O(n)O(n)ËæπËØªËæπÁÆóaaaÂíåbbbÔºåÊúÄÂêéO(1)O(1)O(1)ÁÆóxxxÂíåyyyÂç≥ÂèØ„ÄÇ ‰ª£Á†Å 123456789101112131415161718192021222324252627282930#include &lt;bits/stdc++.h&gt;#define p(q) ((q) &amp;&amp; (q) != X)#define X 0x3f3f3f3fusing namespace std;int a = 0, b = 1023;char op[1];int n, t;int main() &#123; scanf("%d", &amp;n); for (int i = 1; i &lt;= n; i++) &#123; scanf("%s%d", op, &amp;t); switch (*op) &#123; case '&amp;': a &amp;= t; b &amp;= t; break; case '|': a |= t; b |= t; break; case '^': a ^= t; b ^= t; break; &#125; &#125; printf("2\n| %d\n^ %d", a ^ b ^ 1023, b ^ 1023);&#125; ÊãìÂ±ï ‰ΩçËøêÁÆó+ÊûÑÈÄ†ÁÆóÊ≥ï(bitmasks+constructive algorithms)ÁöÑÈ¢òÁõÆÁöÑÂá†ÁßçÊÄùËÄÉÊñπÂºèÔºö ÂØπÊØè‰∏Ä‰ΩçËÄÉËôë(‰ΩçËøêÁÆóÈÉΩÊòØÈöîÁ¶ªÊØè‰ΩçÁöÑÔºå‰∏çÂ≠òÂú®ÂÄü‰ΩçËøõ‰ΩçËøôÁßçÂΩ±ÂìçÂÖ∂ÂÆÉ‰ΩçÁöÑËøêÁÆó) ÂØπÈÄÜËøêÁÆóËÄÉËôë(Â¶Ç1216-DÔºåÂâçÁºÄÂíåËΩ¨‰∏∫Â∑ÆÂàÜ) ÂØπÁªìÊûúËÄÉËôë(ÁªìÊûúÂèçÂêëÊûÑÈÄ†ËøáÁ®ã)]]></content>
      <categories>
        <category>‰ΩçËøêÁÆó</category>
      </categories>
      <tags>
        <tag>‰ΩçËøêÁÆó</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÂ∑ÆÂàÜ„Äë1216-D]]></title>
    <url>%2F2017%2F12%2F20%2F%E3%80%90%E5%B7%AE%E5%88%86%E3%80%911216-D%2F</url>
    <content type="text"><![CDATA[È¢òÊÑè ‰º†ÈÄÅÈó®Ôºö1216-D Êúâ‰∏Ä‰∏™nnn‰∏™Êï∞ÁöÑÂ∫èÂàóÔºå‰∏ÄÂºÄÂßãÊâÄÊúâÁöÑÊï∞ÈÉΩÊòØ000ÔºåÊØèÊ¨°ÂèØ‰ª•Â∞Ü‰∏Ä‰∏™Âå∫Èó¥[l,r][l,r][l,r] (l‚â§r)ÂÜÖÁöÑÊï∞+1+1+1ÔºåÊ±ÇÂà∞ËææÊúÄÁªàÁä∂ÊÄÅÁöÑÊúÄÂ∞ëÊìç‰ΩúÊ¨°Êï∞„ÄÇ n \le 10^5Ôºåm \le 10^5‚ÄãÔºåm‚Äã‰∏∫Êìç‰ΩúÊ¨°Êï∞„ÄÇ Ëß£Ê≥ï Ê≠£ÈöæÂàôÂèçÔºöËÄÉËôëÂ∑≤Áü•ÊØèÊ¨°Êìç‰ΩúÔºåÊ±ÇÂ∫èÂàó„ÄÇÂèØ‰ΩøÁî®ÂâçÁºÄÂíå„ÄÇ Â¶ÇÊ†∑‰æãËæìÂá∫Ôºö 123431 61 62 6 Â∞ÜÈó≠Âå∫Èó¥ËΩ¨‰∏∫Â∑¶Èó≠Âè≥ÂºÄÔºåÂç≥[1,7),[1,7),[2,7)[1, 7), [1, 7), [2, 7)[1,7),[1,7),[2,7)ÔºåÂàôÂèØÂæóÂà∞Ôºö 1234‰∏ãÊ†á: 1 2 3 4 5 6 7Êï∞ÁªÑ: 2 1 0 0 0 0 -3ÂâçÁºÄÂíåÂêéÂæóÂà∞ÂéüÂ∫èÂàó:ÂéüÂ∫èÂàó: 2 3 3 3 3 3 0 Ê†πÊçÆÂâçÁºÄÂíåÁöÑÈÄÜËøêÁÆóÊòØÂ∑ÆÂàÜÔºåÂæóÂà∞O(n+m)O(n+m)O(n+m)Ëß£Ê≥ï„ÄÇ ‰ºòÂåñ Êó¢ÁÑ∂Â∑ÆÂàÜ‰πãÂêéÂ∞±ÂèØ‰ª•Ê±ÇÂá∫ÊâÄÊúâÂå∫Èó¥Ôºå‰∏∫‰ªÄ‰πà‰∏çÁõ¥Êé•ÂæÄÈòüÂàóÈáåÈù¢‰∏¢Âë¢Ôºü Â¶ÇÂ∑ÆÂàÜÂ∫èÂàó2 1 0 0 0 0 -3ÔºåËøõË°å‰ª•‰∏ãÂ§ÑÁêÜÔºö ÈÅáÂà∞Ê≠£Êï∞222ÔºåÁõ¥Êé•‰∏¢222‰∏™‰∏ãÊ†á111Âú®Â≠òlllÁöÑÈòüÂàó‰∏≠„ÄÇ 123lÈòüÂàó rÈòüÂàó11 ÈÅáÂà∞Ê≠£Êï∞111ÔºåÁõ¥Êé•‰∏¢111‰∏™‰∏ãÊ†á222Âú®Â≠òlllÁöÑÈòüÂàó‰∏≠„ÄÇ 1234lÈòüÂàó rÈòüÂàó112 ÈÅáÂà∞Ë¥üÊï∞-3ÔºåÁõ¥Êé•‰∏¢‚à£‚àí3‚à£=3|-3|=3‚à£‚àí3‚à£=3‰∏™‰∏ãÊ†á7‚àí1=67-1=67‚àí1=6Âú®Â≠òrrrÁöÑÈòüÂàó‰∏≠„ÄÇ 1234lÈòüÂàó rÈòüÂàó1 61 62 6 ËæìÂá∫Âç≥ÂèØ„ÄÇ 123431 61 62 6 Êó∂Èó¥Â§çÊùÇÂ∫¶O(n+m)O(n+m)O(n+m)„ÄÇ ‰ª£Á†Å 1234567891011121314151617181920#include &lt;bits/stdc++.h&gt;using namespace std;int out[100005][2]; //Ê®°ÊãüÈòüÂàóint n, x, m1, m2, r;int main() &#123; scanf("%d", &amp;n); for (int i = 1; i &lt;= n; i++) &#123; scanf("%d", &amp;x); if (r &lt; x) for (int j = x-r; j--;) out[m1++][0] = i; if (r &gt; x) for (int j = r-x ; j--;) out[m2++][1] = i-1; r = x; &#125; for (int j = r ; j--;) out[m2++][1] = n; printf("%d\n", m1); for (int i = 0; i &lt; m1; i++) &#123; printf("%d %d\n", out[i][0], out[i][1]); &#125;&#125; ÊãìÂ±ï Ê≠£ÈöæÂàôÂèçÔºöÂæàÂ§öÈ¢òÁõÆÈúÄË¶ÅÈÄÜÂêëÊÄùËÄÉ„ÄÇÂ¶ÇÂ∞ÜÂ∑ÆÂàÜÈ¢òÈÄÜÂêëÊÄùËÄÉÂæóÂà∞ÂâçÁºÄÂíå„ÄÇÂ§öËÄÉËôë‰∫íÈÄÜËøêÁÆó‰πãÈó¥ÁöÑËΩ¨ÂåñÂÖ≥Á≥ª„ÄÇ]]></content>
      <categories>
        <category>Â∑ÆÂàÜ</category>
      </categories>
      <tags>
        <tag>Â∑ÆÂàÜ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÂ∑ÆÂàÜ„ÄëÂ∑ÆÂàÜ]]></title>
    <url>%2F2017%2F12%2F20%2F%E3%80%90%E5%B7%AE%E5%88%86%E3%80%91%E5%B7%AE%E5%88%86%2F</url>
    <content type="text"><![CDATA[Â§ßÂÆ∂ÈÉΩÁü•ÈÅìÂ§ßÂêçÈºéÈºéÁöÑÂâçÁºÄÂíåÔºåÂ∑ÆÂàÜÂ∞±ÊòØÂâçÁºÄÂíåÁöÑÈÄÜËøêÁÆó„ÄÇ ÂâçÁºÄÂíå ÈóÆÈ¢òÔºöÁªôÂÆö‰∏Ä‰∏≤Êï∞ÔºåÊü•ËØ¢Âå∫Èó¥Âíå„ÄÇ ÁÆóÊ≥ï È¢ÑÂ§ÑÁêÜ Êü•ËØ¢ Êú¥Á¥†ÁÆóÊ≥ï O(1)O(1)O(1) O(n)O(n)O(n) ÂâçÁºÄÂíå O(n)O(n)O(n) O(1)O(1)O(1) Á∫øÊÆµÊ†ë(Ê†ëÁä∂Êï∞ÁªÑ) O(n)O(n)O(n) O(logn)O(\log n)O(logn) ÊòæÁÑ∂ÔºåÂ§öÊ¨°Êü•ËØ¢Êó∂ÔºåÂâçÁºÄÂíåÊïàÁéáÊúÄÈ´ò„ÄÇ Â∑ÆÂàÜÔºü Ê†áÂ•ΩÈáçÁÇπÔºöÂ∑ÆÂàÜÊòØÂâçÁºÄÂíåÁöÑÈÄÜËøêÁÆó„ÄÇ Â¶ÇÊûúÁªô‰∏Ä‰∏™ÂâçÁºÄÂíåÊï∞ÁªÑÔºåÂ¶Ç‰ΩïÂ∞ÜÂÆÉÂ§ÑÁêÜÊàêÂéüÊï∞ÁªÑÔºü 123456789ÂâçÁºÄÂíå:1 2 3 4 5 61 2 3 4 5 1(6-5)1 2 3 4 1(5-4) 11 2 3 1(4-3) 1 11 2 1(3-2) 1 1 11 1(2-1) 1 1 1 1ÂæóÂà∞ÂéüÊï∞ÁªÑ:1 1 1 1 1 1 Âú®Êüê‰∫õÊ≠£Èù¢Ëß£ÁúãËµ∑Êù•ÂæàÂ§çÊùÇÁöÑÈ¢òÊó∂ÔºåÂèØ‰ª•ËÄÉËôëÈÄÜÊé®Âá∫ÂâçÁºÄÂíåÔºåÁÑ∂ÂêéÂà©Áî®Â∑ÆÂàÜËß£È¢ò„ÄÇ Áõ∏ÂÖ≥ È´òÁª¥ÂâçÁºÄÂíå(Â∑ÆÂàÜ) „ÄêÂ∑ÆÂàÜ„Äë1216-D]]></content>
      <categories>
        <category>Â∑ÆÂàÜ</category>
      </categories>
      <tags>
        <tag>Â∑ÆÂàÜ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÊùÇÈ¢ò„Äë1210-B]]></title>
    <url>%2F2017%2F12%2F14%2F%E3%80%90%E6%9D%82%E9%A2%98%E3%80%911210-B%2F</url>
    <content type="text"><![CDATA[È¢òÊÑè ‰º†ÈÄÅÈó®ÔºöBÈ¢ò Áªô‰∏Ä‰∏™01Áü©ÈòµÔºåÂÖÅËÆ∏Ëã•Âπ≤Ê¨°Êìç‰ΩúÔºåÊØèÊ¨°‰∏ÄÊ¨°ÁøªËΩ¨‰∏ÄË°åÊàñ‰∏ÄÂàóÔºåÈóÆÊúÄÂ§öÂèØ‰ª•ÁøªÂá∫Â§öÂ∞ë‰∏™0Ôºü Êï∞ÊçÆËåÉÂõ¥Ôºör‚â§10,c‚â§10000r \le 10, c \le 10000r‚â§10,c‚â§10000„ÄÇ Ëß£Ê≥ï ËÄÉËôëË°åÂõ∫ÂÆöÔºåÂè™ÁøªÂàóÁöÑÊÉÖÂÜµ„ÄÇ Âõ†‰∏∫rrrÂè™Êúâ10ÔºåÊâÄ‰ª•ÂèØ‰ª•Áõ¥Êé•‰∫åËøõÂà∂Êûö‰∏æÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶O(2r)O(2^r)O(2‚Äãr‚Äã‚Äã)„ÄÇ ÂÜçËÄÉËôëÂàó„ÄÇÂ¶ÇÊûú‰∏ÄË°å‰∏≠0Â§ö‰∫é1ÂàôÂèçËΩ¨ÔºåÂê¶Âàô‰∏çÁøªËΩ¨„ÄÇÂèØ‰ª•Áî®‰∏§‰∏™ÂèòÈáèc1c1c1Âíåc2c2c2ÂàÜÂà´ÂØπÁøªËΩ¨Âíå‰∏çÁøªËΩ¨ËÆ°Êï∞(ÊàñËÄÖc2=r‚àíc1c2=r-c1c2=r‚àíc1)ÔºåÁÑ∂Âêéret += max(c1, c2);Êàñret += max(c1, r-c1);„ÄÇÊó∂Èó¥Â§çÊùÇÂ∫¶O(rc)O(rc)O(rc)„ÄÇ ‰ΩøÁî®bitset‰ºòÂåñÁºñÁ®ãÂ§çÊùÇÂ∫¶ÂíåÂ∏∏Êï∞Èô§‰ª•32„ÄÇ Êó∂Èó¥Â§çÊùÇÂ∫¶ÔºöO(rc2r32)O(\frac{rc2^r}{32})O(‚Äã32‚Äã‚Äãrc2‚Äãr‚Äã‚Äã‚Äã‚Äã) ‰ª£Á†Å 123456789101112131415161718192021222324252627282930313233343536373839#include &lt;bits/stdc++.h&gt;using namespace std;typedef bitset&lt;10005&gt; record_type[15];record_type rec;int r, c, a, x;int proc(int mask) &#123; record_type rt; // recÁöÑÊã∑Ë¥ù int ret = 0; // ËøîÂõûÂÄº copy(rec, rec+r, rt); // ÈùûPODÁ±ªÂûã(bitset&lt;10005&gt;)Áî®std::copy for (int i = 0; i &lt; r; i++) &#123; if ((mask&gt;&gt;i)&amp;1) rt[i].flip(); // ÂØπ‰∫åËøõÂà∂‰∏≠ÊØè‰∏™1ÂèçËΩ¨ÂØπÂ∫îÁöÑË°å &#125; for (int i = 0; i &lt; c; i++) &#123; int a = 0, b = 0; // int c1 = 0, c2 = 0; for (int j = 0; j &lt; r; j++) &#123; a += rt[j][i]; // c1 b += ~rt[j][i]; // c2 &#125; ret += max(a, b); &#125; return ret; &#125;int main() &#123; scanf("%d%d", &amp;r, &amp;c); for (int i = 0; i &lt; r; i++) &#123; for (int j = 0; j &lt; c; j++) &#123; scanf("%d", &amp;x); rec[i][j] = x; &#125; &#125; for (int i = 0; i &lt; (1 &lt;&lt; r); i++) &#123; // ‰∫åËøõÂà∂Êûö‰∏æ a = max(a, proc(i)); &#125; printf("%d", a);&#125;]]></content>
      <categories>
        <category>ÊùÇÈ¢ò</category>
      </categories>
      <tags>
        <tag>ÊùÇÈ¢ò</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÊú™ÂÆåÂ∑•„Äë„ÄêLIS„ÄëLIS]]></title>
    <url>%2F2017%2F12%2F14%2F%E3%80%90%E6%9C%AA%E5%AE%8C%E5%B7%A5%E3%80%91%E3%80%90LIS%E3%80%91LIS%2F</url>
    <content type="text"><![CDATA[Please enter the password to read the blog. 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]]></content>
      <categories>
        <category>Êú™ÂÆåÂ∑•</category>
      </categories>
      <tags>
        <tag>LIS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÊ®°Êãü„Äë1210-A]]></title>
    <url>%2F2017%2F12%2F14%2F%E3%80%90%E6%A8%A1%E6%8B%9F%E3%80%911210-A%2F</url>
    <content type="text"><![CDATA[È¢òÊÑè ‰º†ÈÄÅÈó®ÔºöAÈ¢ò ‰∏§‰∏™‰∫∫ÊâìË∑ëÂæóÂø´ÔºåÁé∞Âú®ËßÑÂÆöÊâëÂÖãÁâåÁÇπÊï∞‰∏∫Âå∫Èó¥[1,2n][1, 2n][1,2n]‰πãÈó¥ÁöÑÊï¥Êï∞ÔºåÊØèÁßçÁâåÂè™Êúâ‰∏ÄÂº†„ÄÇ ‰∏îÊâìÁâåË¶ÅÁ¨¶Âêà‰ª•‰∏ãÁâπÊÆäËßÑÂÆö: È¶ñÂÖà1Âá∫ÔºåÂú®Ê≤°ÊúâÁâπÊÆäÊÉÖÂÜµÊó∂Ôºå12ËΩÆÊµÅÂá∫ Â¶ÇÊûúÊ°åÈù¢‰∏äÊ≤°ÁâåÔºåÂàôÂøÖÈ°ªÂá∫Êâã‰∏äÊúÄÂ∞èÁöÑ Â¶ÇÊûúÊ°åÈù¢‰∏äÊúâÁâåÔºåÂàôÂøÖÈ°ªÂá∫Êâã‰∏äÊØîÊ°åÈù¢‰∏äÁâåÂ§ßÁöÑÊúÄÂ∞èÁöÑÁâåÔºå‰πüÂ∞±ÊòØlower_bound Â¶ÇÊûúÂú®Á¨¨‰∏âÊù°ÁöÑÊÉÖÂÜµ‰∏ã‰∏îÊ≤°ÊúâÁâåÂá∫ÔºåÂàôÂÅú‰∏ÄÊâãÔºåÊ°åÈù¢Ê∏ÖÁ©∫ ‰∏ÄÊñπÊâìÂÆåÂêéÊ∏∏ÊàèÁªìÊùü ËßÑÂÆöÊØè‰∏™‰∫∫ÁöÑÂàÜÊï∞ÊòØÂØπÊñπÂâ©‰ΩôÁâåÁöÑÊï∞ÈáèÔºåÊ±ÇÊúÄÂêéÁöÑÂæóÂàÜ„ÄÇ ‰ª£Á†Å 12]]></content>
      <categories>
        <category>Ê®°Êãü</category>
      </categories>
      <tags>
        <tag>Ê®°Êãü</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêDP-LIS„ÄëÊ¥õË∞∑ P1704 - ÂØªÊâæÊúÄ‰ºòÁæéÂÅöÈ¢òÊõ≤Á∫ø]]></title>
    <url>%2F2017%2F12%2F09%2F%E3%80%90DP-LIS%E3%80%91%E6%B4%9B%E8%B0%B7P1704-%E5%AF%BB%E6%89%BE%E6%9C%80%E4%BC%98%E7%BE%8E%E5%81%9A%E9%A2%98%E6%9B%B2%E7%BA%BF%2F</url>
    <content type="text"><![CDATA[È¢òÊÑè ‰º†ÈÄÅÈó®ÔºöÊ¥õË∞∑ P1704 - ÂØªÊâæÊúÄ‰ºòÁæéÂÅöÈ¢òÊõ≤Á∫ø Áé∞Âú®ÁªôÂá∫ÊØè‰∏ÄÂ§©Âà∑È¢òÁöÑÈ¢òÊï∞ÔºåÂπ∂‰∏îÊúâÂá†Â§©ÂøÖÈ°ªÂà∑È¢òÔºåÈóÆÊúÄÂ§öÂèØ‰ª•Âà∑Â§öÂ∞ëÂ§©ÁöÑÈ¢òÂπ∂‰∏îÊª°Ë∂≥‰∏•Ê†ºÈÄíÂ¢û„ÄÇ ËØ¥ÁôΩ‰∫ÜÂ∞±ÊòØÔºåÁªô‰∏Ä‰∏™Â∫èÂàóÔºåÂëäËØâ‰Ω†Êúâ‰∏Ä‰∫õ‰∏ãÊ†á‰∏äÁöÑÊï∞ÂøÖÈ°ªÂåÖÂê´Âú®LIS‰∏≠ÔºåÊ±ÇÊª°Ë∂≥Êù°‰ª∂ÁöÑLISÔºåÂ∞±ÊòØË¢´Á¶ÅÈî¢ÁöÑLIS„ÄÇ Ëß£Ê≥ï ÂèòÈáèÂÆö‰πâ 12345int p[500005], t[500005]; // p‰ª£Ë°®ÂøÖÈ°ªÂà∑È¢òÁöÑÊó∂Èó¥, t‰ª£Ë°®ÊØèÂ§©Âà∑È¢òÁöÑÈ¢òÊï∞int lis[500005]; // LISÊï∞ÁªÑint c[500005]; //Â§ÑÁêÜËøáÁöÑÂà∑È¢òÈ¢òÊï∞int n, m, x; // nÂ§©, mÂ§©ÂøÖÈ°ªÂà∑È¢òint ans; // Á≠îÊ°à ËØªÂÖ• Ë¥¥‰ª£Á†Å‰∏çËß£ÈáäÔºö 12345678scanf("%d%d", &amp;n, &amp;m);for (int i = 1; i &lt;= m; i++) &#123; scanf("%d", p+i);&#125;sort(p+1, p+m+1);for (int i = 1; i &lt;= n; i++) &#123; scanf("%d", t+i);&#125; Â§ÑÁêÜ È¶ñÂÖàÔºåÂ¶ÇÊûúÂøÖÈ°ªÂà∑È¢òÁöÑÈÇ£Âá†Â§©‰∏ç‰∏•Ê†ºÈÄíÂ¢ûÔºåÂí≥Âí≥„ÄÇ 1234567for (int i = 2; i &lt;= m; i++) &#123; if (t[p[i]] &lt;= t[p[i-1]]) &#123; puts("impossible"); return 0; &#125;&#125;proc(); Êé•‰∏ãÊù•ÊòØÂØπLISÂÅö‰∏Ä‰∫õÂ§ÑÁêÜ„ÄÇ È¶ñÂÖàÔºåÂ¶ÇÊûú‰∏Ä‰∏™Â∫èÂàó‰∏≠ÁöÑÊï∞ÊØîÂâçÈù¢ÁöÑÊï∞ÈÉΩÂ§ßÔºåÊØîÂêéÈù¢ÁöÑÊï∞ÈÉΩÂ∞èÔºåÈÇ£Ëøô‰∏™Êï∞‰∏ÄÂÆöÂåÖÂê´Âú®LIS‰∏≠„ÄÇ ÈÇ£‰πàÊàë‰ª¨ÂèØ‰ª•‰ΩøÈúÄË¶ÅÂà∑È¢òÁöÑÊØè‰∏ÄÂ§©ÈÉΩÊª°Ë∂≥Ëøô‰∏™Ë¶ÅÊ±Ç„ÄÇ Â¶ÇÊï∞ÊçÆÔºö12 6 10 11 8 12 10 11 16 14 17 13 14 18ÔºåÊàë‰ª¨ÂèØ‰ª•ËøõË°å‰ª•‰∏ãÈ™öÊìç‰ΩúÔºö 12 6 10 11 8 12 10 11 16 14 17 13 14 18 ÂæóÂà∞6 10 11 16 17 18„ÄÇ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 123456789101112131415161718192021void proc() &#123; // int new_n = 0; c[0] = t[0] // t‰∏≠ÁöÑÂÜÖÂÆπÂ§ÑÁêÜÂêéË¢´Â≠òÂÖ•c‰∏≠ int nx = 0; *c = *t; for (int i = 1; i &lt;= m; i++) &#123; if (i &gt; 1) c[++nx] = t[p[i-1]]; for (int j = p[i-1]+1; j &lt; p[i]; j++) &#123; // ‰∏§‰∏™ÂøÖÈ°ªÂà∑È¢òÁöÑÊó•Â≠êÁöÑ‰∏≠Èó¥ if (t[p[i-1]] &lt; t[j] &amp;&amp; t[j] &lt; t[p[i]]) &#123; c[++nx] = t[j]; &#125; &#125; &#125; c[++nx] = t[p[m]]; for (int i = p[m]+1; i &lt;= n; i++) &#123; // ÊúÄÂêé‰∏Ä‰∏™ÂøÖÈ°ªÂà∑È¢òÁöÑÊó•Â≠ê‰πãÂêé if (t[p[m]] &lt; t[i]) &#123; c[++nx] = t[i]; &#125; &#125; c[++nx] = t[p[m]]; n = nx;&#125; LIS O(nlogn)O(n \log n)O(nlogn)ÁöÑLISÁÆóÊ≥ïÂèÇËßÅËøôÈáåÔºå‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 123456for (int i = 1; i &lt;= n; i++) &#123; int pos = lower_bound(lis+1, lis+ans+1, c[i]) - lis; lis[pos] = c[i]; ans = max(ans, pos);&#125;printf("%d", ans); ‰ª£Á†Å 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152#include &lt;bits/stdc++.h&gt;using namespace std;int p[500005], t[500005];int lis[500005];int c[500005];int n, m, x; int ans;void proc() &#123; int nx = 0; *c = *t; for (int i = 1; i &lt;= m; i++) &#123; if (i &gt; 1) c[++nx] = t[p[i-1]]; for (int j = p[i-1]+1; j &lt; p[i]; j++) &#123; if (t[p[i-1]] &lt; t[j] &amp;&amp; t[j] &lt; t[p[i]]) &#123; c[++nx] = t[j]; &#125; &#125; &#125; c[++nx] = t[p[m]]; for (int i = p[m]+1; i &lt;= n; i++) &#123; if (t[p[m]] &lt; t[i]) &#123; c[++nx] = t[i]; &#125; &#125; c[++nx] = t[p[m]]; n = nx;&#125; int main() &#123; scanf("%d%d", &amp;n, &amp;m); for (int i = 1; i &lt;= m; i++) &#123; scanf("%d", p+i); &#125; sort(p+1, p+m+1); for (int i = 1; i &lt;= n; i++) &#123; scanf("%d", t+i); &#125; for (int i = 2; i &lt;= m; i++) &#123; if (t[p[i]] &lt;= t[p[i-1]]) &#123; puts("impossible"); return 0; &#125; &#125; proc(); for (int i = 1; i &lt;= n; i++) &#123; int pos = lower_bound(lis+1, lis+ans+1, c[i]) - lis; lis[pos] = c[i]; ans = max(ans, pos); &#125; printf("%d", ans);&#125; ÊãìÂ±ï ÂØπ‰∫éÈôêÂà∂ÊàñÊîπÁâàLISÈóÆÈ¢òÔºåÂèØ‰ª•ÂÅö‰∏ÄÂÆöÁöÑÂ§ÑÁêÜÔºå‰ΩøÂÖ∂Âèò‰∏∫Ê≠£Â∏∏LISÔºåÁÑ∂ÂêéÂÜç‰ΩøÁî®Ë£∏LISÁÆóÊ≥ïËß£ÂÜ≥„ÄÇÊàñËÄÖËÆæËÆ°ÈíàÂØπÈ¢òÁõÆÁöÑÁÆóÊ≥ï„ÄÇ ËøôÈáåÂàóÂá∫‰∏Ä‰∫õÁõ∏ÂÖ≥ÁöÑÈ¢òÁõÆÔºö LICS ÊúÄÈïø‰∏äÂçáÂÖ¨ÂÖ±Â≠êÂ∫èÂàó ‰∫åÂÖÉÁªÑLIS ÊúÄÈïøÈúáËç°Â≠êÂ∫èÂàó]]></content>
      <categories>
        <category>DP</category>
        <category>LIS</category>
      </categories>
      <tags>
        <tag>DP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÂ∫ïÂ±Ç„Äë„ÄêInternal„ÄëÊ∑±Êã∑Ë¥ù‰πãÊÆá]]></title>
    <url>%2F2017%2F12%2F08%2F%E3%80%90%E5%BA%95%E5%B1%82%E3%80%91%E3%80%90Internal%E3%80%91%E6%B7%B1%E6%8B%B7%E8%B4%9D%E4%B9%8B%E6%AE%87%2F</url>
    <content type="text"><![CDATA[ËØ∑‰ªéÁ∫ØÊñáÊú¨ÊÑèËØÜÊµÅ‰∏≠ÂØºÂá∫ÂØÜÁ†Å ]]></content>
      <categories>
        <category>Â∫ïÂ±Ç</category>
      </categories>
      <tags>
        <tag>Â∫ïÂ±Ç</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÂ∫ïÂ±Ç„Äë„ÄêInternal„Äë‰∏Ä‰∏™UBÂºïÂèëÁöÑË°ÄÊ°à]]></title>
    <url>%2F2017%2F12%2F08%2F%E3%80%90%E5%BA%95%E5%B1%82%E3%80%91%E3%80%90Internal%E3%80%91%E4%B8%80%E4%B8%AAUB%E5%BC%95%E5%8F%91%E7%9A%84%E8%A1%80%E6%A1%88%2F</url>
    <content type="text"><![CDATA[ËØ∑‰ªéÁ∫ØÊñáÊú¨ÊÑèËØÜÊµÅ‰∏≠ÂØºÂá∫ÂØÜÁ†Å ]]></content>
      <categories>
        <category>Â∫ïÂ±Ç</category>
      </categories>
      <tags>
        <tag>Â∫ïÂ±Ç</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêBFS„ÄëÂÖ´Êï∞Á†ÅÈóÆÈ¢ò]]></title>
    <url>%2F2017%2F11%2F24%2F%E3%80%90BFS%E3%80%91%E5%85%AB%E6%95%B0%E7%A0%81%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[È¢òÊÑè Ëøô‰πàÁªèÂÖ∏ÁöÑÈ¢òÁõÆËøòË¶ÅÈ¢òÊÑè‚Ä¶ ‰º†ÈÄÅÈó®ÔºöÊ¥õË∞∑ P1379(ËÆ©ÊàëÊÉ≥Âà∞‰∫Ü1379Âè∑ÁõëÂê¨ÂëòüòÜ) ÊÄùË∑Ø ‰∏ç‰ºöÂÜôÂ∫∑ÊâòÂ±ïÂºÄÔºåÈÅÇÁî®Êï∞Â≠óÂ≠òÂÇ®ÔºåÁÑ∂Âêé‰ΩøÁî®bitsetÂ≠òÂÇ®visitedÊï∞ÁªÑ„ÄÇ ËæìÂÖ•ÂêéÂØπËæìÂÖ•ÁöÑÂ±ÄÈù¢BFS„ÄÇ ‰∫§Êç¢Êï¥Êï∞‰∏≠ÁöÑÊï∞Â≠ó È¶ñÂÖàÔºåÊï∞Â≠ó‰∏≠ÁöÑ‰∏ãÊ†áÂØπÂ∫î‰ª•‰∏ãË°®Ê†ºÔºö 0 1 2 3 4 5 6 7 8 ÈÇ£‰πàÔºå ‰∏ä‰∏ã‰∫§Êç¢Â∞±ÊòØxxxÂíåx+3x+3x+3‰∫§Êç¢(x&lt;5)(x&lt;5)(x&lt;5)Ôºå Â∑¶Âè≥‰∫§Êç¢Â∞±ÊòØxxxÂíåx+1x+1x+1‰∫§Êç¢(x&lt;7)(x&lt;7)(x&lt;7)„ÄÇ ‰ΩÜÊúâ‰∏™ÈóÆÈ¢òÔºåÂ¶ÇÊûú2Âíå3‰∫§Êç¢ÊàñËÄÖ5Âíå6‰∫§Êç¢ÈÇ£Â∞±‰∏çË°å‰∫Ü„ÄÇ ÊâÄ‰ª•Êúâ‰∏Ä‰∏™Á•ûÂ•áÁöÑÊñπÊ≥ïÔºöÂà§Êñ≠‰∏§Êï∞Áõ∏‰πòÊòØÂê¶‰∏∫6Êàñ30üòÜ„ÄÇ 123456789ÔºåËã•Ë¶ÅÂ∞Ü3Âíå7‰∫§Êç¢Ôºå È¶ñÂÖàËÆ∞ÂøÜ3ÔºåÊé•‰∏ãÊù•Âáè7√ó1027 \times 10^27√ó10‚Äã2‚Äã‚ÄãÔºåÁÑ∂ÂêéÂä†3√ó1023 \times 10^23√ó10‚Äã2‚Äã‚ÄãÔºå ÂÜçÂáè3√ó1063 \times 10^63√ó10‚Äã6‚Äã‚ÄãÔºåÊúÄÂêéÂä†7√ó1067 \times 10^67√ó10‚Äã6‚Äã‚Äã„ÄÇ ËæìÂá∫Ë∑ØÂæÑÔºü ÈõÜËÆ≠ÁöÑÈ¢òÁõÆË¶ÅËæìÂá∫Ë∑ØÂæÑÔºåÈÇ£Â∞±Âä†‰∏™mapÂ≠òÂâçÈ©±ÔºåÁÑ∂ÂêéÈÄíÂΩíÊâìÂá∫Êù•„ÄÇ Talk is cheap! Give me the code! ‰ª£Á†ÅÂú®ËøôÈáåÔºö ÂèØ‰ª•ACÊ¥õË∞∑P1379 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950#include &lt;bits/stdc++.h&gt;#define t(x) ((((x)&lt;&lt;2)+(x))&lt;&lt;1)#define l(x, i) ((x)/p10[i]%10)#define w(x, i) (*(x+i))using namespace std;// È¢ÑÂ§ÑÁêÜ10^nconst int p10[] = &#123;1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000&#125;;const int dir[4] = &#123;3, -3, 1, -1&#125;; // ÊñπÂêëÁü¢Èáèmap&lt;int, int&gt; dep; // Ê∑±Â∫¶queue&lt;int&gt; bfs; // ÂπøÊêúÈòüÂàóint n; // Êï∞Â≠óint main() &#123;// #ifndef __TIGER0132__// freopen("9gong.in", "r", stdin);// freopen("9gong.out", "w", stdout);// #endif scanf("%d", &amp;n); bfs.push(n); dep[n] = 0; // ÂàùÂßãÊ∑±Â∫¶ while (!bfs.empty()) &#123; int pos = bfs.front(); bfs.pop(); int cdep = dep[pos] + 1; // Áé∞Âú®ÊêúÂà∞ÁöÑÊï∞Â≠óÁöÑÊ∑±Â∫¶ int _0; // Êï∞Â≠ó‰∏≠0ÁöÑ‰ΩçÁΩÆ// printf("%d\n", pos); if (pos == 123804765) &#123; printf("%d", dep[pos]); return 0; &#125; for (_0 = 0; _0 &lt; 9; _0++) &#123; // ÊêúÁ¥¢0ÁöÑ‰ΩçÁΩÆ if (!l(pos, _0)) break; &#125; for (int i = 0; i &lt; 4; i++) &#123; int p0 = _0; // Á¨¨‰∏Ä‰∏™Ë¶Å‰∫§Êç¢ÁöÑÊï∞ÁöÑ‰∏ãÊ†á int p1 = _0+w(dir, i); // Á¨¨‰∫å‰∏™Ë¶Å‰∫§Êç¢ÁöÑÊï∞ÁöÑ‰∏ãÊ†á int p2 = pos, p3; // p2ÊòØposÁöÑÊã∑Ë¥ù, p3‰∏¥Êó∂ÂèòÈáè // Âà§Êñ≠‰∫§Êç¢ÊòØÂê¶ÂêàÊ≥ï if (p0 &lt; 0 || p1 &lt; 0 || p0 &gt; 8 || p1 &gt; 8 || p0*p1 == 6 || p0*p1 == 30) continue; p3 = l(p2, p0); // t = a; p2 += (l(p2,p1) - l(p2,p0))*p10[p0]; // a = b; p2 += (p3 - l(p2,p0))*p10[p1]; // b = t; if (dep.count(p2)) continue; // Âà§Êñ≠ÊòØÂê¶ÊêúËøá bfs.push(p2); // ÂÖ•Èòü dep[p2] = cdep; // Êõ¥Êñ∞Ê∑±Â∫¶ &#125; &#125; puts("Oh no! Where's my solution?");&#125; ÊïôËÆ≠ ‚ö†Ô∏è‰∏çË¶ÅÊó†ËÑëregisterÔºå‰∏çÁÑ∂TLEËá™Â∑±Ë¥üË¥£ÔºÅ]]></content>
      <categories>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÁ∫øÊÆµÊ†ë„ÄëÁ∫øÊÆµÊ†ë]]></title>
    <url>%2F2017%2F10%2F29%2F%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91%E7%BA%BF%E6%AE%B5%E6%A0%91%2F</url>
    <content type="text"><![CDATA[ÁÆÄ‰ªã Á∫øÊÆµÊ†ëÊòØ‰∏ÄÁßçÂ≠òÂÇ®Âå∫Èó¥ÁöÑ‰∫åÂèâÊ†ëÔºåÁî®‰∫éÂø´ÈÄüËß£ÂÜ≥Êª°Ë∂≥Âå∫Èó¥Âä†Ê≥ïÁöÑÂå∫Èó¥ÈóÆÈ¢ò„ÄÇ ÊôÆÈÄöÁ∫øÊÆµÊ†ë ÁªìÊûÑ Â∑¶Â≠©Â≠êÂíåÂè≥Â≠©Â≠êÂπ≥ÂàÜÁà∂ËäÇÁÇπÁöÑÂå∫Èó¥Ôºå‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 123456struct node &#123; int sum, l, r; // sumÂèØÊõøÊç¢Êàêmax, minÁ≠âÁ≠â // lchild = 2i, rchild = 2i + 1&#125; segTree[n &gt;&gt; 1]; Âª∫Ê†ë Ëá™È°∂Âêë‰∏ãÊêúÂà∞Âè∂Â≠êÔºåÂÜçÈÄêÁ∫ßÊõ¥Êñ∞Âà∞Ê†π„ÄÇÂ∞±ÂÉèËøôÊ†∑Ôºö 1234567891011121314void build(int id, int l, int r) &#123; // id‰ª£Ë°®Áé∞Âú®ËÆøÈóÆÂà∞ÁöÑËäÇÁÇπÁºñÂè∑, l, r‰ª£Ë°®Êü•ÊâæÂå∫Èó¥ // Ë∞ÉÁî®Êó∂Âàôbuild(1, 1, n) tree[id].l = l; tree[id].r = r; if (l == r) &#123; tree[id].sum = arr[l]; &#125; else &#123; int mid = (l + r) &gt;&gt; 1; build((id &lt;&lt; 1), l, mid); build((id &lt;&lt; 1) | 1, mid + 1, r); tree[id].sum = tree[id &lt;&lt; 1].sum + tree[(id &lt;&lt; 1) | 1].sum; &#125;&#125; ÂçïÁÇπ‰øÆÊîπ ‰ªéÊ†πËäÇÁÇπËá™È°∂Âêë‰∏ãÊü•ËØ¢ÔºåÊü•Âà∞Âè∂Â≠êËäÇÁÇπÊõ¥Êñ∞ÁÑ∂ÂêéËøîÂõûÂπ∂Êõ¥Êñ∞ÊâÄÊúâÈÅáÂà∞ÁöÑËäÇÁÇπ„ÄÇLike thisÔºö 12345678910111213void modify(int id, int target, int value) &#123; // id‰ª£Ë°®Áé∞Âú®ËÆøÈóÆÂà∞ÁöÑËäÇÁÇπÁºñÂè∑, target‰ª£Ë°®ÁõÆÊ†áÁöÑ‰∏ãÊ†á, value‰ª£Ë°®Êñ∞ÂÄº int mid = (tree[id].l + tree[id].r) &gt;&gt; 1; if (tree[id].l == tree[id].r) &#123; tree[id].sum = arr[tree[id].l] = f(arr[tree[id].l]); return; &#125; else if (target &gt; mid) &#123; modify((id &lt;&lt; 1) | 1, target, f); &#125; else &#123; modify((id &lt;&lt; 1), target, f); &#125; tree[id].sum = tree[id &lt;&lt; 1].sum + tree[(id &lt;&lt; 1) | 1].sum;&#125; ÂçïÁÇπÊü•ËØ¢ ‰ªéÊ†πËäÇÁÇπËá™È°∂Âêë‰∏ãÔºåÊü•Âà∞Âè∂Â≠êËäÇÁÇπËøîÂõû„ÄÇ Âå∫Èó¥‰øÆÊîπ ÊñΩÂ∑•‰∏≠ÔºåÊú™ÂÆåÂæÖÁª≠‚Ä¶ Âå∫Èó¥Êü•ËØ¢ 12345678910111213int sum(int id, int l, int r) &#123; if (tree[id].l &gt;= l &amp;&amp; tree[id].r &lt;= r) &#123; return tree[id].sum; &#125; int sum = 0, mid = (tree[id].l + tree[id].r) &gt;&gt; 1; if (l &lt;= mid) &#123; sum += this -&gt; sum((id &lt;&lt; 1), l, min(mid, r)); &#125; if (r &gt; mid) &#123; sum += this -&gt; sum((id &lt;&lt; 1) | 1, max(mid + 1, l), r); &#125; return sum;&#125; Á©∫Èó¥Â§çÊùÇÂ∫¶ Á©∫Èó¥Â§çÊùÇÂ∫¶‰∏∫O(4n)=O(n)O(4n) = O(n)O(4n)=O(n) Êó∂Èó¥Â§çÊùÇÂ∫¶ Âª∫Ê†ëO(n)O(n)O(n) ÂçïÁÇπ‰øÆÊîπO(logn)O(\log n)O(logn) ÂçïÁÇπÊü•ËØ¢O(logn)O(log n)O(logn) Âå∫Èó¥‰øÆÊîπO(berO(berO(ber) Âå∫Èó¥Êü•ËØ¢O(n)O(n)O(n) zkwÁ∫øÊÆµÊ†ë ‚ö†Ô∏è‚ö†Ô∏èÔºÅÔºÅAttentionÔºÅÔºÅ(i&lt;&lt;1)|1‰∏çË¶ÅÂÜôÊàêi&lt;&lt;1|1ÔºÅÔºÅÔºÅ ÁªìÊûÑ Â†ÜÂºèÂ≠òÂÇ®Ôºålchild=2i,rchild=2i+1lchild = 2i, rchild = 2i+1lchild=2i,rchild=2i+1Ôºö 12345// Âú®ËøôÈáå, MÂøÖÈ°ªÊòØ2^n// segTreeÁî®Êù•Â≠òÊúÄÂ§ßÂÄºÊúÄÂ∞èÂÄº‰πãÂÜÖÁöÑ‰∏úË•ø// Â¶ÇÊûúÊúâÈúÄË¶ÅÂèØ‰ª•ÂºÄ‰∏™nodeÊàñËÄÖÂ§öÁî®Âá†‰∏™Êï∞ÁªÑint segTree[M &gt;&gt; 1];// Ê≤°‰∫Ü? Ê≤°‰∫Ü. ÁâπÊÄßÔºöÂõ†‰∏∫Âè∂Â≠êËäÇÁÇπÊòØÂéüÊï∞ÁªÑÊâÄ‰ª•Áõ¥Êé•‰∏ãÊ†áÂä†MÂ∞±ÂèØ‰ª•ÊâæÂà∞ÂéüÊï∞ÁªÑ„ÄÇ Âª∫Ê†ë ÊñΩÂ∑•‰∏≠ÔºåÊú™ÂÆåÂæÖÁª≠‚Ä¶ 12345678void build(int n) &#123; for (i = M; i &lt; M + n; i++) &#123; scanf("%d", segTree + i); &#125; for (i = M - 1; i; i--) &#123; segTree[i] = min(segTree[i &lt;&lt; 1], segTree[(i &lt;&lt; 1) | 1]); &#125;&#125; ÂçïÁÇπ‰øÆÊîπ ÊñΩÂ∑•‰∏≠ÔºåÊú™ÂÆåÂæÖÁª≠‚Ä¶ Âå∫Èó¥‰øÆÊîπ ÊñΩÂ∑•‰∏≠ÔºåÊú™ÂÆåÂæÖÁª≠‚Ä¶ Âå∫Èó¥Êü•ËØ¢ ÊñΩÂ∑•‰∏≠ÔºåÊú™ÂÆåÂæÖÁª≠‚Ä¶ Á©∫Èó¥Â§çÊùÇÂ∫¶ ÊñΩÂ∑•‰∏≠ÔºåÊú™ÂÆåÂæÖÁª≠‚Ä¶ Êó∂Èó¥Â§çÊùÇÂ∫¶ ÊñΩÂ∑•‰∏≠ÔºåÊú™ÂÆåÂæÖÁª≠‚Ä¶ Âª∫Ê†ëO(n)O(n)O(n) ÂçïÁÇπ‰øÆÊîπO(1)O(1)O(1) Âå∫Èó¥Êü•ËØ¢O(logn)O(log n)O(logn)]]></content>
      <categories>
        <category>Á∫øÊÆµÊ†ë</category>
      </categories>
      <tags>
        <tag>Á∫øÊÆµÊ†ë</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêDP„Äë„ÄêInternal„Äë‰∫åÂÖÉÁªÑdp]]></title>
    <url>%2F2017%2F10%2F15%2F%E3%80%90DP%E3%80%91%E3%80%90Internal%E3%80%91%E4%BA%8C%E5%85%83%E7%BB%84dp%2F</url>
    <content type="text"><![CDATA[ËØ∑‰ªéÁ∫ØÊñáÊú¨ÊÑèËØÜÊµÅ‰∏≠ÂØºÂá∫ÂØÜÁ†Å ]]></content>
      <categories>
        <category>DP</category>
      </categories>
      <tags>
        <tag>DP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â∏∏ËßÅÈîôËØØ]]></title>
    <url>%2F2017%2F10%2F12%2F%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%2F</url>
    <content type="text"><![CDATA[Êú¨ÊñáÊî∂ÈõÜÂ∏∏ËßÅ‰ª•Âèä‰∏çÂ∏∏ËßÅÁöÑÂêÑÁßçÈîôËØØÔºÅ ÈîôËØØ ÊäÄÊúØÈóÆÈ¢ò Ê∫¢Âá∫ ËøêÁÆóÊ∫¢Âá∫(ÁàÜint/long long) ‰∏≠Èó¥ÁªìÊûúÊ∫¢Âá∫(Â¶ÇÁªÑÂêàÊï∞) Âæ™ÁéØÁªìÊùüÊù°‰ª∂Ê∫¢Âá∫(Â∞ëËßÅÔºå‰ºöÂØºËá¥TLE) ÂÖ∂ÂÆÉÂéüÂõ†ÂØºËá¥Ê∫¢Âá∫(Â¶ÇË∂äÁïå) ÈîôËØØÁ≠îÊ°à ÂèÇËßÅ&quot;Ê∫¢Âá∫&quot; Ë∂ÖÊó∂ ÂèÇËßÅ&quot;Ê∫¢Âá∫&quot; Âæ™ÁéØÁªìÊùüÊù°‰ª∂ÊúâËØØ Â¥©Ê∫É Êï∞ÁªÑÂºÄÂ§ß(ÂºÄÂ∞è) ÈÄíÂΩí(dfs)ÁªìÊùüÊù°‰ª∂ÊúâËØØ scanfÊ≤°ÂÜôÂèñÂÄºÁ¨¶ ‰ºòÂÖàÁ∫ß Á∫øÊÆµÊ†ë(i&lt;&lt;1)|1ÂÜôÊàêi&lt;&lt;1|1 Â∫ïÂ±ÇÈóÆÈ¢ò ÂÜÖÂ≠òÂíåUB Ê∑±ÊµÖÊã∑Ë¥ù ÈùûÊäÄÊúØÈóÆÈ¢ò Ê≤°ÂÜôÊñá‰ª∂ ÁºñËØëÈîôËØØ Ê≤°Âª∫Â≠êÊñá‰ª∂Â§π ÈöèÊó∂Êõ¥Êñ∞‚Ä¶]]></content>
      <categories>
        <category>Â∏∏ËßÅÈîôËØØ</category>
      </categories>
      <tags>
        <tag>Â∏∏ËßÅÈîôËØØ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêËΩ¨„ÄëRPÂØºËÆ∫]]></title>
    <url>%2F2017%2F10%2F11%2F%E3%80%90%E8%BD%AC%E3%80%91RP%E5%AF%BC%E8%AE%BA%2F</url>
    <content type="text"><![CDATA[1 Â∫è‚Äî‚Äî‰∏∫‰ªÄ‰πàË¶ÅÂÜôRPÂØºËÆ∫ RPÔºåÊòØ‰∫∫ÂìÅÁöÑÁº©ÂÜôÔºåÂú®Ê∞ëÈó¥Âπø‰∏∫ÊµÅ‰º†ÔºåË¢´‰∏çÂ∞ë‰∫∫ËßÜ‰ΩúÁúüÁêÜÔºå‰πüÊúâÂæàÂ§ö‰∫∫Â∞Ü‰πãËßÜ‰ΩúËø∑‰ø°„ÄÇ ÁúüÁöÑÂæàÊó©Â∞±‰∫ÜËß£Âà∞RPÂú®‰ø°ÊÅØÂ≠¶Á´ûËµõ‰∏≠‰∏æË∂≥ËΩªÈáçÁöÑ‰ΩúÁî®‰∫ÜÔºåÂä†‰∏äÂâç‰∏§Â§©Áî±‰∫éÁàÜRPËÄÉËØïÁàÜÈõ∂ÔºåÊòüÈôÖË¢´ËôêÔºå‰∫§OJËé´ÂêçÂÖ∂Â¶ôunac‚Ä¶‚Ä¶‰∏ÄÂàáÁöÑ‰∏ÄËµ∑ÔºåËÆ©Êàë‰∏çÂæó‰∏çÊääRPÁöÑÁêÜËÆ∫Á≥ªÁªüÁØÜÂÜô‰∫é‰π¶Ôºå‰ª•‰æõÂèÇËÄÉÔºåÈò≤Ê≠¢Â§ßÂÆ∂ÈáçËπàÊàëÁöÑË¶ÜËæô„ÄÇ ‰ºóÊâÄÂë®Áü•ÔºåÂú®‰ø°ÊÅØÂ≠¶Á´ûËµõ‰∏≠ÔºåÈô§ÂéªÁÆóÊ≥ïÊï∞ÊçÆÁªìÊûÑ‰ΩøÁî®ÔºåÁ®ãÂ∫èÁºñÂÜôË∞ÉËØïËÉΩÂäõ‰πãÂ§ñÔºåÊéíÂú®Á¨¨‰∏âÁöÑÂØπÊØîËµõÊúâËá≥ÂÖ≥ÈáçË¶Å‰ΩúÁî®ÁöÑ‰æøÊòØRP‰∫ÜÔºåRPÈ´òÁöÑ‰∫∫Âç≥‰Ωø‰∏çÁü•ÈÅìÁÆóÊ≥ï‰πüËÉΩÁî®ÈöèÊú∫ÔºåË¥™ÂøÉÔºåÊêúÁ¥¢Á≠âRPÁÆóÊ≥ïÂæóÂà∞Êó†ÊØîÂ§öÁöÑRPÂàÜÊï∞ÔºõÁõ∏ÂèçÔºåÊ≤°RPÁöÑ‰∫∫ÔºåÊúâÊó∂Áü•ÈÅìÊ≠£Á°ÆÁÆóÊ≥ï‰πüÂÜôÂá∫‰∫ÜÊ≠£Á°ÆÁ®ãÂ∫èÔºå‰πüÂæÄÂæÄ‰ºöÂõ†‰∏∫Áº∫Â∞ë RPËÄåÊó†Ê≥ïÂæóÂàÜ„ÄÇËøôÊ†∑ÁúãÊù•ÔºåÁ≥ªÁªüÁ†îÁ©∂RPÁöÑÁßØÁ¥Ø‰∫éÊçüÂ§±Ôºå‰ª•ÂèäÈáèÂåñÂú∞ÂàÜÊûêÂÆÉÂØπÊØîËµõÁöÑÁªìÊûúÁöÑÂΩ±ÂìçÂ∞±ÊòæÂæóÂçÅÂàÜÈáçË¶Å‰∫Ü„ÄÇ ‰ΩÜÊòØÔºåÁõÆÂâçÂõΩÂÜÖÂ§ñÁ≥ªÁªüÁ†îÁ©∂RPÁöÑËÆ∫ÊñáÂíå‰π¶Á±çÈÉΩËøòÂæàÁº∫‰πèÔºå‰πüÊúâÂæàÂ§ö‰ºòÁßÄÁöÑOIerËÆ§ËØÜÂà∞‰∫ÜRPÁöÑÈáçË¶ÅÊÄßÔºå‰ΩÜÂèàÂõ†ÁßçÁßçÂéüÂõ†Ê≤°ËÉΩ‰ªé‰∫ãRPÊñπÈù¢ÁöÑÁ†îÁ©∂ÔºåÂØºËá¥ÂæàÂ§öOIerÂõ†‰∏∫ÂØπRP‰∏ç‰∫ÜËß£ËÄåÂá∫Áé∞ÂèëÊå•Â§±Â∏∏Ôºå‰∏éÂ•ñÁâåÂ§±‰πã‰∫§ËáÇÔºå‰∏∫‰∫ÜËÆ©ËøôÁßçÊÇ≤Ââß‰∏çÂÜçÂèëÁîüÔºåÊàë‰ª¨ÊúâÂøÖË¶Å‰ªîÁªÜÁ†îÁ©∂RP‰∫Ü„ÄÇ Ê≥® „ÄäRPÂØºËÆ∫„ÄãÂéüÂßãÁâàÊú¨Áî±Ê¥™È™•ÂèëÂ∏ÉÔºåÂêéÁî±Ë•øÂçóOIÂâëÊ¥æCDQZÂàÜÈÉ®ÂºüÂ≠êËÅîÂêàÁºñËæëËá≥‰ªäÔºåÊ¨¢ËøéÂ§©‰∏ãÂêåÈÅìÂâçÊù•ÁºñËæë„ÄÇ RPÁöÑÂÆö‰πâ‰∏éÂΩ¢Êàê RPÁöÑÊ¶ÇÂøµ‰∏éÊÑè‰πâ RPÊòØÂ§ßÂÆ∂ËÄ≥ÁÜüËÉΩËØ¶ÁöÑ‰∏Ä‰∏™ËØçÊ±áÂíåÊ¶ÇÂøµÔºåÊîπÈù©ÂºÄÊîæ‰ª•Êù•ÔºåÈöèÁùÄÂ∏ÇÂú∫ÁªèÊµéÁöÑÊ∑±ÂÖ•ÔºåÁ´û‰∫âÊó•ÁõäÊøÄÁÉàÔºåÂ§ßÂÆ∂ÈÉΩÂú®ÂØªÊâæÂú®ÂêÑËá™È¢ÜÂüüÂèñËÉúÁöÑÊúâÊïàÊñπÊ≥ïÔºå‰∫∫‰ª¨ËÄÉËôëÂêÑÁßçÂõ†Á¥†Êù•ÊèêÈ´òËá™Â∑±ÊàêÂäüÁöÑÊ¶ÇÁéá„ÄÇ Ê±üÊπñÈöæÊµãÔºåË∞ÅÊòØÂº∫ËÄÖÔºåË∞Å‰∫â‰∏ÄÁªüÊ≠¶ÊûóÁöÑËµÑÊ†ºÔºÅ Âú®ËøôÊ†∑ÁöÑÂ§ßËÉåÊôØ‰∏ãÔºå‰æøËá™ÁÑ∂ËÄåÁÑ∂Âú∞‰∫ßÁîü‰∫ÜRPÁöÑÊ¶ÇÂøµÔºåËµ∑ÂàùËøô‰∏™Ê¶ÇÂøµËøòÊòØ‰æùÈôÑÂú®ÂÖ∂‰ªñÂõ†Á¥†‰∏äÁöÑ‰∏Ä‰∏™ÈôÑÂ±ûÂìÅÔºå‰ΩÜÊòØÂΩì‰∫∫‰ª¨ÁúüÊ≠£ËÆ§ËØÜÂà∞ÂÆÉÁöÑÂΩ±ÂìçÊó∂ÔºåÊâçÂèëÁé∞ÂÆÉÊòØ‰∏Ä‰∏™Áã¨Á´ãÁöÑ‰ΩìÁ≥ª„ÄÇÁî±‰∫éÂêÑÂú∞ÂêÑÊñáÁåÆÂÜÖÂÆπÂØπRPÁöÑÂÆö‰πâÈÉΩÂæàÊ®°Á≥äÔºå‰πü‰∏çÂ§üÁªü‰∏ÄÔºåÂõ†Ê≠§Á¨îËÄÖÂú®Ê≠§‰ª•Â≠¶ÊúØÁöÑËßíÂ∫¶ÔºåÂÆ¢ËßÇÁöÑÊñπÂºèÁªôÂá∫RPÁöÑ‰∏•Ê†ºÂÆö‰πâÔºö Definition 1 RPÔºöÂú®‰∏ÄÂÆöÊó∂Èó¥ÂíåÁ©∫Èó¥ËåÉÂõ¥ÂÜÖÁã¨Á´ã‰∫éÂèØËßÅÂõ†Á¥†‰πãÂ§ñ‰ª•‰∏çÁ°ÆÂÆöÊñπÂºèÂ∑¶Âè≥ÂÆ¢ËßÇ‰∫ãÁâ©ÂèòÂåñÊñπÂºèÁîöËá≥ËßÑÂæãÁöÑÊó†ÂΩ¢Áâ©Ë¥®„ÄÇ ‰∏ÄÁõ¥‰ª•Êù•ÔºåÂ§ßÂÆ∂ËßâÂæóRPËøá‰∫éÈ£òÊ∏∫Ôºå‰∏çÊÑøÊÑèÁ†îÁ©∂ÂÆÉÔºåËøôÂÖ∂ÂÆûÊòØÁî±‰∫éÊ≤°ÊúâÁúüÊ≠£ÊÑèËØÜÂà∞RPÂú®ÂÆ¢ËßÇ‰∏ñÁïåÁâ©Ë¥®ÂèòÂåñËßÑÂæã‰∏≠ÁöÑÈáçË¶ÅÊÑè‰πâÔºåÁî±‰∫éÂÆ¢ËßÇ‰∏ñÁïåÁüõÁõæÁöÑÊôÆÈÅçÊÄßÂ≠òÂú®ÔºåÂØºËá¥RPÂõ†Á¥†Âú®‰∫ãÁâ©ÂèëÂ±ïÂèòÂåñÁöÑÂêÑ‰∏™ËßíËêΩÈÉΩÂèëÊå•ÁùÄ‰∏çÂèØÂøΩÁï•ÁöÑÂÜ≥Á≠ñÊÄß‰ΩúÁî®Ôºå‰∏ÄËà¨Êù•ËØ¥ÔºåRPÁöÑÊÑè‰πâ‰∏ªË¶ÅÊúâ‰ª•‰∏ãÂá†ÁÇπÔºö ÂØπÂÆ¢ËßÇ‰∏ñÁïåÁöÑÂπ≥Ë°°‰ΩúÁî® Áâ©Ë¥®‰∏ñÁïåÊÄªÊòØË∂ã‰∫éÂπ≥Ë°°ÁöÑÔºåÊó†ËÆ∫ÊòØËÉΩÈáè|Áâ©Ë¥®ÂÆàË°°ÂÆöÂæãÔºåËøòÊòØÁÉ≠ÂäõÂ≠¶Á¨¨‰∏ÄÔºåÁ¨¨‰∫åÂÆöÂæãÔºåÈÉΩ‰ªé‰æßÈù¢ÊîØÊåÅËøô‰∏ÄÁªìËÆ∫„ÄÇ‰ΩÜÊòØÂú®‰∫ãÁâ©ÁöÑÂêÑ‰∏™ÊñπÈù¢‰∏™‰Ωì‰πãÈó¥‰∏çÂèØËÉΩÂÆåÂÖ®Âπ≥Ë°°ÔºåËÄåÂèà‰∏ç‰∏ÄÂÆöËÉΩÂú®‰∏çÂ§öÁöÑÂèØËßÅ‰∏ªËßÇÂõ†Á¥†‰∏≠‰Ωø‰∏™‰Ωì‰πãÈó¥ÂÆûÁé∞Âπ≥Ë°°ÔºàËøôÊ≠£Â¶ÇËÉåÂåÖ‚Äî‚ÄìÂèåÂ°îÈóÆÈ¢ò‰∏ç‰∏ÄÂÆöÊúâËß£‰∏ÄÊ†∑ÔºâÔºå‰ΩÜÊòØÂè™Ë¶ÅÊúâ‰∫ÜRPÔºåÂ∞±ËÉΩÂæàÊñπ‰æøÂú∞ÂØπÂÆ¢ËßÇ‰∏ñÁïåËøõË°åÂæÆË∞ÉÔºå‰Ωø‰∏ñÁïå‰∏çÂ§±ÂíåË∞ê„ÄÇ ÂØπ‰∏ªËßÇË°å‰∏∫ÁöÑÂ®ÅÊÖë‰ΩúÁî® ÊâÄË∞ìÂñÑÊúâÂñÑÊä•ÔºåÊÅ∂ÊúâÊÅ∂Êä•Ôºå‰ΩÜÊòØÂæàÈöæËØ¥Êúç‰∏Ä‰∏™Âç≥Â∞ÜÂÅö‰∏çÂéöÈÅì‰∫ãÊÉÖÁöÑ‰∫∫ËÆ©‰ªñÂÅúÊ≠¢ÔºåÂõ†‰∏∫Êàë‰ª¨‰∏çËÉΩÂÖ∑‰ΩìËØ¥Âá∫‰ªñÁöÑ‰∏çÂéöÈÅìË°å‰∏∫Âà∞Â∫ï‰∏∫‰ªÄ‰πà‰ºöÂØπ‰ªñËá™Â∑±‰πüÊúâÂÆ≥Ôºå‰ΩÜÊòØÁé∞Âú®Êúâ‰∫ÜÊúÄÂº∫ÊúâÂäõÁöÑÂ®ÅÊÖëÊ≠¶Âô®ÔºöRPÔºÅÂΩì‰ªñÂÅö‰∏çÂéöÈÅì‰∫ãÊÉÖÁöÑÊó∂ÂÄôÔºåÊúÄÈúÄË¶ÅËÄÉËôëÁöÑ‰∏çÊòØÂà´ÁöÑÔºåÊ≠£ÊòØËá™Â∑±ÁöÑRPÈì∂Ë°å„ÄÇ ÂØπ‰∏ªËßÇË°å‰∏∫ÁöÑÊøÄÂä±‰ΩúÁî® ‰∏éÁ¨¨‰∫åÊù°Áõ∏Á±ª‰ººÔºåRPÁöÑÂ≠òÂú®ÂèØ‰ª•ÂæàÂ§ßÁ®ãÂ∫¶‰∏äÊøÄÂä±‰∫∫ÂÅöÁßØÁ¥ØRPÁöÑÂéöÈÅì‰∫ãÊÉÖÔºåËøôÈáå‰∏çÂÜçËµòËø∞„ÄÇ RPÁöÑÂΩ¢Êàê ÊÄªÁöÑÊù•ËØ¥ÔºåRPÁöÑÂΩ¢ÊàêÊòØÂ§öÊñπÈù¢Âõ†Á¥†ÁªºÂêàÂΩ¢Ë±°ÂêéÁöÑÁªìÊûú„ÄÇÂØπ‰∫éRPÂΩ¢ÊàêÁöÑÂÜ≥ÂÆöÊÄßÂõ†Á¥†ÔºåÂ≠¶ÊúØÁïå‰∏ÄÁõ¥Ê≤°ÊúâÂÖ¨ËÆ§ÁöÑÁêÜËÆ∫ÔºåÁõÆÂâçÊØîËæÉË¢´‰∫∫Êé•ÂèóÁöÑËØ¥Ê≥ïÊòØÔºö RPÁöÑÂΩ¢Êàê‰∏éÂπ≥Êó∂ÂÅö‰∫ãÁöÑÂéöÈÅìÁ®ãÂ∫¶ÁöÑ‰∫åÊ¨°ÊñπÊ†πÊàêÊ≠£ÊØîÔºå‰ΩÜÊòØ‰πüÊúâ‰∫∫Ë¥®ÁñëËøôÁßçËØ¥Ê≥ïÔºåÂéüÂõ†ÊòØÊúâÊó∂‰∏Ä‰∏™ÂæàÂéöÈÅìÁöÑ‰∫∫‰πü‰ºöËé´ÂêçÂÖ∂Â¶ôÊ≤°RPÔºåÂÖ∏ÂûãÁöÑÊ°à‰æãÊòØÂèëÁîüÂú®‰∏≠ÂõΩÂõõÂ∑ù‰∏Ä‰∏™Â≠¶Ê†°ÁöÑ‰∏Ä‰∏™Âè´hjÁöÑ‰∫∫ÔºåÂπ≥Êó∂ÂæàÂéöÈÅìÔºå‰ΩÜÊòØ‰πüÈÅáÂà∞‰∫ÜÊ≤°RPÁöÑÊÉÖÂÜµÔºåËôΩÁÑ∂ËøôÂæàÁΩïËßÅÔºå‰ΩÜÊòØ‰∏çÂæó‰∏çËÆ©‰∫∫ÊÄùËÄÉÔºåÂõ†Ê≠§ÔºåÊúâÂ≠¶ËÄÖËÆ§‰∏∫ÔºöÂú®‰∏ÄÂÆöÊó∂Èó¥ÂíåÂÆ¢ËßÇÊù°‰ª∂‰∏ãÔºåRPÂÄº‰∏éËØ•‰∫∫ÂÅö‰∫ãÂéöÈÅìÁ®ãÂ∫¶‰πãÂíåÁöÑÊ≠£Âº¶ÂáΩÊï∞ÊúâÂÖ≥ÔºåÂõ†Ê≠§ÂëàÁé∞Âá∫ÂæàËÆ©‰∫∫Ë¥πËß£ÁöÑÊ≥¢Âä®ÊÄßÂõæË±°Ôºå‰ΩÜÊòØËøôÁßçÁêÜËÆ∫Âõ†‰∏∫Áº∫‰πèÂÆûÈ™åÊîØÊåÅÔºåÁõÆÂâçËøòÊ≤°ÊúâÂú®Â≠¶ÊúØÁïåÂç†È¢Ü‰∏ªÂØºÂú∞‰ΩçÔºå‰ΩÜÊòØÁ¨îËÄÖËÆ§‰∏∫ÔºåËøôÁßçÁêÜËÆ∫Â∫îËØ•Êõ¥Ë¥¥ËøëRPÂΩ¢ÊàêÊú∫ÁêÜÁöÑÁúüÂÆûÊÉÖÂÜµ„ÄÇÔºàÊúÄÊñ∞Á†îÁ©∂Ë°®ÊòéÔºåÊ≥¢Âä®Ê≠£ÊòØRPË∂ã‰∫éÂπ≥Ë°°ÁöÑÂøÖÁÑ∂ÁªìÊûúÔºåÁî±‰∫é‰∏Ä‰∏™‰∫∫ÁöÑRPÂ§™È´òÁöÑÊÉÖÂÜµ‰∏ãÔºåÂ§±ÂéªRPÁõ∏ÂØπÂÆπÊòìÔºåÊâÄ‰ª•‰ºö‰ªéÊ≥¢Â≥∞ÈÄêÊ∏êË∑åÂÖ•Ê≥¢Ë∞∑ÔºåÂèç‰πã‰∫¶ÁÑ∂Ôºâ(Ë°•ÂÖÖ:Âõ†‰∏∫RPÂíåÁé∞ÂÆû‰∏≠Áî±‰∫éÊ¶ÇÁéáÈóÆÈ¢òËÄåÂæóÂà∞ (ÊàñÊçüÂ§±)ÁöÑÂà©ÁõäÁõ∏ÂÖ≥Ôºå‰ªéËÄåÂØºËá¥RP‰ºöË∂ã‰∫éÂπ≥Ë°°Ôºå‰æãÂ¶Ç:„ÄäÂ°ûÁøÅÂ§±È©¨„ÄãÔºåÂÖ∂‰∏≠ÁöÑ‚ÄúÂ°ûÁøÅ‚ÄùÂ∞±ÊòØÂõ†‰∏∫Âà©ÁõäÂíåRP‰πãÈó¥Áõ∏ÂÖ≥ËøûÔºåÂØºËá¥Âá∫Áé∞‰∏ÄÁ¶è‰∏ÄÁ•∏ÁöÑÁé∞Ë±°ÔºåÁÆÄÂçïËØ¥Â∞±ÊòØÁ¢∞Âà∞Â•Ω‰∫ãÊÉÖRP‰ºö‰∏ãÈôçÔºåÁ¢∞Âùè‰∫ãÊÉÖRP‰ºö‰∏äÂçá) Âè¶Â§ñÔºåRPÁöÑÂΩ¢ÊàêÊòØÊúâÈò∂ÊÆµÊÄßÁöÑÔºå‰πüÂ∞±ÊòØËØ¥ÔºåÊúâÊó∂ÂÄôRPÁöÑÂèòÂåñÂπ∂‰∏çÊòØÁ´ãÁ´øËßÅÂΩ±ÁöÑÔºå‰ΩÜÊòØRPÂçáÈôçÂõ†Á¥†ÁöÑÁßØÁ¥ØÊòØ‰∏ç‰ºöÂÅúÊ≠¢ÁöÑÔºåÂú®Êüê‰∏™Êó∂ÊúüÂèØËÉΩË°®Áé∞Âú∞‰∏çÊòéÊòæÔºå‰ΩÜÊòØÂÆèËßÇ‰∏äÁöÑRPÁßØÁ¥ØÊòØ‰∏ÄÂÆöÁöÑÔºåËøô‰πüÂ∞±ÂΩ¢Êàê‰∫ÜRPÁöÑÊ≥¢Âä®ÊÄßÊîπÂèòÔºåÊâÄ‰ª•Â§ßÂÆ∂Âú®Êüê‰∏™RP‰ΩéËø∑ÁöÑÊó∂Êúü‰πü‰∏çÂ∫îËØ•ÂÅúÊ≠¢ÂØπRPÁöÑÁßØÁ¥Ø„ÄÇÔºàÂ∞±ÂÉèÂäõÊîπÂèòÁöÑ 3 RPÁöÑÂΩ±Âìç‰∏éÂà©Âºä ÊòØÂä†ÈÄüÂ∫¶ÔºåËÄå‰∏ç‰ºöÂØπÂΩìÂâçÁöÑÈÄüÂ∫¶ÊúâÁ´ãÁ´øËßÅÂΩ±ÁöÑÂΩ±ÂìçÔºå‰∏çËøáÈïøÊúüÁöÑÂΩ±ÂìçÊòØÊ∑±ËøúËÄåÊåÅ‰πÖÁöÑÔºâ Âè¶Â§ñÂÆ¢ËßÇ‰∏ñÁïåÊª°Ë∂≥‰∏Ä‰∏™Âü∫Êú¨ÂÆöÂæã‚Äî‚ÄîRPÂÆàË°°ÂÆöÂæãÔºåÂç≥RP‰∏ç‰ºöÂá≠Á©∫ÂàõÁîüÔºå‰πü‰∏ç‰ºöÂá≠Á©∫ÊπÆÁÅ≠ÔºåÂè™‰ºö‰ªé‰∏Ä‰∏™ÁîüÁâ©ËΩ¨ÁßªÂà∞Âè¶‰∏Ä‰∏™ÁîüÁâ©ÔºåÊàñËÄÖÁî±RPËΩ¨Êç¢‰∏∫Áé∞ÂÆû‰∏≠ÈÄöËøá‰∏çÁ°ÆÂÆöÂõ†Á¥†Ëé∑ÂæóÁöÑÂà©ÁõäÔºåRPËΩ¨ÁßªÂåÖÂê´‰ª•‰∏ãÂá†ÁßçÊñπÂºèÔºö Ëôê‰∏éË¢´Ëôê„ÄÇ Ê≥°MM‰∏éMMË¢´Ê≥°„ÄÇ Êç°Âà∞Èí±(‰ΩÜÊòØÊ≤°ÊúâËøò)Âíå‰∏¢Èí±(‰ΩÜÊòØÊ≤°ÊâæÂõûÊù•) ËøôÂá†Êù°ÈÉΩÂæàÂ•ΩÁêÜËß£ÔºåÊØîÂ¶ÇÔºåÊüê‰∫∫Áé©ÊòüÈôÖË¢´Âà´‰∫∫Ëôê‰∫ÜÔºåÊàñËÄÖ‰∏çÂ∞èÂøÉÊääÈí±‰∏¢‰∫ÜÔºåÈÇ£‰πà‰ªñÁöÑRP‰ºöÊúâ‰∏äÂçáÁöÑÂÄæÂêëÔºåÂè¶Â§ñÔºåÊä¢Âà´‰∫∫MMÁöÑ‰∫∫ÁöÑRP‰ºöÂºÇÂ∏∏ËøÖÈÄüÂú∞‰∏ãÈôçÔºåÊàñËÄÖÊç°Âà∞Âà´‰∫∫ÁöÑÈí±‰∏çËøò‰πü‰ºöÂØºËá¥RP‰∏ãÈôçÔºåÊâÄ‰ª•Â§ßÂÆ∂‰∏ÄÂÆöË¶ÅÂéöÈÅì„ÄÇ RPÁöÑÂΩ±Âìç‰∏éÂà©Âºä RPÁöÑ‰∏çÂà©ÂΩ±Âìç ÂØπ‰∫éRP‰∏çË∂≥Â∏¶Êù•ÁöÑ‰∏çÂà©ÂΩ±ÂìçÔºåÊÉ≥ÂøÖËØªËÄÖÂ∑≤ÁªèÊúâ‰∫Ü‰∏çÂ∞ë‰Ωì‰ºö‰∫ÜÔºå‰∏∫‰∫ÜÁ≥ªÁªü‰ªãÁªçÔºåËøôÈáåÂ∞Ü‰∏çÂà©ÂΩ±ÂìçÂàó‰∏æ‰∏Ä‰∫õ‰æãÂ≠êÂ¶Ç‰∏ãÔºö ËÄÉËØïÁàÜ0ÔºàËÄÉÊåÇÔºåÂèëÊå•Â§±Â∏∏Á≠âÔºâ Ê≥°MMÂ§±Ë¥•ÔºàË¢´Êó†ËßÜÔºåË¢´Êä¢Â§∫Á≠âÔºâ Ëá™Ë°åËΩ¶ËÉéË¢´ÊâéÔºàÊ±ΩËΩ¶ÔºåÁîµÁì∂ËΩ¶Ôºâ Áâ©ÂìÅÈ¢ëÁπÅÊçüÂùèÔºàÂ¶ÇT43Á≠âÔºâ ÊòüÈôÖË¢´ËôêÔºàËøûÁª≠Ë¢´ËôêÂæàÂ§öÂ±ÄÊ†πÊçÆÂè†Âä†ÂéüÂàôÂ∞Ü‰ºöÂá∫Áé∞Êõ¥Ê∑±ËøúÁöÑÂΩ±ÂìçÔºâ ËØØÊú∫ÔºàÂ†µËΩ¶ÔºåËø∑Ë∑ØÁ≠âÔºâ ‰ª•‰∏äÊØè‰∏ÄÊù°ËôΩÁÑ∂ÊòØRP‰∏çË∂≥Â∏¶Êù•ÁöÑ‰∏çÂà©ÂΩ±ÂìçÔºå‰ΩÜÊòØÂÆ¢ËßÇ‰∏äÂèàÂèØ‰ª•ÁßØÁ¥Ø RPÔºåËøô‰πüÊ≠£‰ΩìÁé∞‰∫ÜÂÆ¢ËßÇ‰∏ñÁïå‰∏éRPÁöÑËæ®ËØÅÂÖ≥Á≥ª„ÄÇ ‰ªéÂÆèËßÇ‰∏äËÆ≤Ôºå‰∏äËø∞‰∫ãÊÉÖ‰πüËÆ∏Âπ∂ÈùûÂÖ®ÊòØÂùè‰∫ãÔºåÂÉèÔºà3ÔºâÔºåÔºà4Ôºâ‰∏§Êù°Âú®Êâ©Â§ßÂÜÖÈúÄÔºåÂà∫ÊøÄÁªèÊµéÂ¢ûÈïøÊñπÈù¢‰πüÊòØÊúâÁßØÊûÅ‰ΩúÁî®ÁöÑÔºå‰ΩÜÊòØÊú¨ÊñáËÆ®ËÆ∫ÁöÑ‰∏ªËßÇËâ≤ÂΩ©ËæÉÈáçÔºåÂØπ‰∏Ä‰∫õËøá‰∫éYYÁöÑ‰∏úË•ø‰∏çÂÅöËÆ®ËÆ∫„ÄÇ ÂÖ≥‰∫éRPÂ∏¶Êù•ÁöÑÈ∫ªÁÉ¶ÁöÑËß£ÂÜ≥ÊñπÊ≥ïÔºåÂ≠¶ÊúØÁïå‰∏ÄÁõ¥‰∫âËÆ∫‰∏ç‰ºëÔºå‰ºÅÂõæËÆ§‰∏∫ÊîπÂèò RPÂèòÂåñË∂ãÂäøÁöÑÊÉ≥Ê≥ïÔºåÂ∑≤ÁªèË¢´ÂÆûË∑µËØÅÊòéÊòØNPCÔºåÊÉ≥È¢ÑÊµãRPÁöÑÂèëÂ±ïÊñπÂêëÔºå‰πüË¢´ËÆ∫ËØÅÊòØ‰∏çÂèØËß£ÈóÆÈ¢ò„ÄÇ 3 RPÁöÑÂΩ±Âìç‰∏éÂà©Âºä ÈÇ£‰πàÔºåÈù¢ÂØπRPÂ∏¶Êù•ÁöÑ‰∏çÂà©ÂΩ±ÂìçÔºåÊàë‰ª¨ÁúüÁöÑÂ∞±ÊùüÊâãÊó†Á≠ñ‰∫ÜÂêóÔºüÈùû‰πüÔºÅÊàë‰ª¨ÊúâËß£ÂÜ≥NPÁ±ªÈóÆÈ¢òÁöÑÊúâÂäõÊ≠¶Âô®ÔºöÊòüÈôÖÔºÅÔºÅÔºÅÔºÅ Âú®RP‰∏çÂ•ΩÁöÑÊó∂ÂÄôÔºåÂºÄHigh‚ÄîAIË∞É‰∏§ÂÆ∂Á•ûÊóèÔºåÈÅ≠ÁîµËÑëËôêÂá†ÁõòÔºåRPÊåáÊï∞Áõ∏‰ø°‰ºöÊúâÂæàÂ§ßÊ¶ÇÁéáË¶Å++ÁöÑÔºåËôΩÁÑ∂Ëøô‰ªçÁÑ∂ÊòØ‰∏™ÈÉ®ÂàÜÁÆóÊ≥ïÔºå‰ΩÜÊòØ‰∫ãÂÆûËØÅÊòéÊòØÂæàÊúâÊïàÁöÑÔºåÂ∑≤Áªè‰∏ç‰∫ö‰∫écqfÁöÑÔºàseiÔºâÊú∫Ë¥™ÂøÉ‰∫Ü‚Ä¶‚Ä¶(Ë°•ÂÖÖ:Ê†πÊçÆRPÂÆàÊÅíÂÆöÂæã‰∏≠‚ÄúÂè™‰ºö‰ªé‰∏Ä‰∏™‰∫∫Ë∫´‰∏äËΩ¨ÁßªÂà∞Âè¶‰∏Ä‰∏™‰∫∫Ë∫´‰∏ä‚ÄùÔºåÊ≠§ÊñπÊ≥ïÂèØËÉΩÊ≤°ÊúâÊïàÊûú)„ÄÇ Ê≠§Â§ñÔºåÂè¶ÊúâÊûÅÁ´Ø‰∫∫Â£´‰∏∫‰∫ÜÂπ≥Ë°°Ëá™Â∑±ÁöÑRPÔºåÂú®ÂÖ≥ÈîÆÊó∂ÂàªÂêëÂà´‰∫∫Ëµ†ÈÄÅ‰∫∫Ê∞ëÂ∏ÅÔºåËôΩÁÑ∂Ë¢´ËØÅÊòéÂÆûÈôÖÊïàÊûúÁîöÂæÆÔºå‰ΩÜÊòØÁî±‰∫éÊé•ÂèóÊñπ‰ºöÊçüÂ§±Â§ßÈáèRPÔºåÊâÄ‰ª•ËøôÁßçË°å‰∏∫‰πüË¢´ËÆ§‰∏∫ÊòØÊûÅÂ∫¶Âç±Èô©ÂíåËæπÁºòÁöÑ„ÄÇÂØπ‰∫éÊ≠§Êçü‰∫∫‰∏çÂà©Â∑±ÁöÑË°å‰∏∫ÔºåÂ∞Ü‰ºöÂú®‰ª•ÂêéÂØπËá™Â∑±ÁöÑRPËµ∞Âêë‰∫ßÁîü‰∏çÂà©ÂΩ±Âìç„ÄÇ‰ªéËá™Â∑±ÂíåÂà´‰∫∫ÈÇ£ÈáåÊµÅÂ§±Âá∫Êù•ÁöÑRPÔºåÂ∞±‰ºöÊµÅÂÖ•Á§æ‰ºöÔºåÁ≠âÂæÖ‰∏ã‰∏ÄÊ¨°ÂÜçÂàÜÈÖçÔºàÊ†πÊçÆÊ†áÈáèÂú∫ÁêÜËÆ∫ÔºåRPÈ´òËÄÖÂ∞ÜÂú®ÂÜçÂàÜÈÖç‰∏≠ËæÉ‰ΩéRPËÄÖÂæóÂà∞Êõ¥Â§öÁöÑRP)„ÄÇ Âè§Êó∂Âè¶ÊúâÂêÑÁßçËø∑‰ø°Ê¥ªÂä®Êù•Á•àÊ±ÇËé∑ÂæóRPÔºåÁªèËØÅÊòé‰∏Ä‰∫õË°å‰∏∫ÊòØÂçÅÂàÜÊúâÊïàÁöÑÔºå‰ΩÜÊòØÂ∞öÊ≤°Êúâ‰ªª‰ΩïÁßëÂ≠¶ÁêÜËÆ∫ÂèØ‰ª•‰ªñ‰ª¨ÁöÑÊàêÂäüÔºåÂÖ∂‰∏≠ÊúÄËëóÂêçÁöÑÂéÜÂè≤‰∫ã‰ª∂‰∏∫ËØ∏Ëëõ‰∫ÆÂÄü‰∏úÈ£éÔºåËøôÊòØ‰ª•Á•ûÁßòÁöÑÊ≥ï‰∫ãÊ¥ªÂä®Êù•Ëé∑ÂæóRPÊàêÂäüÁöÑÂÖ∏Âûã‰æãÂ≠êÔºå‰∏ç‰ΩÜËØ¥Êòé‰∫ÜÊàëÂõΩÁöÑRPÁ†îÁ©∂Âú®ÂæàÊó©ÁöÑÊó∂ÂÄôÂ∞±ÊúâÂºÄÂ±ïÔºåÂπ∂‰∏î‰ª£Ë°®‰∫ÜÂΩìÊó∂ÁöÑRPÂ≠¶ËØ¥Â∑≤ÁªèÂèëÂ±ïÂà∞Áõ∏ÂΩìÂÖàËøõÁöÑÈò∂ÊÆµÔºåÂêéÊù•Áî±‰∫éÊàò‰π±ÂíåÂéÜÂè≤ÂéüÂõ†ÔºåRPÂ≠¶ÈÄêÊ∏êÊ≤°ËêΩÂíåÊ∑°Âá∫ÂõΩ‰∫∫ÁöÑËßÜÈáéÔºåÂú®Ëøë‰ª£ÊâçÂèàË¢´ÈáçÊñ∞ÊèêÂá∫ÂíåÂä†‰ª•Á†îÁ©∂Ôºå‰ΩÜÊÉ≥ÊÅ¢Â§çÂΩìÂπ¥ÁöÑÊ∞¥Âπ≥Ëøò‰ªªÈáçËÄåÈÅìËøú„ÄÇ RPÁöÑÊúâÂà©ÂΩ±Âìç ÂØπ‰∫éÂ∏åÊúõÂà©Áî®RP‰ª•ËøΩÊ±ÇÊõ¥È´òÂìÅË¥®ÁîüÊ¥ªÁöÑËØªËÄÖÊù•ËØ¥ÔºåRPÁöÑÊúâÂà©ÂΩ±Âìç‰πüÊòØÂ∫îËØ•‰∫ÜËß£ÁöÑÈáçË¶ÅÈóÆÈ¢ò‰πã‰∏Ä„ÄÇÂÖ≥‰∫éRPÁöÑÊúâÂà©ÂΩ±ÂìçÔºåÂØπ‰∫éÂ§ßÈÉ®ÂàÜÊú¨‰∫∫ËØªËÄÖÊù•ËØ¥Ôºå‰∏çÂ§ñ‰πé‰∏ãÈù¢‰∏§‰∏™ÊñπÈù¢Ôºö ËÄÉËØïËé∑ÂæóÁêÜÊÉ≥ÁöÑÂàÜÊï∞ Ê≥°MMËé∑ÂæóÈò∂ÊÆµÊÄßÊàêÊûú ÊÄªÁªìËµ∑Êù•‰æøÊòØÂ∑•‰ΩúÊñπÈù¢ÂíåÁîüÊ¥ªÊñπÈù¢Ôºå‰ªé‰∏≠ÂèØ‰ª•ÁúãÂá∫ÔºåRPÂØπ‰∫éÁîü‰∫ßÁîüÊ¥ªÁöÑÂêÑ‰∏™ÊñπÈù¢Â¶ÇÊûúÂêàÁêÜÂä†‰ª•Âà©Áî®ÈÉΩÂèØ‰ª•ËææÂà∞Áõ∏ÂΩìÂ§ßÁöÑÊúâÂà©ÊïàÊûú„ÄÇÊâÄ‰ª•Ôºå‚ÄúÂ§©‰∏ã‰πãÂ§ßÔºå‰∫∫ÂìÅÁã¨Â∞ä‚ÄùÔºåËã•Â≠òÂú®‰∏ÄÁßçÊñπÂºèÔºåÂèØ‰ª•ËÆ©‰∏Ä‰∏™‰∫∫ÈïøÊúü‰øùÊúâÁõ∏ÂΩìÈáèÁöÑ RPÔºåÈÇ£‰πàÊ≠§‰∫∫‰æøÂèØ‰ª•Áã¨Ê≠•Â§©‰∏ãÔºåÊó†‰∫∫ËÉΩÂΩìÔºåË∂≥‰ª•ÂèØËßÅRPÁöÑÂ®ÅÂäõ„ÄÇÔºà‰πüÊúâÂ≠¶ËÄÖËÆ§‰∏∫Êú¨ÊÉÖÂÜµÊòØ‰∏çÂèØËÉΩÊàê‰∏∫Áé∞ÂÆûÁöÑÔºå‰∏çËøáÂπ∂Ê≤°ÊúâÂêàÁêÜÁöÑËØÅÊòéÔºâ‰∏çËøáÂÖ≥‰∫éÈ´ò RPÁã¨Ê≠•Â§©‰∏ãÁöÑ‰æãÂ≠êÔºåÁ¨îËÄÖÂÆûÂú®Èöæ‰ª•Ëé∑ÂæóÔºåËøô‰πü‰ªé‰æßÈù¢ÂèçÊò†‰∫ÜRPÊòìÂ§±ÈöæËé∑ÁöÑÊÄßË¥®Ôºå‰ªéËÄåËØ¥Êòé‰∫ÜÂ§ßËá™ÁÑ∂Ë∂ã‰∫éÂπ≥Ë°°ÁöÑÂÖ∏ÂûãÁâπÂæÅ„ÄÇ Â∞èÁªìRPÁöÑÂà©Âºä ÔºàÊú™ÂÆåÂæÖÁª≠Ôºâ 4 RPÁöÑ‰º∞Êµã‰∏éËØÑ‰ª∑ RPÁöÑ‰º∞Êµã‰∏éËØÑ‰ª∑ Êàë‰ª¨ÁîüÊ¥ªÁöÑÁéØÂ¢ÉÊòØÂ≠òÂú®ÁùÄRPÂú∫(Êú¨‰∫∫ËÆ§‰∏∫Ôºå‰∏çÂêåÊó∂Èó¥ÊùüÂàÜÊîØÊâÄÂê´‰∏ªËßÇRP ‰∏çÂêåÔºåÊâÄ‰ª•Á©øË∂ä‰ºöËé∑ÂæóÂ§ßÈáèRP)ÔºåÂ∞±Ë±°Êàë‰ª¨ÁîüÊ¥ªÂú®Á£ÅÂú∫‰∏≠‰∏ÄÊ†∑„ÄÇÊØè‰∏™‰∫∫ÈÉΩÂ≠òÂú®ÁùÄ‰∏ÄÂÆöÁöÑRPÂäøËÉΩÔºåËÆ∞‰ΩúErp„ÄÇÂÆÉÊâÄÈÅµÂæ™ÁöÑÂÆöÂæãËßÅ‚ÄúRPÁöÑÂèòÂåñ‰∏éÊìçÁ∫µ‚Äù„ÄÇRP ÁöÑÊú¨Ë¥®ÊòØ‰∏ÄÁßç‰∫∫‰∏∫ËÆæÊÉ≥ÁöÑËÉΩÈáèÂΩ¢ÂºèÔºåÁî®Êù•ÊèèËø∞‰∏Ä‰∏™‰∫∫ÁöÑLUCKYÂÄº„ÄÇ RPÁöÑÂçï‰ΩçÁ≥ªÁªü ÔºàÊú™ÂÆåÂæÖÁª≠Ôºâ RPÁöÑ‰º∞ÊµãÊñπÊ≥ï ErpÁöÑÂèòÂåñÈáèÂ§ßÂ∞èŒîErp = |w‚àíPf|+1ÔºàwË°®Á§∫ÊúüÂæÖ‰∫ã‰ª∂ÂèëÁîüÁöÑÊ¨°Êï∞ÔºåÂ¶ÇÊûú‰∏çÊÉ≥ÂÆÉÂèëÁîü‰∏ÄÊ¨°ÈÇ£‰πàw=‚àí1ÔºåfÊòØ‰∫ã‰ª∂ÁöÑÈ¢ëÁéáÔºåPÊòØ‰∫ã‰ª∂ÁöÑÊ¶ÇÁéáÔºâ Ê≠§ÂÖ¨ÂºèÂèØÁî®Êù•ËÆ°ÁÆóÁû¨Èó¥ËΩ¨ÁßªÁöÑRPÂÄºÔºå‰æãÂ¶ÇÔºö‰∏Ä‰∏™‰∫∫‰∏≠‰∫Ü500WÔºå‰∏≠Â•ñÁöÑÊ¶ÇÁéáÊòØ1/1000000ÔºåÊÉ≥Ëøô‰∏ÄÊ¨°‰∏≠Â•ñÔºåÈÇ£‰πàÔºåŒîErp = 1000000Ôºå‰πüÂ∞±ÊòØËØ¥Ôºå‰ªñÁû¨Èó¥ÊçüÂ§±‰∫ÜËøô‰πàÂ§öRPÂäøËÉΩ„ÄÇÂ¶ÇÊûú‰Ω†‰∏çÂéªÊÉ≥ÔºåÂç≥w = 0ÔºåÈÇ£‰πàÂ∞Ü‰ºöÊçüÂ§±Êõ¥Â§öRPÔºàÂèØ‰ª•Ëøô‰πàÁêÜËß£Ôºå‰Ω†Êó†ÊâÄË∞ìÁöÑ‰∫ãÊÉÖÈÉΩÂèëÁîü‰∫ÜÔºåÈÇ£‰Ω†ËÇØÂÆöË¶ÅÂ§öÊçüÂ§±ÁÇπ RPÂï¶Ôºâ„ÄÇÂÜç‰æãÂ¶ÇÔºöÂ∏ÆËÄÅÂ•∂Â•∂ËøáË°óÔºåÂõ†‰∏∫Á¢∞Âà∞ËøôÊ†∑ÁöÑÊÉÖÂÜµÊ¶ÇÁéá‰∏çÂ§ßÔºà‰πüÂ∞±ÊòØËØ¥Êú∫‰ºöÈöæÂæóÂïäÔºåÂ¶ÇÊûúÊòØ‰∏ÄËà¨ÁöÑËÆ©Â∫ß‰º∞ËÆ°Â∞±Ê≤°Ëøô‰πàÂ§öRPËµö‰∫ÜÔºâÔºåÊâÄ‰ª•ÂæóÂà∞ ÁöÑErp‰πüÂ∞±Â§ßÂíØ„ÄÇ ‰∏Ä‰∏™‰∫∫ÁöÑRPÂäøËÉΩÂæà‰ΩéÔºåÂπ∂‰∏ç‰ª£Ë°®RPËÉΩÈáèÂ∞±‰ºöÂêë‰ªñÊµÅÂä®ÔºåÂõ†‰∏∫Ëøô‰∫õËÉΩÈáèËøòÂèóÂà∞Âë®Ëæπ‰∫∫„ÄÅÁâ©ÁöÑRPÂºïÂäõÂà∂Á∫¶„ÄÇÂè™ËÉΩËØ¥ÔºåRP‰ΩéÁöÑ‰∫∫Âú®ÂêåÁ≠âÊù°‰ª∂‰∏ãÊõ¥ÂÆπÊòìÊé•ÂèóRPËÉΩÈáèÔºå‰ªéËÄåÂçáÈ´òRPÂäøËÉΩÔºõRPÂäøËÉΩÈ´òÂÆπÊòìÂ§±ÂéªRPÔºàÂ§öÊï∞‰ª•Êó†Áî®ÁöÑÂΩ¢ÂºèÊµÅÂêëÂ§ßËá™ÁÑ∂ÔºåÂõ†‰∏∫ËøôÊòØÂøÖÁÑ∂‰∫ã‰ª∂ÔºåÈÇ£‰πàÔºâÔºå‰∏∫‰∫ÜÁª¥ÊåÅËæÉÈ´òÁöÑRPÂäøÔºåÊàë‰ª¨Â∞±Ë¶Å‰∏çÊñ≠ÁöÑË°•ÂÖÖ„ÄÇ‰ΩÜÊòØRPÂäøËÉΩÈ´òÔºåÂπ∂‰∏ç‰ª£Ë°®Â∞±‰ºöÊúâ‰Ω†ËØ¥ÊúüÂæÖÁöÑÂ•Ω‰∫ãÂèëÁîüÔºåÊúâÂèØËÉΩËøô‰∫õRP‰ª•ÂÖ∂‰ªñ‰Ω†ÊâÄ‰∏çÊúüÂæÖÁöÑÂΩ¢ÂºèÈáäÊîæ‰∫ÜÔºåÊàë‰ª¨Áß∞‰Ωú‰∏∫RP‰∫èÊçüÔºåËøôÂ∞±ÂèñÂÜ≥‰∫é‰Ω†ÁöÑRPÂà©Áî®Áéá‰∫Ü„ÄÇÊâÄ‰ª•ÔºåÊàë‰ª¨Âú®Ê±≤ÂèñRPÁöÑÂêåÊó∂ÔºåËøòË¶ÅÈîªÁÇºÊàë‰ª¨ÁöÑRPÂà©Áî®Áéá„ÄÇ ËøôÈáåË¶ÅËØ¥‰∏Ä‰∏™Ëá™ÁÑ∂ÊçüÂ§±ÔºåÂõ†‰∏∫ËøôÊòØÂøÖÁÑ∂‰∫ã‰ª∂ÔºåÊâÄ‰ª•P =1ÔºåÈÇ£‰πàRPÁöÑÊçüÂ§±ÈáèÂ∞±Áõ¥Êé•Âíå‰Ω†ÁöÑwÂÄºÊúâÂÖ≥‰∫ÜÔºå‰πüÂ∞±ÊòØÔºåÂ¶ÇÊûú‰Ω†Ê≠£Á°ÆËÆ§ËØÜ‰∫ÜËøôÁßçÂøÖÁÑ∂ÊÄßÔºå‰Ω†ÁöÑRPÂè™‰ºöÊçüÂ§±1ÔºåÂ¶ÇÊûú‰Ω†ÈùûÂ∏∏‰∏çÊÉ≥ËÆ©ÂÆÉÊçüÂ§±ÈÇ£‰πà‰Ω†Â∞ÜÊçüÂ§±Êõ¥Â§öÁöÑRPËÉΩÈáèÔºåÊâÄ‰ª•ÔºåË∞ÉÊï¥ÂøÉÊÄÅÊòØÂæàÈáçË¶ÅÁöÑÂïäÔΩûÔºÅ RPÁöÑÂèòÂåñ‰∏éÊìçÊéß RPÁöÑÂá†Â§ßÂÆöÂæã RPÁ¨¨‰∏ÄÂÆöÂæã Law 1 RPÊòØÂÆàÊÅíÁöÑÔºåÂÆÉÊó¢‰∏ç‰ºöÂá≠Á©∫‰∫ßÁîüÔºå‰πü‰∏ç‰ºöÂá≠Á©∫Ê∂àÂ§± Âç≥‰∫∫ÂìÅÂÆàÊÅíÂÆöÂæãÔºåÂú®‰ªª‰ΩïËøáÁ®ã‰∏≠ÔºåÂÆáÂÆô‰∏≠‰∫∫ÂìÅÊÄªÈáè‰øùÊåÅ‰∏∫Â∏∏Êï∞„ÄÇÔºà‰πüÂ∞±ÊòØËØ¥ÔºåÂÅöÂ•Ω‰∫ãÂ¢ûÂä†‰∫∫ÂìÅÂÅöÂùè‰∫ãÊçü‰∫∫ÂìÅÔºåÈÅáÂà∞Â•Ω‰∫ãÊòØ‰ª•ÂâçÁßØÊîíÁöÑ‰∫∫ÂìÅËµ∑‰∫Ü‰ΩúÁî®ÔºåËÄåË¶Å‰Ωø‰Ω†ËøûËá™Â∑±Á≥ªÂºÄÁöÑÂøÖ‰øÆËØæÈÉΩÊ≤°ÈÄâ‰∏äÔºåÈÇ£‰Ω†ÁúüÁöÑË¶ÅÂ§öÊâ∂Êâ∂ËÄÅÂ•∂Â•∂ËøáÈ©¨Ë∑Ø‰∫ÜÔºâ ÂÆáÂÆôÂàõÁîü‰πãÂàùÔºå‰∏éÂêÑÂ§ßÂü∫Êú¨Á≤íÂ≠êÂêåÊó∂Áî±ÁàÜÁÇ∏Âü∫ÁÇπÁîüÊàêÁöÑ‰∏ÄÂ§ßÊöóÁâ©Ë¥®ÁßçÁ±ªÂ∞±ÊòØRP„ÄÇÁªèËøáÁ¨îËÄÖÁöÑÂ§öÂπ¥Êé¢Á©∂ÂíåÊó†Êï∞ÂÆûÈ™åÔºåÈÖçÂêà‰∏éÂè≤ËíÇËä¨¬∑ÈúçÈáëÁöÑÁêÜËÆ∫Á†îÁ©∂Âêà‰ΩúÔºåÂ∑≤ÁªèÂü∫Êú¨‰ªéÁêÜËÆ∫È´òÂ∫¶ËØÅÊòé‰∫ÜRPÁ¨¨‰∏ÄÂÆöÂæãÔºå‰πüÁß∞‰∏∫‚ÄúRPÂÆàÊÅíÂÆöÂæã‚Äù„ÄÇ Ëøô‰∏ÄÂÆöÁêÜÁöÑÁêÜËß£ÂæÄÂæÄ‰∏çÂÉèÁâ©ÁêÜÂ≠¶‰∏≠ÁöÑ‚ÄúÁÉ≠ÂäõÂ≠¶Á¨¨‰∏ÄÂÆöÂæã‚ÄùÈÇ£Ê†∑Â•ΩÁêÜËß£ÔºåÂõ†‰∏∫Âú®ÂÆûÈôÖÁîü‰∫ßÁîüÊ¥ªÂÆûË∑µ‰∏≠ÔºåÂæÄÂæÄ‰ºöÂèëÁé∞Êüê‰∫∫ÁöÑRPÂ§ßÈáèÂáèÂ∞ëÔºå‰ΩÜÊòØÂπ∂Ê≤°ÊúâÂèëÁé∞Êüê‰∫∫ÁöÑRPÊúâÊòéÊòæÁöÑÊèêÂçáÔºåÊâÄ‰ª•‰πüÂØºËá¥Âú®ÂæàÈïø‰∏ÄÊÆµÊó∂Èó¥ÂÜÖÂ§ßÈáèÁ†îÁ©∂‰∫∫ÂëòË¥®ÁñëRPÂÆàÊÅíÂÆöÂæãÁöÑÊ≠£Á°ÆÊÄß„ÄÇËøõ‰∏ÄÊ≠•Á†îÁ©∂ÂèëÁé∞ÔºåRPÁöÑÂ≠òÂú®ÂíåÂÆàÊÅíÊòØÁ°ÆÂÆöÁöÑÂè™ÊòØÁî±‰∫éÁªùÂ§ßÂ§öÊï∞RPÂæÄÂæÄÂ≠òÂú®‰∫éÁîüÁâ©‰Ωì‰πãÂ§ñËÄå‰ª•‚ÄúËá™Áî±RP‚ÄùÁöÑÂΩ¢ÂºèÊ∏∏Á¶ª‰∫éÂÆáÂÆôÁ©∫Èó¥ÔºåÊâÄ‰ª•Ôºå‰ª•‰∏äÈÇ£ÁßçÊÉÖÂÜµ‰ªÖ‰ªÖË°®ÊòéÊüê‰∫∫ÁöÑRPÁî±‰∫éËá™Ë∫´ÂéüÂõ†Êï£‰Ωö‰∫éÂÆáÂÆôÁ©∫Èó¥ÔºåÂç¥Ê≤°Êúâ‰∫∫‰ªéÁ©∫Èó¥‰∏≠Ê±≤ÂèñRPÔºå‰ªéËÄåÂØºËá¥ÊúâÊïàRPÂáèÂ∞ëÔºå‰πüÂ∞±ÊòØÂèëÊå•‰ΩúÁî®ÁöÑRPÂáèÂ∞ë‰∫ÜÔºå‰ΩÜÂπ∂Ê≤°ÊúâÂΩ±ÂìçRPÊú¨Ë∫´ÁöÑÂÆàÊÅí„ÄÇ (Ë°•ÂÖÖÔºöÊåâÁÖßËØ•ËØ¥Ê≥ïÔºåÂèØ‰ª•ÂæóÁü•ÔºåÂΩì‰∏Ä‰∏™‰∫∫Âá∫ÁîüÊó∂ÔºåÂÖ∂RPÊòØ‰ªé‰ªñÊâÄÂú®ÁöÑÁ©∫Èó¥Âë®Âõ¥ÁöÑ‚ÄúËá™Áî±RP‚Äù‰∏≠Ê±≤ÂèñÁöÑÔºåËÄå‰ªéÊØç‰Ωì‰∏≠Ëé∑ÂæóÁöÑRPËæÉÂ∞ëÔºå‰ΩÜÊòØÂ¶ÇÊûúÂë®Âõ¥ÁöÑ‚ÄúËá™Áî±RP‚ÄùÊûÅÂ∫¶Áº∫‰πèÔºåÈÇ£‰πàÂè™ÊúâÂèØËÉΩ‰ªéÊØç‰Ωì‰∏≠Ëé∑ÂèñÔºå‰∫éÊòØÂ∞±Âá∫Áé∞‰∫ÜÈöæ‰∫ßÁöÑÊÉÖÂÜµ) RPÁ¨¨‰∫åÂÆöÂæã Law 2 RP‰∏çÂèØËÉΩ‰ªé‰ΩéRPÁâ©‰Ωì‰º†ÂêëÈ´òRPÁâ©‰ΩìËÄå‰∏çÂºïËµ∑ÂÖ∂‰ªñÂèòÂåñ ‰ΩÜÁî±‰∫éRPÁöÑ‰∏çÁ°ÆÂÆöÊÄßÔºåRPÂèØ‰ª•‰ªéRPÁöÑÊï∞Â≠¶ÊúüÊúõ‰ΩéÁöÑÁâ©‰Ωì‰º†ÂêëÈ´òRPÊï∞Â≠¶ÊúüÊúõÁâ©‰ΩìÔºåËøô‰∏éÁ¨¨‰∫åÂÆöÂæã‰∏çÁüõÁõæ„ÄÇ (‰æãÂ¶Ç:ÈÄöËøáRPÂà∞Áé∞ÂÆûÂà©ÁõäÁöÑËΩ¨ÂåñÂÜçÁî±Áé∞ÂÆûÂà©ÁõäËΩ¨Âåñ‰∏∫RPÁöÑËøáÁ®ã) ‰ªéËØ•ÂÆöÂæãÂèØ‰ª•Êé®ÂØºÂá∫Ôºö Inference 1 (‰∫∫ÂìÅËΩ¨ÁßªÂÆöÂæã) ‰∫∫ÂìÅÊòØÂèØ‰ª•Áõ∏‰∫íËΩ¨ÁßªÁöÑÔºå‰ΩÜËøôÁßçËΩ¨ÁßªÂøÖÈ°ªÈÄöËøáÂøÖË¶ÅÁöÑÊâãÊÆµÔºåË≠¨Â¶ÇÁÉßÈ¶ôÔºåÁ•àÁ•∑ÔºåËØÖÂííÁ≠âÔºå‰ª•ÂèäÁõ∏Â∫îÁöÑÂ™í‰ªãÔºåË≠¨Â¶ÇÈÅ≠ÈÅáÈ´òÂÉßÊàñËÄÖË∂ÖÁ∫ßÈúâ‰∫∫„ÄÇ RPÁ¨¨‰∏âÂÆöÂæã Law 3 ÂΩì‰∏Ä‰∏™‰∫∫ÁöÑRPÊó†ÈôêÂáèÂ∞èÊó∂ÂÖ∂ÁîüÂëΩÂäõË∂ãËøë‰∫éÈõ∂Ôºå‰∫¶Âç≥‰ªª‰Ωï‰∏Ä‰∏™Ê¥ª‰ΩìÁîüÁâ©ÁöÑRPÂùá‰∏ç‰∏∫Èõ∂„ÄÇ ÔºàÊàñÔºöÂØπÂ§ßÈáèÁöÑ‰∫ãÂÆûÁöÑÂàÜÊûêË°®ÊòéÔºåÁªùÂØπ‰∏çÂèØËÉΩÊ≤°ÊúâRP„ÄÇÔºâÊ≠§ÂÆöÂæãËøòÊúâÂ¶Ç‰∏ãË°®Ëø∞Ôºö ‰∏çËÉΩÁî®ÊúâÈôêÁöÑÊ≠•È™§‰Ωø‰∏Ä‰∏™‰∫∫ÁöÑ‰∫∫ÂìÅÂÆåÂÖ®Ê∂àËÄó„ÄÇÔºà‰πüÂ∞±ÊòØËØ¥Ôºå‰Ω†ÂÜçÊÄé‰πàÈúâÔºå‰πüËøòÊòØ‰ºöÊúâÁÇπ‰∫∫ÂìÅÂ≠òÈáèÁöÑÔºåÊâÄ‰ª•Ê∞∏Ëøú‰∏çË¶ÅÁÅ∞ÂøÉ‰∏ßÊ∞î„ÄÇÔºâËØ∑Â§ßÂÆ∂Áúã‰∏Ä‰∏™ËåÉ‰æãÔºö„ÄåÂ°ûÁøÅÁöÑÈ©¨‰∏¢‰∫ÜÔºå‰ªñËØ¥‚ÄúÊ≤°‰∫ãÔºåÊîí‰∫∫ÂìÅ‚ÄùÔºåÂΩì‰ªñ‰∏¢Â§±ÁöÑÈ©¨Â∏¶ÂõûÊù•‰∏ÄÁæ§È©¨ÔºåÂà´‰∫∫Áæ°ÊÖï‰∏çÂ∑≤Ôºå‰ªñÂàôÊöóÂèπ‚Äú‰∏çÂ¶ôÔºå‰∫∫ÂìÅÊ∂àËÄóÁöÑÂ§™Â§ö‚ÄùÔºåÊûúÁÑ∂‰ªñÁöÑÂÑøÂ≠êÂõ†‰∏∫È™ëÈ©¨ËÄåÊëîÊñ≠‰∫ÜËÖøÂêéÔºå‰ªñÊëáÊëáÂ§¥ËØ¥ ‚ÄúÁªßÁª≠Êîí‰∫∫ÂìÅ‚ÄùÔºåÁ≠âÂà∞Êàò‰∫âÊó∂Âà´‰∫∫ÂÆ∂ÁöÑÂ≠©Â≠êË¢´ÂæÅÂÖµÊàòÊ≠ªÊ≤ôÂú∫ÔºåÂè™Êúâ‰ªñÁöÑÂÑøÂ≠êÂõ†‰∏∫ËÖøÊñ≠‰∫ÜËÄåÂπ∏ÂÖçÔºåËøôÊó∂‰ªñÊøÄÂä®Âú∞ËØ¥‚Äú‰∫∫ÂìÅÁàÜÂèë‰∫ÜÂïä‚Äù‚Ä¶‚Ä¶„Äç RPÁ¨¨ÂõõÂÆöÂæã Law 4 Â¶ÇÊûú‰∏§‰∏™‰∫∫‰∏≠ÊØè‰∏Ä‰∏™‰∫∫ÁöÑRPÂÄºÂùá‰∏éÁ¨¨‰∏â‰∏™‰∫∫Áõ∏ÂêåÔºåÈÇ£‰πàÂ•πÊàñ‰ªñÊàñÂÆÉ‰ª¨ÂΩºÊ≠§‰πüÂøÖÊúâRPÂÄºÁõ∏Á≠â[ËÑöÊ≥®]„ÄÇ RPÊÉØÊÄßÂÆöÂæã Law 5 RPÂ≠òÂú®ÊÉØÊÄßÔºåÂç≥ÊèêÂçáÊàñÊ∂àËÄóRPÁöÑ‰∫ã‰ª∂ÊúâËøûÁª≠ÂèëÁîüÁöÑË∂ãÂäø„ÄÇ RPÊÉØÊÄßÂ≠¶‰πüËá™Âè§Â∞±Êúâ„ÄÇ‚ÄúÁ•∏‰∏çÂçïË°å‚ÄùÂíå‚ÄúÂèåÂñú‰∏¥Èó®‚ÄùÂ∞±ÊòØÂÖ∏Âûã‰ª£Ë°®„ÄÇ‰∏çËøáÂÆÉÂç¥‰∏ÄÁõ¥‰ª•Êù•È•±ÂèóÊâπÂà§Ôºå‚ÄúÁ¶èÊó†ÂèåËá≥‚ÄùÁõ¥Êé•ÊääËøô‰∏™ÁêÜËÆ∫Êé®Âà∞‰∫ÜÊÇ¨Â¥ñËæπ‰∏ä„ÄÇ‰ΩÜÂ¶Ç‰ªäÈöèÁùÄ‰∫∫Á±ª‰∫§ÊµÅÁöÑÊó•Ê∏êÂ¢ûÂ§öÔºåÊÉØÊÄßRPÁ≤íÂ≠êÁªèÂ∏∏Ë¢´Êä•ÈÅìÔºöËØ∏Â¶ÇÊüêXÊíûÁãóÂ±éËøê‰∏≠‰∫Ü500w‰πãÂêéÂèàÂú®ËÇ°Â∏ÇÂ§ßÊúâÊñ©Ëé∑ÔºõÊàñËÄÖÊüêÂ§ßË°∞ÂàöÁ¢∞‰∏äËΩ¶Á•∏È©¨‰∏äË¢´Â•≥ÂèãÁî©Êéâ„ÄÇ‰∫∫‰ª¨‰∏çÂæó‰∏çÊ≠£ËßÜRPÂ≠òÂú®ÊÉØÊÄßËøô‰∏Ä‰∫ãÂÆû„ÄÇ RPÁªüËÆ°ÂÆöÂæã Law 6 ÂØπ‰∫é‰∏™‰Ωì‰∫ã‰ª∂Ôºå‰∫∫ÂìÅÊòØÊûÅ‰∏çÁ°ÆÂÆöÁöÑÔºåÊàñ‰∏çÂèØÈáèÂ∫¶ÁöÑÔºõÁÑ∂ËÄåÂØπ‰∫éÂ§ßÈáèÁöÑ‰∫ã‰ª∂ËÄåË®ÄÔºå‰∫∫ÂìÅ‰ºö‰ΩìÁé∞‰∏ÄÂÆöÁöÑÁªüËÆ°ËßÑÂæã„ÄÇ ËÄåÁé∞Âú®ÁöÑ‰∫∫ÂìÅÂ≠¶ÂÆ∂‰ª¨Âú®‰∫∫ÂìÅÂ≠¶ÁêÜËÆ∫ÁöÑÂæÆËßÇÁ†îÁ©∂‰∏äÂ∑≤ÂèñÂæó‰∫ÜÈù©ÂëΩÊÄßÁ™ÅÁ†¥ÔºåÂú®ÈáèÂ≠êÂäõÂ≠¶„ÄÅÂ§ß‰∏ÄÁªüËÆ∫„ÄÅË∂ÖÂº¶ÁêÜËÆ∫Â§ßÊóóÂè∑Âè¨‰∏ãÁöÑ‰ªäÂ§©ÔºåËÆ©Êàë‰ª¨‰∏ÄËµ∑Ëµ∞ËøõÈáèÂ≠ê‰∫∫ÂìÅÂ≠¶ÔºàQuantum CharactericsÔºâÁöÑÊñ∞Á∫™ÂÖÉÔºÅ Âü∫Êï∞‰∫∫ÂìÅËÆ∫ ÂØºËÆ∫Ôºö‰∫∫ÂìÅ‰Ωú‰∏∫‰∏ÄËà¨Á≠â‰ª∑Áâ©Ôºå‰∏∫Êª°Ë∂≥Êó•Â∏∏ÈúÄË¶ÅÔºåÈúÄÊäïÂÖ•‰∏ÄÂÆöÁöÑ‰∫∫ÂìÅÔºå‰ª•ÊäïÂÖ•‰∫∫ÂìÅ‰∏éËé∑ÂæóÁöÑÊïàÁî®ÁöÑÊï∞ÊçÆÊûÑÂª∫ÂõæÂÉèÔºåÂèØ‰ª•ÂæóÂà∞Âü∫Êï∞‰∫∫ÂìÅËÆ∫(cardinal characterics)ÁöÑËæπÈôÖ‰∫∫ÂìÅ-ÊïàÁî®Âõæ„ÄÇÂêéÊù•ÔºåÊúâÂ≠¶ËÄÖÊèêÂá∫‰∫∫ÂìÅ‰∏çÂèØÊµãÈáèÔºåÂè™ÂèØÊØîËæÉÔºåÁî±Ê≠§ÂèëÂ±ï‰∫ÜÂ∫èÊï∞‰∫∫ÂìÅËÆ∫(ordinal characterics)ÔºåÁõÆÂâçÊØîËæÉÊàêÁÜüÂÆåÂñÑÁöÑÊòØÂü∫Êï∞‰∫∫ÂìÅËÆ∫„ÄÇ Âü∫Êï∞‰∫∫ÂìÅËÆ∫ÁöÑ‰∏Ä‰∫õËßÇÁÇπÔºö ‰∏∫ÊèêÈ´ò‰∫´ÂèóÔºåÈúÄ‰∏çÊñ≠ËøΩÂä†‰∫∫ÂìÅÊ∂àËÄóÔºåËÄå‰∫´ÂèóÁöÑÊèêÈ´òÂõ†ÈöèËøΩÂä†‰∫∫ÂìÅÁöÑÂ¢ûÂä†ËÄåÈÄíÂáèÔºå‰∫´ÂèóÊèêÈ´ò‰∏∫Èõ∂Êó∂ÔºåÊäïÂÖ•‰∫∫ÂìÅÂ∞±Â∫îÂÅúÊ≠¢ÔºåÂ¶ÇÂÜçÂ¢ûÂä†ÔºåÂàôÊàê‰∏∫Ë¥üÊï∞„ÄÇÂç≥‚Äú‰∫∫ÂìÅÊïàÁéáÈÄíÂáèÂÆöÂæã‚Äù„ÄÇË°®ËææÂºèÔºödRPdU &lt;0 ‰∫∫ÂìÅÁ≠âÂàÜÈÖçÂÆöÂæãÔºöÂΩìÈù¢‰∏¥Â§öÁßçÊ∂àËÄó‰∫∫ÂìÅÁöÑÊ¥ªÂä®Êó∂ÔºåÂ∫î‰ΩøÂæóËä±Ë¥πÂú®ÊâÄÊúâÊ¥ªÂä®ÁöÑÊúÄÂêé‰∏ÄÂçï‰Ωç‰∫∫ÂìÅËæπÈôÖÊïàÁî®Áõ∏Á≠â„ÄÇËøôÊ†∑ËÉΩÂ∞ÜÁªôÂÆöÁöÑ‰∫∫ÂìÅËΩ¨ÂåñÂá∫ÊúÄ Â§ßÊïàÁî®„ÄÇË°®ËææÂºèÔºö dUk = dRPdU((kk+1)+1)Ôºåk‚ààN„ÄÇ dRPk Âú®ÂéüÊúâ‰∫∫ÂìÅÊ∂àË¥πÂ∑≤Êª°Ë∂≥ÁöÑÂâçÊèê‰∏ãÔºåË¶ÅÊÉ≥Áî®‰∫∫ÂìÅÊç¢ÂèñÊõ¥Â§öÁöÑÂ•ΩÂ§ÑÔºåÂè™ÊúâÂèëÂ±ïÊñ∞‰∫∫ÂìÅÊ∂àË¥πÈ°πÁõÆÂíåÊâ©ÂÖÖÂéüÊúâ‰∫∫ÂìÅÊ∂àË¥πÈ°πÁõÆ„ÄÇ ËßÑÊ®°‰∫∫ÂìÅ Ê∂àË¥π‰∫∫ÂìÅÁöÑÊ¥ªÂä®ÔºåÂøÖÈ°ªÊ†πÊçÆÂÆÉÁöÑÁâπÁÇπÔºåÁ°ÆÁ´ã‰∏Ä‰∏™Ëµ∑Âßã‰∫∫ÂìÅÊäïÂÖ•ËßÑÊ®°/ÊúÄÂ∞è‰∫∫ÂìÅÊäïÂÖ•ËßÑÊ®°ÊàñÁß∞‚ÄúÊúÄÂ∞èÊúâÊïàËßÑÊ®°‚ÄùÔºåÊäïÂÖ•‰Ωé‰∫éËøô‰∏ÄËßÑÊ®°ÔºåÂ∞±‰ºöÂØºËá¥ÂõûÊä•‰∏∫Èõ∂„ÄÇË∂ÖËøáËøô‰∏ÄËßÑÊ®°ÔºåÂç≥ËøõÂÖ•‰∏Ä‰∏™‚ÄúÂêàÁêÜËßÑÊ®°‚ÄùÂå∫Èó¥ÔºåÂú®Ëøô‰∏ÄÂå∫Èó¥ÂÜÖÔºåËøΩÂä†‰∫∫ÂìÅÊäïÂÖ•ÈÉΩ‰ºöÂæóÂà∞ÂõûÊä•„ÄÇ ‰∫∫ÂìÅÁàÜÂèë ‰∏ÄÂÆöÊù°‰ª∂‰∏ãÔºåÂ≠òÂú®‰ª•Âçï‰ΩçÊúÄÂ∞è‰∫∫ÂìÅÊäïÂÖ•ÈáèËé∑ÂæóÊúÄÂ§ßÂçï‰ΩçÁöÑÊî∂ÁõäÁöÑÁÇπÔºåÁß∞‰∏∫‚Äú‰∫∫ÂìÅÁàÜÂèëÁÇπ‚Äù„ÄÇ‰ΩÜËøôÁßç‰∫ã‰ª∂ÁöÑÂèëÁîüÊó∂Èó¥„ÄÅÂú∫ÊâÄÁ≠âÂæÄÂæÄÈöæ‰ª•Á°ÆÂÆö„ÄÇ Áî±‰∫∫ÂìÅÁ≠âÂàÜÈÖçÂÆöÂæãÂèØÂæóÔºåÂçï‰ΩçÊúÄÂ∞è‰∫∫ÂìÅÊäïÂÖ•ÈáèËé∑ÂæóÊúÄÂ§ßÂçï‰ΩçÁöÑÊî∂ÁõäÁöÑÁÇπÂ∞±ÊòØËµ∑ÂßãÁÇπ„ÄÇ‚Äú‰∫∫ÂìÅÁàÜÂèëÁÇπ‚Äù‰∏é‰πãÁüõÁõæÔºåÂ¶Ç‰ΩïËß£ÈáäÂë¢ÔºüÂêéÁªèÁßëÂ≠¶ÂÆ∂ËµµÊòéÊØÖ (?-2007)Á†îÁ©∂Ôºå‰∫∫ÂìÅÁàÜÂèëÂéüÂõ†ÊòØ‰ªñÁöÑÊïÖÂúü‚ÄìÈîëÊòüÊòüÁêÉÊúâÈáçË¶ÅÂÖ≥Á≥ª„ÄÇÈîëÊòüÁâπÊúâÁâ©Ë¥®Á£∑ÂåñÂç§(R?P)ÔºåÁêÜÂåñÁâπÊÄßÁî±‰∫éËµµÊòéÊØÖÁöÑÁ¶ªÂ•áÂ§±Ë∏™ÔºàÔºüÔºâËÄåÊµÅÂ§±„ÄÇÂÖ∂Áã¨ÁâπÁöÑÁöÑÂèçÈáçÂäõÊÄß(Êé¢‰Ωö‰∏ìÂÆ∂Ëá™„ÄäÂ§ßÈîëËµµÊòéÊØÖ„ÄãÁõ∏ÂÖ≥Á´†ËäÇÊé®Âá∫)‰ΩøÂæóÈÉ®ÂàÜÊ∏∏Á¶ªÊÄÅÁ£∑ÂåñÂç§‰ºöËÑ±Á¶ªÈîëÊòüÔºåË¢´Âñ∑Â∞ÑÂá∫ÂéªÔºå‰ªéËÄåÂØπ‰∫∫ÂìÅÂàÜÂ∏É‰∫ßÁîüÂπ≤Êâ∞ÔºåÂØºËá¥ÈÉ®ÂàÜÊó∂Èó¥‰∏éÂú∫‰∫∫ÂìÅËøêË°åÊú∫ÁêÜÊâ≠Êõ≤„ÄÇÁî±‰∫éÂéÜÂè≤ÂéüÂõ†Ôºå‰∫∫ÂìÅÁàÜÂèëÂ∏∏Ë¢´ÂΩíÁªì‰∫éË°åÂñÑÔºåÁé∞Âú®Ëøô‰∏™Ê¶ÇÂøµÂ∑≤Áî±ÂõΩÈôÖ‰∫∫ÂìÅÁ†îÁ©∂Âçè‰ºö(International Characteric Research AssociationÔºåGCRA[ËÑöÊ≥®])ËßÑËåÉÂåñÔºåÂΩ¢Êàê‰∫ÜÁõÆÂâçÁöÑÈÄöÁî®Ë°®Ëø∞‰∏éËß£Èáä„ÄÇ RPÁöÑÂèòÂåñÂõ†Á¥† ÊÄªÁöÑÊù•ËØ¥ÔºåRPÁöÑÂèòÂåñÂõ†Á¥†‰∏çÂèØÊéßÂõ†Á¥†ÊØîÂèØÊéßÂõ†Á¥†Âç†ÁöÑÂõ†Á¥†ËøòÂ§öÔºåÂèëÁîüÂú®Ë∫´ËæπÁöÑ‰ªª‰Ωï‰∫ãÈÉΩÂèØËÉΩÊîπÂèò‰Ω†ÁöÑRPÔºåÊ≠£ÊòØÂõ†‰∏∫ËøôÊ†∑ÔºåRPÊâçÁªèÂ∏∏ÂèòÂåñ‰∫éÊó†ÂΩ¢‰∏≠Ôºå‰ΩÜÊòØËøô‰∏çÊòØÊàë‰ª¨ÊîæÂºÉÁ†îÁ©∂RPÁöÑÁêÜÁî±ÔºåË¶ÅÂú®Â§çÊùÇÁöÑÊÉÖÂÜµ‰∏≠ÊèêÁÇºÂá∫ÁÆÄÂçïÁöÑËßÑÂæãÔºåÂåñÁπÅ‰∏∫ÁÆÄ„ÄÇÁ¨îËÄÖÁªèËøáÂ§öÂπ¥ÂÆûË∑µËßÇÂØüÊÄªÁªìÔºåÂàóÂá∫‰∫ÜÂ¶Ç‰∏ãË°®Ê†ºÊèèËø∞ÂêÑÁßçÂõ†Á¥†‰∏éRPÁöÑÂèòÂåñÂÖ≥Á≥ªÔºö ‰∫ã‰ª∂ ÂØπRPÂΩ±ÂìçÔºàÂçï‰ΩçÔºöfsÔºâ ËÄÉËØïÁàÜ0 +6 ÊòüÈôÖÔºåÁæΩÊØõÁêÉÁ≠âË¢´Ëôê +5 Êâ∂ËÄÅÂ•∂Â•∂ËøáË°ó +3 ÊòüÈôÖÔºåÁæΩÊØõÁêÉÁ≠âËôê‰∫∫ -10 ÂÖ´Âç¶zmy -20 Âú®jf‰∏çÂπ∏Êª¥ÁúãËßÅÊüê‰∫∫ -100 ÔºàÊ≥®ÔºöÂçï‰Ωç‚Äúfs‚ÄùÁöÑÂÆö‰πâ‰∏∫Ôºövijos‰∏äAC‰∏ÄÈÅìÈ¢òÊâÄÈúÄË¶ÅÁöÑRPÁöÑÈáèÔºâ Áî±‰∏äËø∞Ë°®Ê†ºÂèØ‰ª•ÁúãÂá∫ÔºåÁßØÁ¥ØRPÊòØ‰∏çÂÆπÊòìÁöÑÔºå‰ΩÜÊòØÁßØÁ¥ØÁöÑRPÂç¥ÂæàÂÆπÊòìÂú®‰∏çÁªèÊÑè‰πãÈó¥‰∏¢Â§±ÔºåÔºàÊâÄË∞ì‚ÄúÂ§ßËá™ÁÑ∂ÂéåÊÅ∂È´òRP‚ÄùÔºå‰πüÂ∞±ÊòØËØ¥ÔºåRPË∂äÈ´òÁöÑ‰∫∫Ôºå‰∏¢Â§±RP‰πüÂ∞±‰ºöÊòæÂæóË∂äÂÆπÊòìÔºâ„ÄÇËøôÂ∞±ÊòØ‰∏∫‰ªÄ‰πàÂæàÂ§ö‰∫∫Êä±ÊÄ®Ëá™Â∑±ÁöÑRP‰ªéÊù•Â∞±Ê≤°Â•ΩËøáÔºåÈÇ£ÊòØÂõ†‰∏∫‰ªñ‰ª¨Â•Ω‰∏çÂÆπÊòìÊúâÁÇπRP‰∫ÜÔºåÂç¥Áî±‰∫éËá™Â∑±‰∏çÂ∞èÂøÉÂèàÂÅöÁöÑÊçüRPÁöÑ‰∫ãÊÉÖËÄåÊääÂÆùË¥µÁöÑRP‰∏¢Â§±‰∫Ü„ÄÇÔºàRPÊòìËΩ¨Âåñ‰∏∫Áé∞ÂÆûÂà©ÁõäÔºå‰∏îRPÊòìÊå•ÂèëÔºâ ‰∫∫‰∏∫Ë∞ÉËäÇRPÁöÑÊäÄÂ∑ß‰∏éÊñπÊ≥ï ËØ¥ÂÆûËØùÔºåÂØπËøô‰∏ÄËäÇÁöÑÂÜÖÂÆπÁ¨îËÄÖÊ≤°ÊúâÂçÅÂàÜÁöÑÊääÊè°ÔºåÂõ†‰∏∫Á¨îËÄÖÊú¨‰∫∫ÂØπËøôÈÉ®ÂàÜÂÜÖÂÆπ‰∏ÄÁõ¥ÈÉΩÂæàÂõ∞ÊÉëÔºåÊàëÂ∏åÊúõËÉΩÈÄöËøá‰∏Ä‰∫õËÆ§‰∏∫ÊâãÊÆµË∞ÉËäÇÂèØÊÄúÁöÑRPÔºå‰ΩÜÊòØÁêÜËÆ∫Ë∑üÂÆûË∑µÁöÑÂ∑ÆË∑ùÂæÄÂæÄÁõ∏ÂΩìÂ§ßÔºåÊàëÁêÜËÆ∫ÂàÜÊûêÊÄªÁªìÁöÑËßÑÂæãÂú®ÂÆûË∑µ‰∏≠ÊúâÊó∂Âπ∂‰∏çËÉΩË°åÈÄöÔºåÂ∞±ÂÉèÊàëÊúâÊó∂ÂÄôÂèØ‰ª•Âú∞ÈÅµÂÆà‰∫§ÈÄöËßÑÂàôÔºå‰∏çÈóØÁ∫¢ÁÅØÔºåÂê¨Â¶àÂ¶àÁöÑËØùÁ≠âÁ≠âÁ≠âÁ≠âÔºåÂéüÊú¨‰ª•‰∏∫ËøôÊ†∑ÂèØ‰ª•ÁßØÁ¥ØRPÔºåÊó†Â•àËÄÉËØïËøòÊòØË¶ÅÁàÜ0ÔºåËØ¥ÁôΩ‰∫ÜÂ∞±ÊòØRPÂØπ‰∫∫‰ºº‰πéÊúâÂ§©ÁîüÁöÑÊäµËß¶ÊÉÖËäÇÔºåÊúÄÁªèÂÖ∏ÁöÑ‰æãÂ≠êÊòØ‰∏éÁ¨îËÄÖÂêåÊ†°ÁöÑ‰∏Ä‰∏™Âè´LKQ(ÂåñÂêç)ÁöÑÂêåÂ≠¶Âú®NOI‰πãÂâç‰∏çÂπ∏Â∞ÜËá™Â∑±ÁöÑÊâãÊú∫Êêû‰∏¢ÔºåÊú¨‰ª•‰∏∫Ëá™Â∑±RP‰ºöÂ¢ûÈïøÂà∞‰∏ÄÂÆöÁöÑÁ®ãÂ∫¶Ôºå‰ª•Â∏ÆÂä©Ëá™Â∑±Âú®NOI‰∏äËé∑ÂæóËæÉÂ•ΩÁöÑÊàêÁª©ÔºåÁªìÊûú‰∫ã‰∏éÊÑøËøùÔºåNOIËøòÊòØ‰∏çÂπ∏ËÄÉÊåÇÔºåÊâÄ‰ª•Êàë‰ª¨ÂàÜÊûê‰∏Ä‰∏™Áé∞ÂÆûÁîüÊ¥ª‰∏≠ÁöÑRPÈóÆÈ¢òÔºå‰∏ÄÂÆö‰∏çËÉΩÊãòÊ≥•‰∫éÊüê‰∏Ä‰∫õ‰∫ãÊÉÖÂØπ‰∫é RPÁöÑÂΩ±ÂìçÔºåËÄåÂ∫îËØ•Á∫µËßàÂÖ®Â±ÄÔºåÂÆ¢ËßÇËÄÉËôëÂêÑÁßçÂõ†Á¥†ÁöÑÂΩ±ÂìçÔºåÊâçËÉΩÊúÄÂêéÂæóÂá∫ÂáÜÁ°ÆÁöÑÁªìËÆ∫Ôºå‰∫ãÂÆûËØÅÊòéÈÇ£‰ΩçÂêåÂ≠¶Âú®NOI‰∏äË¢´ÂÆ§ÂèãÂ°û‰∫ÜÊª°Êª°‰∏ÄÊäΩÂ±âÁöÑÁ°¨Â∏ÅÔºåÁ°¨Â∏ÅËôΩÂ∞èÔºå‰ΩÜÂØπRPÁöÑÂΩ±ÂìçÂç¥ÊòØÂ∑®Â§ßÁöÑÔºåÊ≠£Â¶ÇÂàöÊâçËÆ∫Ëø∞ÁöÑÔºåRPÂ§±ÂéªÂÆπÊòìËé∑ÂæóÈöæÔºåËôΩÁÑ∂ÊâãÊú∫ÁöÑ‰ª∑ÂÄºËøúÂ§ß‰∫éÁ°¨Â∏ÅÔºå‰ΩÜÊòØÂØπ‰∫éÂ§±ÂéªÊâãÊú∫RPÊúâÊâÄÂ¢ûÈïøÁöÑËøô‰Ωç‰ªÅÂÖÑÊù•ËØ¥ÔºåËé∑ÂæóÁ°¨Â∏ÅÊâÄÊçüÂ§±ÁöÑRPÊõ¥ÊòØ‰∏Ä‰∏™ÊÅêÊÄñÁöÑÊï∞Â≠ó„ÄÇÊâÄ‰ª•Ë¶ÅÂÆ¢ËßÇÂíåÂÖ®Èù¢Âú∞ÂàÜÊûêÈóÆÈ¢òÔºåÊâçËÉΩËé∑ÂæóÂáÜÁ°ÆÂíåÊúâÊïàÁöÑÁªìËÆ∫„ÄÇ ‰ΩÜÊòØÊàë‰ª¨‰∏çËÉΩÂõ†Ê≠§Â∞±ÊîæÂºÉÂØπRPÁöÑË∞ÉËäÇÔºåÊàë‰ª¨ÈúÄË¶ÅÊåÅ‰πã‰ª•ÊÅíÁöÑË∞ÉËäÇRP„ÄÇÂõ†‰∏∫Ê†πÊçÆSWÁöÑÁªèÈ™åÊù•ÁúãÔºåËøΩMM„ÄÅË∞àÊÅãÁà±Á≠â‰∫ãÊÉÖÈúÄËÄóË¥πÂ∑®Â§ßÁöÑRP„ÄÇ‰æãÂ¶ÇÔºöSW 6 RPÁöÑÂ•áÂæã ÂíåÂÖ∂Â•≥ÂêåÂ≠¶‰∏ÄËµ∑ÂêÉÂÆåKFCÂá∫ÂéªÁöÑÊó∂ÂÄôÔºåÂÖ∂Â•≥ÂêåÂ≠¶ËØ¥‰πüËÆ∏Êàë‰ª¨Âá∫ÂéªÂ∞±‰ºöË¢´Ê±ΩËΩ¶‰∏ÄËµ∑ÊíûÊ≠ªÔºå‰∏∫‰∫ÜÈÅøÂÖçËøôÁßçÊÇ≤ÂâßÂèëÁîüÔºåSW‰∏çÂæó‰∏çÊîØ‰ªòÂ§ßÈáèRP‚Ä¶‚Ä¶ÊâÄ‰ª•ÂêÑ‰ΩçÈúÄË¶Å‰∏çÊñ≠ÁöÑÁ¥ØÁßØRPÔºåÊù•Â∫î‰ªòÂêÑÁßçÁ™ÅÂèëÁä∂ÂÜµ‚Ä¶‚Ä¶ RP‰πãÂèòËØàÂá†‰ΩïÂìâÔºüÊ≠¢Â¢ûÁ¨ëËÄ≥„ÄÇ RPÁöÑÂ•áÂæã ‰ªª‰ΩïÁêÜËÆ∫ÈÉΩÊúâÂÖ∂Â±ÄÈôêÊÄßÔºåÂΩìÁÑ∂ÁªèÂÖ∏RPÁêÜËÆ∫‰πüÊòØ‰∏ÄÊ†∑ÔºåÊüê‰∫õÊó∂ÂÄôRP‰ºö‰ªéÊüê‰∏™‰∫∫Ë∫´‰∏äÂ§ßÈáèÁöÑÊ∂åÁé∞Ôºà‰øóÁß∞:RPÁàÜÂèë)ÔºåËÄåÊ≠§‰∫∫‰πãÂâçÁöÑRPÂÄºË°®Áé∞Âπ≥Â∏∏ÁîöËá≥Âæà‰ΩéÊàñËÄÖÊòæÁ§∫‰∏∫Ë¥ü„ÄÇËøôÁßçÁé∞Ë±°Áß∞‰∏∫RPÁöÑÂ•áÂæã„ÄÇRPÁàÜÂèëÁõ∏ÂΩìÁΩïËßÅÔºåÂõ†Ê≠§Á†îÁ©∂ÁîöÂ∞ëÔºåÊàêÊûúÊúâÂæÖÂÆåÂñÑ„ÄÇ ‚Äî‚ÄîÂá∫Ëá™Ë•øÂçóOIÂâëÊ¥æCDQZÂàÜÈÉ®ÂºüÂ≠ê]]></content>
      <categories>
        <category>ÂÖ∂ÂÆÉ</category>
      </categories>
      <tags>
        <tag>ÂÖ∂ÂÆÉ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêDP„Äë1007-B]]></title>
    <url>%2F2017%2F10%2F07%2F%E3%80%90DP%E3%80%911007-B%2F</url>
    <content type="text"><![CDATA[È¢òÊÑè ËøôÊòØ‰∏Ä‰∏™‰º™¬∑‰∏âÂÄçÁªèÈ™åÈ¢ò„ÄÇ ‰º†ÈÄÅÈó®Ôºö1007-B Alternative Question: P1004 NOIp2000TG-4ÊñπÊ†ºÂèñÊï∞„ÄÇ P1006 NOIp2008TG-3‰º†Á∫∏Êù° ÁªôÂÆö‰∏Ä‰∏™n√ómn \times mn√ómÁü©ÈòµÔºå‰ªé(1,1)(1,1)(1,1)Ëµ∞Âà∞(n,m)(n,m)(n,m)Ëµ∞‰∏§Ê¨°ÔºåÂè™ËÉΩÂêëÂè≥ÊàñÂêë‰∏ãÔºåÂ∏åÊúõÈô§ÂßãÊú´‰∏§ÁÇπ‰ª•Â§ñÂÖ∂‰ªñÁÇπ‰∏çÁõ∏‰∫§ÔºåÈóÆË∑ØÂæÑÊúÄÂ§ßÊùÉÂÄºÂíå„ÄÇ Ëß£Ê≥ï ÂõõÁª¥dpÔºådp[x][y][z][w]‰∏∫ÂΩìÁ¨¨‰∏Ä‰∏™‰∫∫Âú®(x,y)(x,y)(x,y)Á¨¨‰∫å‰∏™‰∫∫Âú®(z,w)(z,w)(z,w)Êó∂ÊúÄÂ§ßÊùÉÂÄºÂíå„ÄÇÂèØÊé®Âá∫ÊñπÁ®ãÔºö dp[i][j][k][l]=max(dp[i‚àí1][j][k‚àí1][l],dp[i‚àí1][j][k][l‚àí1],dp[i][j‚àí1][k‚àí1][l],dp[i][j‚àí1][k][l‚àí1])dp[i][j][k][l] = \max(dp[i-1][j][k-1][l], dp[i-1][j][k][l-1], dp[i][j-1][k-1][l], dp[i][j-1][k][l-1])dp[i][j][k][l]=max(dp[i‚àí1][j][k‚àí1][l],dp[i‚àí1][j][k][l‚àí1],dp[i][j‚àí1][k‚àí1][l],dp[i][j‚àí1][k][l‚àí1]) ‚Äã +a[i][j]+a[k][l]√ó[i‚â†k‚à£‚à£j‚â†l]+a[i][j] + a[k][l] \times [i \ne k || j \ne l]+a[i][j]+a[k][l]√ó[i‚â†k‚à£‚à£j‚â†l] Ê≥®ÊÑèÂΩìi=k,j=li = k, j = li=k,j=lÊó∂Ôºåa[i][j]=a[k][l]a[i][j]=a[k][l]a[i][j]=a[k][l]„ÄÇÊâÄ‰ª•ÂøÖÈ°ªÂáèÂéª‰∏Ä‰∏™a[k][l]a[k][l]a[k][l]„ÄÇ ‰ª£Á†Å 12345678910111213141516171819202122232425262728293031// ‰ª£Á†Å‰∏∫ P1004ÊñπÊ†ºÂèñÊï∞#include &lt;bits/stdc++.h&gt;using namespace std;int dp[15][15][15][15];int a[15][15];int x, y, z;int n;int main() &#123; scanf("%d", &amp;n); scanf("%d%d%d", &amp;x, &amp;y, &amp;z); while (x || y || z) &#123; a[x][y] = z; scanf("%d%d%d", &amp;x, &amp;y, &amp;z); &#125; dp[1][1][1][1] = a[1][1]; for (int i = 1; i &lt;= n; i++) &#123; for (int j = 1; j &lt;= n; j++) &#123; for (int k = 1; k &lt;= n; k++) &#123; for (int l = 1; l &lt;= n; l++) &#123; if (i == 1 &amp;&amp; j == 1 &amp;&amp; k == 1 &amp;&amp; l == 1) continue; dp[i][j][k][l] = max(max(dp[i-1][j][k-1][l], dp[i-1][j][k][l-1]), max(dp[i][j-1][k-1][l], dp[i][j-1][k][l-1])) + a[i][j] + a[k][l] * (i != k || j != l); &#125; &#125; &#125; &#125; printf("%d", dp[n][n][n][n]);&#125; ÊãìÂ±ï ËøôÊòØ‰∏Ä‰∏™&quot;ÂèåÁ∫øÁ®ãDP&quot;„ÄÇÂá†‰∏™‰∫∫ÂêåÊó∂Ëµ∞ÁöÑÈóÆÈ¢òÂèØ‰ª•ËÄÉËôëÂ¢ûÂä†Áª¥Â∫¶Êù•Ëß£ÂÜ≥„ÄÇ]]></content>
      <categories>
        <category>DP</category>
      </categories>
      <tags>
        <tag>DP</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>%2F1949%2F10%2F01%2F.well-known%2Facme-challange%2F-yzfgYhMsZoBE3HHQ2mwQc7HtoJk1_AfS5t-DAcSmjI%2F%2F</url>
    <content type="text"><![CDATA[-yzfgYhMsZoBE3HHQ2mwQc7HtoJk1_AfS5t-DAcSmjI.WLkG6GU4dDfNVnhiQ3tDj-llxertpm4na0H9pQBq62M]]></content>
  </entry>
  <entry>
    <title></title>
    <url>%2F1949%2F10%2F01%2F.well-known%2Facme-challange%2FSN8OvFrfM3nWr4-lhbtxyemY-9Te8VX_s1Ho5wz3XAk%2F%2F</url>
    <content type="text"><![CDATA[SN8OvFrfM3nWr4-lhbtxyemY-9Te8VX_s1Ho5wz3XAk.WLkG6GU4dDfNVnhiQ3tDj-llxertpm4na0H9pQBq62M]]></content>
  </entry>
</search>
